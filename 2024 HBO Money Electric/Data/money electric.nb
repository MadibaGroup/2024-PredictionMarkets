(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    767068,      13072]
NotebookOptionsPosition[    765465,      13039]
NotebookOutlinePosition[    765862,      13055]
CellTagsIndexPosition[    765819,      13052]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"part1", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<part1.csv\>\""}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Remove", " ", "tail", " ", "end", " ", "columns", " ", "that", " ", 
    "have", " ", "no", " ", "prices"}], " ", "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"Select", "[", 
     RowBox[{"part1", ",", 
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{"#", ",", "_Missing"}], "]"}], "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Remove", " ", "first", " ", "column", " ", "because", " ", "extra", " ", 
    "time", " ", "is", " ", "redundant"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"data1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Convert", " ", "timestamps", " ", 
     RowBox[{"(", 
      RowBox[{"column", " ", "1"}], ")"}], " ", "into", " ", "Mathematica"}], 
    "-", 
    RowBox[{"friendly", " ", "date", " ", "object"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Timestamp", "[", "ts_", "]"}], ":=", 
   RowBox[{
    RowBox[{"DateObject", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1970", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}], 
       "}"}], ",", 
      RowBox[{"TimeZone", "->", "\"\<UTC\>\""}]}], "]"}], "+", 
    RowBox[{"Quantity", "[", 
     RowBox[{"ts", ",", "\"\<Seconds\>\""}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data1", "=", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Timestamp", "[", "#", "]"}], "&"}], ",", 
      RowBox[{"Rest", "[", "data1", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Grab", " ", "head"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"head1", "=", 
    RowBox[{"Rest", "[", 
     RowBox[{"part1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Convert", " ", "whole", " ", "thing", " ", "into", " ", "Mathematica", " ",
     "dataset"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ds1", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{"head1", ",", "#"}], "]"}], "&"}], "/@", "data1"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"part2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<part2.csv\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"part2", ",", 
     RowBox[{
      RowBox[{"FreeQ", "[", 
       RowBox[{"#", ",", "_Missing"}], "]"}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"data2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Timestamp", "[", "#", "]"}], "&"}], ",", 
     RowBox[{"Rest", "[", "data2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"head2", "=", 
   RowBox[{"Rest", "[", 
    RowBox[{"part2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ds2", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{"head2", ",", "#"}], "]"}], "&"}], "/@", "data2"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"part3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<part3.csv\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"part3", ",", 
     RowBox[{
      RowBox[{"FreeQ", "[", 
       RowBox[{"#", ",", "_Missing"}], "]"}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{"data3", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Timestamp", "[", "#", "]"}], "&"}], ",", 
     RowBox[{"Rest", "[", "data3", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"head3", "=", 
   RowBox[{"Rest", "[", 
    RowBox[{"part3", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ds3", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{"head3", ",", "#"}], "]"}], "&"}], "/@", "data3"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ds", "=", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Join", "[", 
      RowBox[{"ds1", ",", "ds2", ",", "ds3"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ds", "=", 
  RowBox[{"ds", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Timestamp (UTC)\>\"", ",", "\"\<Len Sassaman\>\"", 
      ",", "\"\<Hal Finney\>\"", ",", "\"\<Adam Back\>\"", 
      ",", "\"\<Nick Szabo\>\"", ",", "\"\<David Kleiman\>\"", 
      ",", "\"\<Other/Multiple \>\""}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.964179197522622*^9, 3.964179370572598*^9}, {
  3.9641794251667013`*^9, 3.96417944696572*^9}, {3.964179570311619*^9, 
  3.964179571761176*^9}, {3.96417990135203*^9, 3.96417991628323*^9}, {
  3.964179974985415*^9, 3.96418004475174*^9}, {3.964180098331974*^9, 
  3.9641800986827993`*^9}, {3.964181541873746*^9, 3.964181574971437*^9}, {
  3.9641816075893393`*^9, 3.9641816182708807`*^9}},
 CellLabel->
  "In[423]:=",ExpressionUUID->"f601e7bc-b88d-4f9a-b312-ff3a520f5a7d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          8678865204587541924742667935523975772116616039263275155496], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Timestamp (UTC)"} -> 
            1, {All, "Len Sassaman"} -> 1, {All, "Hal Finney"} -> 
            1, {All, "Adam Back"} -> 1, {All, "Nick Szabo"} -> 
            1, {All, "David Kleiman"} -> 1, {All, "Other/Multiple "} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Timestamp (UTC)" -> TypeSystem`PackageScope`AtomShape[75], 
                "Len Sassaman" -> TypeSystem`PackageScope`AtomShape[60], 
                "Hal Finney" -> TypeSystem`PackageScope`AtomShape[60], 
                "Adam Back" -> TypeSystem`PackageScope`AtomShape[60], 
                "Nick Szabo" -> TypeSystem`PackageScope`AtomShape[60], 
                "David Kleiman" -> TypeSystem`PackageScope`AtomShape[60], 
                "Other/Multiple " -> TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Timestamp (UTC)", "Len Sassaman", "Hal Finney", "Adam Back", 
             "Nick Szabo", "David Kleiman", "Other/Multiple "}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 10354], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Timestamp (UTC)"} -> 
            1, {All, "Len Sassaman"} -> 1, {All, "Hal Finney"} -> 
            1, {All, "Adam Back"} -> 1, {All, "Nick Szabo"} -> 
            1, {All, "David Kleiman"} -> 1, {All, "Other/Multiple "} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Timestamp (UTC)" -> TypeSystem`PackageScope`AtomShape[75], 
                "Len Sassaman" -> TypeSystem`PackageScope`AtomShape[60], 
                "Hal Finney" -> TypeSystem`PackageScope`AtomShape[60], 
                "Adam Back" -> TypeSystem`PackageScope`AtomShape[60], 
                "Nick Szabo" -> TypeSystem`PackageScope`AtomShape[60], 
                "David Kleiman" -> TypeSystem`PackageScope`AtomShape[60], 
                "Other/Multiple " -> TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Timestamp (UTC)", "Len Sassaman", "Hal Finney", "Adam Back", 
             "Nick Szabo", "David Kleiman", "Other/Multiple "}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 10354], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 7, 
         "DataRowCount" -> 10354, "DataColumnCount" -> 7, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Timestamp (UTC)", 
                    Style[
                    "Timestamp (UTC)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Timestamp (UTC)"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Timestamp (UTC)"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Len Sassaman", 
                    Style[
                    "Len Sassaman", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Len Sassaman"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Len Sassaman"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Hal Finney", 
                    Style[
                    "Hal Finney", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Hal Finney"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Hal Finney"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Adam Back", 
                    Style[
                    "Adam Back", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Adam Back"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Adam Back"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Nick Szabo", 
                    Style[
                    "Nick Szabo", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Nick Szabo"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Nick Szabo"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["David Kleiman", 
                    Style[
                    "David Kleiman", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "David Kleiman"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "David Kleiman"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Other/Multiple ", 
                    Style[
                    "Other/Multiple ", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Other/Multiple "}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Other/Multiple "}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:00:03\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.035"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:01:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.035"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:02:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.035"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:03:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.035"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:04:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.035"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:05:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0345"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:06:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0295"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:07:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0305"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:08:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0295"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:09:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0245"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:10:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0245"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:11:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0245"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:12:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0245"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:13:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0245"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.28"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:14:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0245"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.27"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:15:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0245"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.27"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:16:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0195"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.27"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:17:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0195"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.27"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:18:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0195"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.27"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:19:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.255"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Hal Finney"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Adam Back"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0195"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Nick Szabo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.006"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["David Kleiman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.27"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Other/Multiple "]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 10354, 1], {1, 10354 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 10354, 1], {1, 10354 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[10354, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[10354, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 10354, 1], {1, 10354 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 10354, 1], {1, 10354 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
         Replace[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
            Except[
             Alternatives[
              Blank[Spacer], ""]]] :> 
          TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
           TypeSystem`NestedGrid`PackagePrivate`bar]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {
         653.10181640625, {298.25030114746096`, 303.98223474121096`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {
        653.10181640625, {298.25030114746096`, 303.98223474121096`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 8678865204587541924742667935523975772116616039263275155496,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{
  3.9641792329459887`*^9, 3.964179290720539*^9, 3.96417932547937*^9, 
   3.964179371249542*^9, {3.964179426271925*^9, 3.964179460904583*^9}, {
   3.964179981286127*^9, 3.964180006053158*^9}, {3.9641800366737013`*^9, 
   3.964180045664649*^9}, 3.964180099354019*^9, 3.964180138157411*^9, 
   3.9641815823605347`*^9, {3.964181614516671*^9, 3.964181621345087*^9}},
 CellLabel->
  "Out[443]=",ExpressionUUID->"3afcdb2a-959d-406f-b485-a7632f233994"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Plot", " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"priceColumns", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Keys", "[", 
        RowBox[{"ds", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "~", "DeleteCases", 
       "~", "\"\<Timestamp (UTC)\>\""}], "//", "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"seriesList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"ds", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Timestamp (UTC)\>\"", ",", "col"}], "}"}]}], "]"}],
            "]"}], "]"}], "[", 
         RowBox[{"[", "All", "]"}], "]"}], "//", "Values"}], ",", 
       RowBox[{"{", 
        RowBox[{"col", ",", "priceColumns"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{"seriesList", ",", 
     RowBox[{"PlotLegends", "->", "priceColumns"}], ",", 
     RowBox[{"Joined", "->", "False"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Prices Over Time\>\""}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"ImageSize", "->", "Large"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Time (UTC)\>\"", ",", "\"\<Price (USD)\>\""}], "}"}]}], ",", 
     RowBox[{"DateTicksFormat", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<MonthNameShort\>\"", ",", "\"\< \>\"", 
        ",", "\"\<DayShort\>\"", ",", "\"\< \>\"", ",", "\"\<Hour\>\"", 
        ",", "\"\<:\>\"", ",", "\"\<Minute\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<graph.png\>\""}], ",",
      "%"}], "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9641730481736403`*^9, 3.9641731005690002`*^9}, {
  3.96417948578218*^9, 3.9641795022650414`*^9}, {3.964179550613989*^9, 
  3.964179563480258*^9}, {3.9641796196739388`*^9, 3.964179645047101*^9}, {
  3.964179701019944*^9, 3.964179702586578*^9}, {3.964179756833157*^9, 
  3.964179800835833*^9}, {3.964179837892294*^9, 3.9641798384839277`*^9}, {
  3.9641801484786167`*^9, 3.9641801722074833`*^9}, {3.964180276965837*^9, 
  3.9641802798978558`*^9}, {3.964180336297574*^9, 3.964180377610057*^9}, {
  3.964180453774225*^9, 3.964180479336021*^9}, {3.964180591074054*^9, 
  3.964180592578044*^9}, {3.964180626903277*^9, 3.964180631267274*^9}, {
  3.964180709837414*^9, 3.964180714460758*^9}, {3.964180754347838*^9, 
  3.964180828197126*^9}, {3.964183849677483*^9, 3.964183873341218*^9}, {
  3.964186942466382*^9, 3.9641869442521048`*^9}},
 CellLabel->
  "In[448]:=",ExpressionUUID->"cdaf2313-d3fd-4418-b5f2-681e3623dabc"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{
       TagBox[{
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         PointBox[CompressedData["
1:eJx83XWUleXbxXHERmzsYDCxE2nYdDdDd3d3d0tKKnBI6e686O4UkFDBAhs7
3t99Zr3Dc+01a/uP67O+cz9d5zkDZKjTsmz91KlSpWqTMVWq8P9UqWodzpR4
LU/ONKdmtMp5JneqVHbKGxeoX6H+HfXr1P+hfst7//OIrdczVhsR72m97UHq
T1B/hvrL1N+inpU6gi91Sbeo0KV4L+xtpahXpF6DegPqzam3p96Nlq8fLd9Q
6mOoT6I+naY/l+a/lPoa6kbT30XTP0T9ZHDhpAmEft7bLgdPmhj+i/drwVfL
rHm6/7fx/os3/g5uEP/vs9BvzuyMu7ztAeqPU89A/aXMycsf7296Iwv13NQL
US9JvQL16tTrU29GvR31rtT7Uh9CfTT1idSnZU7e3/E+xxtLguOnZ5rPQ1/t
jc3Ud1I/SP0E9U+pf0H9avA78f/i/Wdv/BVcLb5C8Z46izPSZPHj7w/+38r9
bw3j/bHgsuFwK/NF6AnBXcPqdwlGxuCZrcIVKt7f8EZm6rmCD+wP/8V7Qeol
aHwi9WrU61FvSr0t9S7U+1AfTH0U9QnUY9Q/pr6Y+qrg+K0jVbxv8rYd1A9Q
P079HPXPvRO+pf4Tjf+T+k1Zfb8z+KX4ARPv93njUerpqb9I/XXq71HPSb2A
d6w49fI0vir1utSbUG9DvTP13tQHUR8ZHD8dT8XPn/HemJrVnU822xuLqK+k
vpH6dur7qR+jfpb6Z9S/of6jd8If1FNl8+Pv8LZ7qT/iHXua+gs0/jXqmajn
CP7fxeh/V6R4z5/NX9+KeaMc9SrU61BvTL019U7Ue1EfSH0E9XHUp1CfRX1h
Nn99XpHNX/83eNs26vuoH/XTwxma/iXqX1P/gfrv1P+jfnt23+/xxsPUn6L+
fHZ//33VG+9Sz+6dkI96URpf1jtWmXpt6o2ot6Lpd6Tek/qA7H7/DKc+lsZP
pj6T+gLqy6mvp76V+l7qR6h/Qv0i9a+of0/9N+r/Ur8th+93e+Mh6k9Sf476
K9TfoZ6Nel7qRaiXoV6Jei3qDam3pN6Beg/q/am/T/2D4Pjj2Jp4/4j6DOrz
gyPPt8uCkz5Pxvs6b9tCfQ/1w9RPU79A/Uvq31H/lfo/1G/N6Xtab6Sj/kRw
5PPLs972MvW3aXxW6nlofGHqpalXpF6Tpt+Alr8F9fY0vjtNvx/1YdTH0PQ/
pOlPpz4vOP44ny7el3pjLXWjvpv6Ie+EU9TP0/gr1K9Rv07975zueMYtufzx
fVcuf/w/SP1xbzyTy2+/l7zxFo3PQuPh52eFaP6lqFegXoOmX5+m35zGt6Px
3aj3zeXvL0O9bTT1SdSnUZ9LfQn1NdQ35/LXr13edpCW/yQt/6e0/pdp+1yl
/fML7b+/vBNuzu3Hp/HGA9Qfy+2XL4O3ZaT+JvXM1HNTL0i9JM0/kZavOvV6
1JtRb0u9a263PWJ9vDEkd/L+uxDGj7qxfOdDn3jj54Mt5o05wTfeV9ni4KTn
1zA9rKbpb/LGTv/zdoDGn6B+Ljjp89fF0L/wtm+p/0z9T+qp4fudwUmff+P9
fm97NDh9/ANI/P1bQnDS55P48r3ojTfgl/89b+SiXgB++5TwtvLUq1GvC7//
mlJvQ+O7wO/f3t4YjOTrb7yP9MYE6lNp/Mc0/UXUV1HfSNPfEbwtHM5bPw19
P/XjNP5scOv4DS78PD73tm+Ck94/nQv9JyQfv5+E/oc3bsrj+x3euI/6I9TT
U38h+NewOtdPh/56cNL733jPRD2nt+X3P4/iNL4c9arU6wQnvY+KT7+Jt7Wm
3pl6L+qDqI+gPp76lDzJ51O8zw5Oer8Y7wtp/Eoav4H6dur7qB+jfob6ZzT/
r73xI43/ncanyuv77d64l/rD1J/O6/fv8954jfq71HNQz0fTL5bXr1/ZvMnX
m1OhV8mbfL04GXptGt84r9tf1orGd/K2nv7nMTBv8vUw3od7YxxNfzL1WTR+
AfUV1NfT/LdR30vjj1L/JG/y9THeL3nbV9R/oP4b9f+8Y7fl8/2efH77P+SN
p/IlX9/i/TnvhFfzJV8fT4T+jjey50u+XsbH5/VGUeplqFfO54+fWt5olM/v
v5be6Ei9B/UB1N+nPpb6R/n88TfzxvrGr+/zvbE8n7/+r8uXfP+O963U99zY
vvH7y5Eb2yN+fzlN079I/Uvq39Py/ernh39p/K35E933i3cHR77/TRecdPic
Df1Jb3s2OOn7wfj1/5X8/vr/dn5/fmfztjzUi1AvTb0S9ZrUG1JvQb0D9e7U
++f3x9+w/P74+CA48v3qh9RneNs86svyu/1ta/O7/YEttHy7/fLgcH5//TuV
35/fF7ztCvXvqF/P78//f7ztlgK+p/W2B6k/Qf2ZAv7697K3vUU9awG//VDA
H5+Fg5O+DwzPU1YqOOl5Ov58VZF6jQL+/Gvgbc2DI89n7b2tG/V+1IdSH0Pz
n0TLN53Gz6XxS6mvKeDPX6Pl33Vj+vHPD4cK+PP/JK3/eRp/mfo16r9Q/5v6
zQXd+uKugu56YA944/HgpO9T4tePDAX99eUlb3uTehbquQsmus8/hYKTnk/i
n59KFkzenvHtU6Fg8vkV79UL+u1bv6A/P5sVTHSfn9p5W1fqfakPoT6a+kQ/
P0wr6K/Pc7yxhPpqWv7NBf3+2emNgwUT3eezE7T9PqX+BS3fVZr+z9T/ovVL
XchND2m87X7qjxXy2z+hUKL7fJnR296gnrmQOx8sVyG//Qt6WwnqidSrUa9X
yG0va+qNtjS+Cy1fH1r+wYUS3ef/UdQn+O2BGE3/Y9p+i2n7rqK+ifqOQv74
OuBtx2n8Odo/n9P4b2n5f6Ll/5PG31TYH793Fvbzv88bjxb2009f2E//RRr/
Oo1/j3rOwv78KOBtxWn5yntbVep1qTeh3oZ6Z+q9C7v7hQ3yxsgbP3859PGF
3fUUUwv76+NsWv9FtP1WemOj3562ncbvp+13jPpZ6p9R/4b6j4X9+fMHLV+q
In78HUXc8l281xuPeNvTRfz6vUD9NRqfiXoO6vmpF6NejnoV6nWoN6bla13E
3787Ue9F4wfS9Ef47WXjivjzd4q3zaK+kPqKIv76t4H6Nlq+fUX88X3UG2eo
X6L+tXfsB+q/0/j/qN9e1Pd7vPEw9aeoP0/9VervUs9e1O0v5PO2okX98VvW
2ypTr13U799G3gmtqHcs6rd/T+oDqA/3trHUJ1OfSX0B9eXU11PfSn2vX77Y
kaL++PukqL+/XQy+8byGr7zt++Ckz0fx/pu3/UvTv62Yn/7dxfz1/yFve7KY
3//PFfP795Vifv7vFHP3c8vmjbzF/PYp4o0y1CtRr0W9IfWW1DtQ70G9fzF/
/X2/mD+/P/DGR9RnUJ9PfRn1ddS30PbbUyzRPb8dpvGnafteoO37JY3/zhu/
0vh/aPytxf34tN5IR/0J6s8W99N/2RtvU89KPQ/1wtRLU69IvSb1BtRbUG9P
vTv1ftSHUR9D/UPaPtOpz6PxS6mvpW7Udxf35++h4v74PlXcH1/nvXGF+jXq
16n/Tf2WEr7f5Y101B+n/gz1l6i/RT0LdVAvVMKvfylvq0C9BvX6Jdz1GM1L
+O3bjubfjebfl6Y/lPpoPz1MoulPoz6X+hLqa6hvpr6L+kHqJ6l/Sv0y9asl
/PXxF2/7i/rNJX1P440HqD9GPQP1jNTfpJ6Zem7qBamXpJ5Y0u/f6t5Wj3oz
6m2pd6Xep6Q/PoZ42yjqE4Mjz0cxb8yhvpj6auqbqO+kfqCku5/jREl3v7dz
3viC+rfUfw6OPD/86Y3UpXy/0xv3U3+UegL1F6m/Qf096rmoF6BeIjjy/rG8
N6pRr0vjm9L021DvQr03TX8wTX9kqUT3+XeCt02l/jH1RdRXUd8YHHl/ucPb
9lM/TuPP0vQ/D77xvtq+ofX7idbvD+o3lfb9Dm/cR/2R0n750lN/gca/Tj1T
ab9/clLPT9Mv7m3laPpVS/vzq05pf341Ke2vr61L+/O/s7f1oj6I+gjvhPHU
p/jlwezS/vxd6I2VNH4DzX879X3UjwVHnl/O+PXFZ7T+X9P2+5G2/+/UU5Xx
/fYyfv/d620Pl/Hr93QZv3+eL+OX/7XgyJ8PfDc48nyQg8bnK+Ov/8WCI39+
sGwZv/5VvK029cbUW9HydaL59/TGwDLueLPh3hhHfTL1WdQXUF9B819P23eb
t+2lfpT2zye0/y5R/4r6D9R/o+33Xxl/f7+trL//3+NtD1F/qmzy+R0/fp8r
m+g+37xa1h/f73gjO/W81IsGRz6/lymb6L6fqexttfzyoFFw5PN9S290pN6D
+oDgyPdD7/vlwVha/4+oz6Tln099OfV1ZZP3T/z3V7cGR/78yZ6yie73V4+U
TT6f4v102eTjP94vlk0+/uK/f/llcOTP735fNvl4jZ9/v5Z15zP+9bZby/nx
d5fzPV255OMt3p+k/mw5v31f8ba3y/n9l83b8lAvQr009UrUa1JvSL0F9Q7U
u1PvT30Y9Q+of0h9BvV51JfR9llLfQuN3039MPVT1C9Qv0L75zua/3Xq/1C/
pbzvab3tQepPUH+G+svU36KelTqoF6ZeinrF8n79a3ijAY1vTuPbU+9G4/vR
9IfS+DE0fhKNn07j59L4peXd9dbWeMOo76J+iKZ/kuZ/nvplmv816r/Q+L+p
35zor393JbrrhT3gjccT/fUjgzdeov4m9SzUc1MvlJh8v433kt6oQL069fqJ
/v7QzBvtqHel3pf6EOqjqU+kPo36HOpLqK+m7buZtv/ORH99P5jo7w8nvPEp
9S9o/FXqP9P4v6inruB7mgpuena/Nx6r4PdvgjcyVvDr9waNz1zBb59c3ihI
40t4I5F6NRpfj6bflMa3pd6FxvcJjjzfDKbxo2j8BBofo/Efe2Mx9VXUN1Hf
Qf0Azf84zf8c9c9p+b+t4K4H9pM3/qR+U0Xf76zol+8+bzxKPT2Nf9HbXqf+
Ho3PSdMvQL049fLUq1KvS/NvQvNvQ71zRb99e3vbIOojK/rjczzNfyot32wa
v4j6Shq/kfp26vupH6N+ltbvM+rf0Pgfqf9R0d9fUlXy2+8Ob7uX+iPUn6b+
AvXXqGeinoN6/kp++Yp5oxz1KtTrUG9cyd9/W3tbJ+q9qA+kPoL6OOpTqM8K
jjw/LKS+gsZvoL6N+j7qR6mf8fOzSzT/r6n/QP136v9Rv72yn/893niY+lPU
n6f+KvV3qWenno960cp++cp6W2Xqtak3ot6KesfK/vzuWdmfXwOoD6c+trK/
P08Ojvx+0cwb6xP/+0cWVE4+fuN/P8lyb6ynvpX6XupHqH9C/SIt/1c3enz5
v/fGb/7n7V+/vritih9/dxV/fj9UxW+fJ73xHPVXqL9DPRv1vDT/ItTL0PhK
1GtRb0i9JfUOVfz9uYe39a+S6J5/3/e2D6h/RH0G9fnUl1FfR30L9T3UD1M/
Tf0C9S+DI+9HvgtOen+Z9Of/g5P+fEPSn//3xq1V/fi0wZHny3RV3fliTwRH
/n60Z/3P28vU36bpZ6Wex9sKV/XHZ+mq/vipWNXv/5re1oB6Cz89ax8c/f4/
OPJ+sJ83hvmftzE0/Q+r+uvH9Kp++8+j9V9a1W//td5mwZH3X7uDI3+++1Dw
iBt//viUt52nfoX6NVq+6972Ny3fLdX8/r/LGw9Sf5z6M9Rfov5WNb//s3gD
1fzyFaJeisZXqJa8/FdCr+Ft9YOTPl+F/YXm1dz13tpVS97/8feX3ar5/dOX
5j+U5j/6xvrFpz/J26ZVc8cL5lZLPj7iy7ekWvL1Kt7XVEs+fuPLt5mWb1c1
f3wc9NsLJ4Pjk4v/fU72qTcuB0fev14NPnXj79f6xdv+on5zdd/TVE++X8fv
bw9Ud8trj1V380MGb8tI/U3qmannpl6QeknqidSrU69HvRn1ttS7Vnfnq/Xx
xhDqo6hPpB6jPqe6P/4XV/fn92pv20R9J03/QHV3vOCEt52j+X9B8//WGz9T
/5N66hq+3+mN+2v45X/UGwk1/Pn3IvU3aPx7wZHvH3LV8PuvQHDk778q4W3l
a/jtU43G163ht09T//PWxv88utD43tQHUx9ZI/l6Ej//J9RIvt/Ez/+pNfz5
+7FfHltUw18fVt1Yvy9D33hje8avjztq+OvP/hr++nS8hr9+nfU/j8/9z9s3
Nfz5/1MNf339o0by/TTeb6rp7493eOM+6o9QT1/TH18v1PT3r9dr+utzJhqf
k3r+mn77Ffe2ctSrUq9DvUnN5OMjvn1b1/Tbr3NNv316BUc+Hwyq6bfviJp+
+46v6banTfHGbOoLafxKb9tAfTv1fTXd/QjHaPnPeOMzvz72dU13PONH6r/T
9ktVy2/f271xL/WHqT9N/Xnqr9Vy1wt71xs5qOejXqyWP//KeqMK9dq1/PWr
sbe1ot6Jek/qA6kPpz6O+uRa/vifVctfXxd4YwX19dS3Ud9L/Sj1T6hfov4V
9R9o+X+j/h+Nv6227/fU9tePh7zxFPXnqL9K/R3q2annpV6UehlavsreVot6
I+otqXek6feg+Q+g/j71sdQ/qu2uh5gZHPn8PN8by6mvq53o3k9sDY68n9jj
jSO1E93nt9PeuEjjv6Tx3wdHvj/51Rv/3phe/PeHbq2TvHzx3y+6u47v6bzx
JPVn6yS63397xdvepp6Neh7qRfzyWGlavkrBp278+baa3mhYJ3n7x38/pgVN
vwNNvztNvz8t3zCa/ge0/h8GJz1PxPuMOonu7weY541ltHxraftuofnvpn64
TqL7/aJT3rhA/Qr176hfp/4P9VvqJrrf/0rrbQ9Sf4L6M9Rfpv5W3UT3+1tZ
vQ3UC1MvRb1i3UT3+2M1aP4N6ia6399r7o321LtR70d9KPUxdf32m1TXH3/T
vW1uXXc8YCmt3xo/PZj/edtF63+orj++T3rjPPXLwZHfb7vmbb9Q/5v6zfX8
/O/ytgeoP17Pj89Qz6//SzT+TRqfpZ7f/rnrJbr344VuTC/p+/96/vpYwduq
U69PvRn1dn5+1jU48n6sr7cNofGjqU+k8dOozwmOvH9c4m2r6yW695+bqe+s
5+8fB73tBPVPqX9Rz9+/rgZH3h/+HBz5/uMvb0td3++fNN52f32//o95WwL1
jNTfoJ65vj//c1EvGBz58wklvJFIvRr1ejT9pjT9trR8XWh8H5r+YOqj6vvj
e4I3YtQ/ru/P78Xetor6Juo7qB+gfpz6OeqfU//WO/YT9T9p/E0NfL/T2+6j
/ij19NRfpP56A3/9fc/bclIvQOOL0/TLU69KvS71JtTbUO9MvTf1QdRHUh9P
yz+V1m829UXUV1LfSH079f3UjwXf+PMOOOttn1H/hvqPwZHnpz+CI39/TKqG
zrjD2+6l/gj1p6m/QP016pmo56Cen3ox6uWoV6Feh3pj6q0b+u3TKTjy/Nir
odteNjA48nw6wtvGUZ9CfRb1hdRXUN8Q3D/575uwbd7YR/0ojT9D079E/Wvq
P1D/nfp/1G9v5Ps93niY+lPUn6f+aiN//L/byO+f7I388ZvP24pSL0u9ciO/
/WpTb9TI7/9W3taRpt+Txg+gPpzWbyyt/2TqM6kvoL6c+nrqW6nvpX6E+ifU
L1L/ivr31H+j9f+X1v+2xn773e2Nh6g/Sf056q9Qf4d6Nup5qRcJTnp/Ee9l
qFeiXsvbGlJvSb1DY3989Wjsr9/9G/vt8763fUD9Iz89m0F9Po1fRn0d9S3U
91A/3NjfP0572wXqX1L/jvqv1P+h/XNrE7/90nojHfUnmvjr97Pe9jL1t6ln
pZ6Hpl+Y5l+axlek8TWpN6Degnp76t2p92vi98+wJn77jfHGh9SnU59HfSn1
tdSN+m7qh6if8str52n5r1C/Rv069b+p39LUX3/uaur7g039+fu4N56h/hL1
t6hnoY6mfv0LeaMU9QrUa1CvT7059XZN/f2vG61/X28MpT6a+iTq06jP9dvT
ltD2XUN9M/Vd1A9SP0n9U+qXm/rr21Vv/EL9L+o3N/M9jTceoP4Y9QzUMzbz
y/emt2Vu5vdf7uDI+8mCNP2Szfz2T6Tx1b2tHvVmtHxtafm6BkfeT/WhPqSZ
v/+M8suDicGR90Mxvz6YExz5/LOYxq8Ojrw/2uSXBztp+Q5QP0H9HPUvgqN/
/t8bP3vH/vTrg9TN/fTv9Mb91B+lntDc798Xm7vtgTe87b3mfvlyeVsBmn4J
mn956tWo16XelJavjTe6UO9NfTD1kc3d/sQEWv6pNP5jGr+I+irqG6nvCI68
v9nf3O+/4952lvrn1L+h/hNtvz+CI++nb2rhbHcE33jfhPuoP+KN9NRfaOG3
3+velonG56Tx+akXp16OelXqdag3CY68/2pNvXMLv/16BUd+P3EQjR8RHHm/
Op76FG/Mpr6Q5r8yOPJ+bQP17TR+n/95HGuR6N5vnmnhjid85venfU3L9yNN
/3fqqVr68be39NO/19se9j+Pp2n889Rfo/4u9Rwt/fLlo16MxpelXqWlPz5q
t/TXj8be1qqlPz87tfT3n54t/f1pYEt/fxzufx7jWvrja7I3ZrX015cFLf31
dQUt33q/PthG67eX+lHqn1C/RP0r6j+09Ofvb974j/ptrXy/x9seauXX/ylv
e66Vn/+r3vYO9eyt/P7P642i1Mu08sd3ZW+rRb0R9ZbUO7by528PWr4BtPzv
Ux9L/SPqM6nPp768lT8+1rXyx89Wb9tD++dIK3/8nabpX6Tpf9nKnx/fe9uv
/ufxb6tE9/x1a2u/fHd7W7rW/vh4srVfvmepv+Jtb1PPRj0P9SKt/fFZ2huV
qNek3rC13z8tvNGBenca35+Wbxgt3wc0/w9b++07w9vmUV9GfS31LdR30/wP
0/xP0fJfoH6F+nfUr1P/h9b/ljZ+/mm97UHqT1B/hvrLbfz2f6uNn39W6vBG
YeqlqFekXoN6A+rNqben3o16P+pDqY+hPon6dOpzqS+lvoa6Ud9F2++Qt52k
fp765Tb++nnN236h/jf1m9smuuePu9r65XvAG4+39eMzeOOltv76/aY3slDP
Tb0Qzb9kW39+VWjrj8/qbf32qU+9GY1v53/euvqfR9/gyOfrIcGR54/R3jbR
/zymBUeeX+YER97/LPG21cGR93ebvW0n9YPUT1D/lPoX1K9S/5mW76/gyPvL
1O2ckcbb7qf+GPUE6hmpv9HOzz+zt+WiXpB6CeqJ1KsFR/59s3re1pR623Z+
+3TxRh/qg6mPoj6Beoz6x9QX0/KtovXbROu3g8YfCI78+3HHafufo+l/Tuv/
LfWfgpM+v8X//Zo/gyP/vs5N7RPdvy92Z3Dk37+5zxuPUk/f3k//RW97nfp7
1HNSL0C9OPXywUnPr/F/v6Yq9bo0vkl7t75o422d2/vt17u937+DqI/0tvHt
3f7CVBo/m/qi9v78Wel/Hhupb2/vj5/97f316Rj1s8HR7/+98Q2N/5HG/9He
Xx9TdfD9jg5++e7t4Kf/iP95e7qDmx9e8LbXOvjrcybqOWj++Wn+xbxRjnoV
Gl+Hlq8x9dbUO1HvRcs3kJZ/hLeNoz6F+qwO/v6z0NtW0PbbQPPfRn0f9aPU
z1C/RPP/mpbvB1r+36n/18GfH7d39OfHPd54mPpT1J/v6K9/r1J/t6O//mT3
Rj7qRamXpV6Zem3qjai3ouXrGJz0/BX/97N6dvTXnwG0/MOpj+2YvP2PhT45
OOl5J/7v+80Mjvz7fgs6+uvf8uCk56/4v/+1Pjjp+Sv+739t7eiP3720/Y90
9Nf/T6hf7OjPr69o+b/3xm9+e9i/Hf3197ZOfvve7Y2HOvnpP+mN56i/Qv2d
Tm57WLbgpM/L8e2X19uKUC9D4ytRrxWc9Pn9eOgNOyVf//aG3rJT8vYKtg7e
6NEpeXscDr1/p+Tttet/Tnifxn8QnPS8ezCM/8jbZtD85wcnvX/YH/oyb6yj
voX6nk7J53c4Hu1wJ398nqZ+oVPy9STev7yxPEdD/476r972z431DT+PWzs7
W9rOycdvvKfztieoP0vjX/bG29SzUs/TOfl+fCT0wp2Tz/dglPa2ijS+Zme/
fRp4owX19p3d9kJ3b+tHfRj1MTT9D2n606nPo76U+trObn+beWM39UOd/f49
5W3nafyV4KT3W/Hz5xr167R8f1O/pYtf/7u88SD1x7v48c908cv3kjfeop6F
Omj6hWj+pahXoF6Dpl+fpt+cejvq3aj3pT60i99+o70xifo06nOpL6G+hvpm
2r67uvjr40Fa/5PUP6Xlv0zb7yqN/4X6XzT+5q5++dJ0dfPDA972WFd3PCJD
V39/yEj9TZp+5q5++XJTL9g1+foaH1+yqz9/Erv65a/ubfWoN6PelnpX6n2o
D6E+ipZ/IvWYXx/MofVbTH019U3Ud1I/QPM/4W3naPwXNP5bWr+fafn/pP2X
upvf/nd28+Pv7+bvL49289f3BG97kfobNP33uvnlz+VtBaiX6ObXv7w3qvnl
tbq0/E27uePN2nijSzd//e3tjcHd/Pkx0hsTuvnzY6o3Pqa+iPqq4Mi/X73R
GzuCk55v4s9f+71xPDjyfHbWG59T/4b6T8GRz/9/BEee32/q7mx3eOO+4Mi/
v/6IN9J3T3SfP1/onuiev18PjrwfyNQ90X1+zult+bsnHx/xz1/F/fSsnJ8f
qtL863RPdJ/vmnhb6+Ck97/x9etM698rOPJ8Pai7374j/PpgfPdE9/lySvdE
9/3YbJr/Qlq+ldQ3dE90vz+zvXui+35sX/dE9/txx6ifof6Zt31N/Uea/++0
fKl6uPWx23skuvfP9/ZIdO+nH6b+NI1/Pjjyfvs1b3s3OPL3T+Xokej+/qd8
wdHv/3skuvf7ZYMj7/+r0PLV9kZj6q1ofKcebn9YT1q/gd42nPo4Pz2b3CPR
fX8wy9sWUF9B819P67+N1n+v31442iPR/X7GJ9645KdnX9H6/0Db5zc/P/xH
63dbT9/v8baHevrpP9XTr/9z1F/1tnd6+uXP7m15qRelXqan3z6Vva1Wz0T3
5wcbeVtLGt+Rpt+jZ/L5GO8DvO196mN7Jro/v/iRN2ZSn099OfV1tPxbvRP2
Uj9C63+a1u8irf+XNP/vaf6/9vTH/789/fF1ay+/f+7u5Xs6bzxJ/Vnqr1B/
m3o26nmoF6Femnol6jWpN6TegnoH6t17+fOjfy9//RvmjQ+of0h9BvV51JdR
X0t9C/Xd1A9TP9XL398u9PL3jyu9/P3lO//zdr2Xu1/hH2+7pbefftrefv4P
euOJ3n78M739/F/207O3aPpZ/c8baHxh6qWoVwyOvB+uEXzjeQANgiPPN829
0Z56N+r9qA+lPsbPLzaJ5j+9d6J7vpnrjaXU11C33onu/esubxyifpL6eZr+
ZerXqP9C8/+b+s19Et3z2V3e9gD1x6lnoP4S9TepZ6GeOzjy/FsoOPJ+t6Q3
KvTx+696cOT5tX5w5Pm2mTfaUe9KvS/1IdRH++W1iTT/ad42h/oS6qupb6a+
k/pB6ido+T6l7fMF9as0/mf/8/iLxqfu63sab7uf+mPUE6hnpP4G9czUc1Ev
SL0E9UTq1fomus8n9fr686tpX398tvW2Ln39+dPH2wZTH0V9gp8fYjT/j6kv
7uuO99gqWr5Nfn1sB63fAerHqZ+j/jn1b/v64/un4Mj3z396x27q5/udwZHP
p/f18+f3o/38+qX3xovBkc/Xr3vjPeo5aXwBbytOvTyNr9rPb9+63taEehvq
nWn6vWn+g6iPpD6e+lTqs6kvor6Sts9GWr/t1PdTP0b752xw5Pu7z7zxDfUf
qf9BPVV/3+/wtnupP0L9aeov9PfH12veyEQ9B/X8/f31vZg3ylGvEhz5/F4n
OPJ80jg48nzQmpa/Ey1/Lz89Gxgcef4Z4W3jaP5TaPws6gupr6C+gfo26vuo
H6V+hvol6l9T/4H679T/o377AN/v8cbD1J+i/jz1V6m/Sz079XzUi1IvS70y
9drUG1FvRb0j9Z7UBwxwxxuGUx87wB+/k71tJvUFA/zxudwb66lvpb6X+hHq
n1C/SP0r6t9T/436v9RvG+jvT3d74yHqT1J/jvor1N+hno16XupFqJehXol6
LeoNB/r7Z8uB/vrVYaDffz28rX9w5PPb+8GRz2cfUP+I+gxvzPc/b8to/Drq
W6jvoX6Y+mnqF6h/Sf274Mj721+97R8af+ugRPf8l3aQvz6nG+S33xP+5/Hs
IH9+vezd623qWb2RZ5C/PxSmXprGV6Tlq+ltDYIjn+9beFt76t2p9/PLg2G0
fGNo+T6kPp2mP4+mv3SQP37WUjfqu6kfoumfGuTOBzvvjSvUr9H+uz7Inz9/
0/hbBvvry13eeJD649SfCY48P7002J/fb9H4LDQe1AtRL0W9AvUa1OtTbx4c
eT5t541u1PtSH0p9NPVJ1KcFR55P53rHllBf422bqe+ifpD6SZr/p7T+l2n7
XKX+C/W/qN88xPc0Q/zx84C3PUY9gx8fy+iNN4e445NtmbWRW9sKaqOktiUG
R94PkFF9iL8fka0ejSejGc2fbG210VXb+mhjiLaNovUhY6K2xWj9yZijbYu1
sVo7tkkbO7XtgDZOaNs5bXxB259s32rjZ237Uxuph/r7LdnuHOrvf2Tcr22P
0vTISNC2F7Xxhra9N9SvPxm5tK3AUH99I6PEUH89I1t5mh4Z1bStLs2fjKba
1kYbXbSttzYGa9tIbUzQtqna+FjbFmljlbZt1E7YoW37tXFc285q43Nt+4aO
JzJ+GuqvR2T7Qxs3DZO2O4Ijnz/IuG+YP3/J9og20g/z1x+yvRAc+XxBxuvB
kedtsmUKjrx/IiOntuXXRnFtK6eNqtpWh9aHjCY0nmyttdFZ23ppY5C2jdDG
eG2boo3Z2rZQGyu1bYM2tmvbPm0co+OZbGe08Zm2fa2NH7Xtd22kel/abg+O
vP8g415tezg48n6EjKe17XltvKZt72ojh7bl00YxbSurjSrBkd+nIVttbTTW
tlba6KRtPWl/kjFQ24ZrY5y2TdbGLG1boI0V2rZeG9u0bW9w5P0mGUdpPNk+
oeOHjEs0nmxf0XgyfqDxZPtNG/9p223DpXGPtj003G8/Mp4a7u+nZHtOG69q
x97RRvbh/n5Atrw0fzKKalsZmh4ZlbWtljYaaVtLWh4yOg739w+y9dDGAG17
Xxtjte0jbcyk9SHbfNoeZCzXtnXa2ErLQ7Y92jiibae1cVHbvtTG99r2qzb+
1bZbR0jjbm1Lp40nte1ZbbyibW9rI5u25dFGEW0rHRz5/EZGJW2rSdMjo6G2
tdBGh+DI50eydddGf20bpo0PtO1DbczQtnnaWEbbn2xrtbFF23Zr47C2ndLG
BW27oo3vtO26Nv7RtltGSiOttj2ojSe0Y8+MdPubjZe17S1tZKX5kw3aKKxt
pbRRUdtqaKOBtjXXRntt66aNfto2VBtjtG2SNqZr21xtLNW2NdowbduljUPa
dlIb57XtcnDk+ywyrmnbL8GR96Fk/K1tN4+Sxl3a9oA2Hte2DNp4aZRff7K9
qY0s2pY7OPL+mIxC2lZSGxW0rbo26o/yxw/ZmmmjHa0/2bpqoy8tD9mGaGO0
tk0Mjjw/kTFN2+YERz5/kLFE21ZrY7O27dTGQVp+sp0IjnweI+NTGk+2L7Rx
Vdt+1sZfo/z9mGypR/vjj4w02nb/aD89Mh7TtgRtZNS2N0b79Scjs7bl0kZB
bSuhjURtq6aNerT9ydZUG221rQttTzL6aNtgbYzStgm0PGTEtO1j2n5kLKb5
k22VNjZp2w5aHjIOjPbXT7IdH+2v32Sco/Fk+1wb32rHftLGn7Q+ZLtpjDTu
HOPXh2z3aePR4MjzBNnSa+NFbXtdG+9pW05tFNC24sGR79/JKK9tVbVRV9ua
0PKQ0UbbOmujt7YN0sZIbRuvjanaNlsbi7RtpTY2att2bezXtmPaOKttn2nj
G237URt/aFuqD6Rxh7bdq41HtO1pbbygba9pI1Nw5PeByZZDG/m1rZg2ymlb
leDIn68go05w5M/Dka0xjSejNY0nWycaT0av4MjvM5NtoDZGaNs4bUzRtlna
WKhtK7SxQdu2aWMf7X+yHaX9QcYZ2h9ku6SNr7Xth+DI70OS8bu2/aeN28dK
2z3aeFjbntLG89r2qjbe1bbs2gn5tK2oNspqW2Vt1Na2RtpoFRz5/UWyddRG
T20boI3h2jY2OPI8RcZkbZupjQW0Pci2XBvrtW2rNvZq25Gx/vpDxifadpG2
Jxlf0fzJ9r02ftO2f7Vx2zhpu1sbD2nbk9p4Ttte0cY72pZNG3m1rYg2ymhb
JW3U0raG2mipbR200UPb+mvjfW37QBsfadsMbczXtmXaWKdtW7SxR9sOa+O0
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
/Tyt32Va/2vUf6H+N/WbF/t+l7c9QP1x6hmov0T9TepZFvv1y+2NQtRLUq9A
vTr1+tSbUW9HvSv1vtSHUB9NfSL1adTnUF9CfTX1zdR3Uj9I/QT1T6l/Qf0q
9Z+p/0U99RLf0yzx96f7l7j7NR7ztgTqGam/QT0zTT9XcOT5tKC3laCeSL0a
9XrUmwZH3v+3DY68/+4SHPl80cfbBgdHno9GBUc+X0zwRsz/vH1M4xfT+q/y
xibqO6gfoH6c+jnqn9P6fUvr91Nw5Pn3T1q/m5b65b/T2+6j/qh3LD31F2n8
69Tfo56TeoHg+OGa9P1J8aV+/5b3jlVd6tevbnD03x/zRpulbvvEOtP43r7b
IG+M9D9v42n6U2n+s6kvor6S+kbq26nvp36M+lnqn1H/hvqP1P+gnmqZ73d4
273UH6H+NPUXqL9GPRP1HNTzUy9GvVxw5P1XleAb31cl1AmOvP9qHBx5/9U6
OPJ+rVNw5P1dL28bGBx5vznC28bR+Ck0fpafHxbS/FdQ30Djt9H09wVH3h8e
9dsDZ2j9L3nja+o/0Pb5fZm/vv63zJ2vuH25+3m7Z7nvD3vbU9Sfp/7qcr9/
313uz8/sy/31I5+3FaVelnpl6rWX+/O7kTdaUe9IvSf1AdSHUx9LfTL1mX59
sYDWf/lyf39a7x3bSn2vtx2h/gn1i9S/ouX7npb/N+r/0vjbVvjp3+2Nh1b4
/fOkN56j/gr1d6hn89NPyLvCb78iK9z1AWVW+OtLpRX+/lNL2xrSeDJaalsH
vzxs9NC2/tp4X9s+WOGvn2R8tMJfD8g2Y4W/fpAxX9uW0fYkYx1tP7JtofFk
7FnhrzdkO0zjyTitbRdoemR8qW3f0fTI+FXb/tHGrSulLa020q30y0+2J7Tx
rLa9rI23V/rjhxzLqo08K/3xS7bC2ihN0yNbRW3U1LYGNH8yWmhbe+2E7trW
TxvDVrr7P9vGBEe+/yPjQ22bTvufjHkr/f2GbEu1sVbbTBu7V/r7FdkOaeOU
tp3XxhVtu7bS3//IuK5tf2vjllXSdpc2HtS2x7XxjLa9pI23Vrn7P9uyrPL3
EzIQHHmfQrZCND1yQim/PGyroI0a2lY/OPJ+hIzmwZH3CWRrF5zuxt9XTkY3
beurjaHaNlo7YZK2TVvlzwcy5gYn/f7IyRRsS4Ij7z/JWKNtm2l65IRd2naQ
pkfGSdp/ZPt0lb9+kRMua9tVbfxC5w/Z/qLxZNy8WtrSaOOB1X79ybHHtBMy
aFtGbbypbZm1kVvbCmqjpLYlaqO6ttXTRjNta6uNrqv98UyO9Vntzgc2hqz2
1w+yjdLGRG2LaWNOcNL7nRMp2BZrY7W2bdLGTloesh3QxgltO6eNL7Rj32rj
Z237Uxup10jbnWv89iPjfhpPtke1kaAde1Ebb2jH3tNGLm0roI0S2laeth8Z
1bStrjaaalsbbXTRtt7aGKxtI7UxQdumrvH3czI+Do48P5JtkTZWacc2amOH
tu3XxnFtO6uNz7XtG9p+ZPykbX9o46a1/v5DtjvW+uUh4z4aT449oo30a/3y
kGMvaON1bcsUHPl+loyc2pZfG8W1rZw2qmpbHW00oe1Jtta0/8joTNMjWy+a
HhmDtG2ENsZr2xRtzNa2hdpYqW0btLFd2/Zp45i2ndHGZ9r2tTZ+1LbftZFq
nbTdro17te1hbTytbc9r4zVte1cbObQtnzaKrfPnI9nKaqOKttXWRuPgyOcR
srXSRqfgyPsgsvXUxkBtG66Ncdo2WRuztG2BNlZo23ptbNO2vdo4qm2faOOS
tn2ljR+07Tdt/Kdtt62Xxj3a9pA2ntK257Txqra9o43s2pZXG0W1Y2W0Eypr
Wy1tNNK2ltroqG09tDFA294PjryPI2Ostn0UHHn/RsZMbZu/3l8/yVi+3t8P
yLZOG1vX++s52fYER57nyDgSHHkfTrbT2rhI60O2L7Xxvbb9qo1/te3WDYnu
+wAy7ta2dNp4Utue1cYr2rG3tZEtOPI+n2x5aP5kFNG20jQ9MippW01tNNS2
Fhv8+URGB23rro3+2jZMGx9o24famKFt87SxTNvWamOLtu3WxmHt2CltXNC2
K9r4Ttuub/DXczL+0bZbNvrpkZFW2x7c6O9HZDyhbc9o42Vte0sbWbUN2iis
baW0UVHbamijgbY110Z72n9k67bRX4/I6KdtQ7UxRtsmaWO6ts3VTlgafON5
gG1rtGHatksbhzb6+zfZTmrjvLZd1sY1bftFG39r282bpHGXtj2gjce1LUNw
5PmNjJe07U1tZNG23NoopG0ltVEhOPL8QrbqNJ6M+trWjLYnGe20Y1398rDR
l8aTbcgmf/6SMXqTv36RYxO1MU3b5mhjibat1sZmbdupjYPadoK2HxmfatsX
2riqbT/T8UjGX9qWerM/HslIs9mPJ9v92nhM2xK0kVHb3tjsj2cyMmtbLm0U
1LYS2kjUtmq0PmTU2+yPP7I11Ubbzf74IVsXGk9GH20brI1R2jZBGzFt+1gb
i7VtlTY2adsObRzQtuPaOKdtn2vjW237iY4HMv7UtptMGndq233aeFTb0mvj
RfPrT7bXzZ9/ZLxH0yNbThpPRgFtK66N8tpWVRt1tWNNtNFG2zpro7e2DaL9
QcZIbRuvjanaNpv2JxmLtG0lrQ8ZG7Vtu/n7Lxn7afnJdkwbZ7XtM218o20/
auMP7ViqLdK4Q9vu1cYj2va0Nl7Qjr22xe0vNjJpW47gyPt0MvIHRz7Pkq1Y
cOR5goxyND2yVdFGHW1rrI3W2tZJG71o/cmxgdoYoW3jtDFliz//yTYrOPL+
h4yFwZH3f2RbQePJ2BCcM03ynwcjx7b56bGxT9uO0vFPxhltu6SNr7VjP2jj
d237Txu3b5W2e7TxsLY9pY3nt/rzkWyvauNdbcuujXzaVnSrP/7JKLvVn49k
q6yN2trWSButtK2jNnrS+pBtgDaGa9tYbUzWtpm0/GQs0LblND0y1mvbVm3s
pfmTY0e2+vsfGZ9o20VtfKVt32vjN237Vxu3bZO2u7XxkHbsSW08p22vaOMd
bcumjbzb/PWDbEW0UUbbKmmjlrY11EZLbeugjR7a1l8b7wfHN2fS7w+T7YPg
yO9fkPFRcNLfN3wyBdsMbcwPTvr7TE6kYFumjXXatkUbe7TtsDZOB6e78ecn
yHYhOPLnAcj4Utu+o/mT8au2/aONW7dLW1ptpNO2J7TxrLa9rI23tWNZtZFH
2wpro7S2VdRGzeCkv5/neAq2BtpooW3tg5P+PoGUjO7BSafzsRRs/YKT/j6Q
lIxhwfHHyUtHU7CNCY7fjkek5IQP/c+zbbo25mnb0uCkzxNHUjDW+uVhm2lj
t7Yd0sYpbTuvjSvBSZ/3Dqdgu7Y9+XqfknFd2/4OTnoflJJxy47k+8XBFGx3
7Ui+HqZkPKgde3yHWx42ntnh9yfZXgpOeh48lILxlrZl0QaCkz5PHUnBVkgb
pWj5yVZhh9+fZNTY4fcH2erT/MloHpz0ef1oCrZ2tDxkdKPpka2vNoYGJ71P
SMk2eoe/HpExaYe/npFt2g5//SJjbnDS3zeSkm0JbQ8y1uzw5yPZNtP6kLGL
tifZDmrjpLZ9StufjMt0/JDtqjZ+CU56Hk/J9hed/2TcvNOfz2RLo40Hdibf
Tw+kYHtsZ/L9cH8KRoadyfeLvSnYMu5M3t8pGW/uTN7ee1KwZb6xPBtTMHLv
TL5eLkrBVnBn8vG4PAWjZHDS8/jqFBxL3Jm8v5akYFSn6ZGtnv95NprReHKs
bXDS8+zKFIyu2tbnxvZcm4IxhNafbKN2Jh+Pa1IwJmpb7MbxsC4FYw4tD9kW
03gyVmvbJloeMnbSeLIduLE9d6RgnNiZfD3YkoLt3M7k69nWFIwvbmzvXSnY
vg1O+vsod6Rg/Byc9HlwZwq2P2l6ZKTe5c9fst25K/l+sD8F435te3RX8v1i
XwpGwi5/PSDbi9p4Y5e/fpHtPW3k2pXonr/IVmCXv/6RUSI46Xlidwq28tqo
pm11tdF0V/LxnJKtzS6//8noQtuDbL1p/5ExODjyPEe2kdqYQNMj21Ta/mR8
TMcf2RbR+pATVu1y91O2baTlJ2OHtu2n44mM4zSebGd3+fs3GZ9r2zfa+Enb
/tDGTbul7Y7die55hoz7tO0Rmh4Z6bXthd1+e5Lx+m63v9mWSRs5dye65xey
5b+xPrtTMIrv9ucj2crt9uc/GVVp/mSrQ/MnowmNJ1trbXSm5SHHemljkLaN
CE76vmJXCsZ42n7k2BS/vOyE2X57sG0hzZ+Mlbv99YtsG3b76xcZ27VtnzaO
0fzJdkYbn+3291Ny7Gv/82z8SOPJsd+DbzxPsJFqj58e2W7Xxr3a9rA2nta2
5/f4+wkZr9F4sr27x1/PyMixx+9PciyfNort8dcjspXVRhVtq62Nxnv8/Yxs
rfb46y8Znfb46zfZetL8yRiobcP3JLrP82SMo/1Btsm0PmTMCo48P5FtgTZW
0PKTbT2NJ2Obtu2l5SfjqLZ94o83Ni7R+UC2r2g8GT/Q+pNjv/nlYeM/Gk+2
2/b67UHGPXv9eHLsIW08RdMjx57Txqs0PbK9s9efP2Rk17a82ii6159/ZCuj
jcraVovmT0YjbWtJ24OMjrQ9ydZDGwP2+uORbO9rY6y2faSNmdo2XxvLtW2d
NrZq2569/n5GxhFtO62Ni9r2pTa+17ZftfGvtt26Txp3a1s6bTypbc/u88cv
Ga/s8/uPHHtbG9m0LY82itDyk620NippW02aPzmhoba1oOmR0UHbugcn/XsN
x1Mw+u/z1yOyDdPGB9qxD/e5+ykbM7RtHq0PGcu0ba02tmjbbm0c1rZT2rgQ
HPk8QbYr2vguOPL5hWzXaTwZ/2jbLfulkVbbHtzvl4eMJ7TtGW28rG1v0fKQ
kVXboI3C2lZKGxW1rYY2GtD6k625NtprWzdt9NO2odoYExx5f0K2SdqYrh2b
6+fHxtLgyPsgsq2h+ZNh2rYrOPI+hoxDwZH3MWQ7GRz5PoSM89p2eX/y9X57
Csa14KTv07elYPslOOn7vJSMv4Mj3weRYzcfSPz/77u3pGDcpW0PHPDLT054
PPjG90lsy3DArw8ZL/npse3N4KTvOy0FI4u25dZGIW0rGRz5Po6MCgf8/ZNs
1Q/484+M+gf88UO2ZrQ9yGjntzfbuh7wxz8ZfbVtiDZGB0eeP8g28YC/fpIx
TdvmaGOJtq3WxubgyPsAsu0MjjwPknGQ9j/ZTgRHnr/J+FTbvqDtScZVWn6y
/ayNv7Qt9UE/fzLSHPTLT7b7aTwZjwVHnsfIlqCNjAf99Z9sb2gj80F//yFb
Lm0UPOjPB7KVCI58H0NG4kF/PpOtmjbqHfTnP9maHvT3DzLaaluXg+5+wkYf
Gk+2wdoYpW0TDvr7BxkxbftYG4u1bRWtPxmbDvr7J9l2aOPAQX8/IdtxbZyj
84lsn9PxS8a3wZHnH7L9ROcPGX8e9NdTst10yN//yLhT2+7TxqPasfTaePGQ
Xx+yva6N97QtpzYKaFtxbZTXtqraqKttTYIjzyNktDnkr2dk63zIH09k9Na2
QdoYqW3jgyO/f0XG1EP++km22TSejEW0Pci2UhsbtW07zZ+M/bT+ZDumjbPa
9hntTzK+0Y796KfHxh+0/mRLdVgad2jbvYf99iPjERpPtqdpPBkvHPbrT7bX
tJFJ23LQ8pCR/7A/fslWTBvltK2KNupoW2NttNa2TtroFRx5HiLbQG2M0LZx
NH8ypmjbLG0s1LYV2tigbdu0sU/bjmrjjLZdouOZjK/pfCLbD9r4Xdv+08bt
R6TtnuDI8x8ZDwdHnh/J9tQRvz3IeJ7Gk+3V4MjzMBnvBkeeJ8mWnZafjHw0
PbIV1UZZWn6yVdZGbW1rpI1W2tZRGz21YwP8+rIxXNvG0vzJmKxtM7WxQNuW
a2M9HQ/k2FZt7NW2I9r4RNsuauMrWh+yfa+N32j/ke1fbdx2VNru1sZD2vak
Np7Ttle08Y62ZdNGXm0roo0y2lbpqN//ZNTStobBkc/PZLTUtg5H/fWUjB7a
1l8b72vbB7Q8ZHykbTOCI++zyZhP48m2jMaTsU7btmhjj7Yd1sZpWn6yXdDG
l9r2nTZ+1bZ/tHHrMWlLe8wfD2Sk07YnaHpkPKsde1kbb2tbVm3k0bbC2ihN
60+2itqoqW0NaP5ktDjmj0eytddGd23rd8xfz8gYpm1jtPGhtk3XxjxtW6qN
tdpm2titbYeCk36f0FIwTmnb+eCk70M2pWBc0bZrND0yrmvb33Q8kHHLcelU
abXx4HG//cj2eHDk8wsZzwRHnqfI9tJxf/6Q8VZw5PM32bLQ8pABbSt03J/P
ZJTStgraqBEceX4hW33aHmQ0p/Fka0frQ0Y3beurjaHaNlobk7Rtmjbm0vFA
tiXaWKNtm7WxS9sOauMk7U+yfaqNy3T8k+2qNn6h7Um2v7Rx8wm/PGRLo40H
tO2xE37+ZGTQtozaeFPbMmsj9wm/P8lW8IQ//8koecJfT8mWqI3q2lZPG81o
+cnW9oS/n5DR9YS/f5GtjzaGaNsomj8ZE2n5yRbTxhzan2RbfMJfT8lYfcKf
T2TbdMLf/8jYSfMn2wE6fsg4oW3ntPGFtn2rjZ9pe5LtT22kPiltd2rjfm17
VBsJ2vaiNt446fcf2d476Y8fMnLReLIVoPFklKDxZCuvjWraVlcbTbWtDW0/
MrpoW2+aHhmDT/rzj2wjtTGBpkeOTT3pjnc2Pta2RTR/MlZp28aT/n5Ixg4a
T7b9J/31h4zj2nZWG58HR77/INs3wZHvH8n4Sdv+0MZNp/zykO0ObdynbY9o
I/0pvzxke0EbrwdHvs8iW6bgyPfpZOSk8WTLT/MnoziNJ1s5bVTVtjo0fzKa
0Hiytab1J6OztvUKjvw+HRmDaDzZRtDykzGelp9sU2g8GbNP+fOHbAu1sZKm
R7YN2thO60+2fdo4pm1ntPGZtn1N+4+MH2l7kO13baQ6LW23n/bLQ8a92vaw
Np7WtudP++sPGa/R8pPtXW3k0LZ82iimbWW1UUXbamujsba10kYn2p5k63na
30/JGKhtw7Ux7rS/n5NtsjZmaduC4MjzIxkrtG29NrZp215aHjKOatsn2rhE
8yfbVzT+//q673iv5jiO47m3JUmkNLkNMySEhD6V1aCMeyXKRQgNkohEQpq0
0OK2pIEWJck7I2WkrKS9917qLn3PfTx+v/N5Pzzefz4fr/s953vm75zfvUK2
fdo4SsePbPnaKLpC2kqt8Osno6y2VdFGDW27mOZDxhXBsedvstWj5ZHRUNua
aOOOFf56JNu9NH8yMrWtnTY60XzI9hyNJ6OHtr1ByyNjgLYNo+NBxihtG6+N
KcGx9xmyzdTGXG37RhuLtW2ZNv7WtnXa2Boc+/6MbHu1cUTb8oJj32eRUeQf
aTs1OPb+TMaZ2lZZG9W1raY2Lte2a4ML/nunef9jNNC2xrQ/yGihbS218YC2
PaaNjtrWNTj2/ScZLwXH/v1Zsr2ujf7aNjQ4OhwF//4oGSNpPNnGaWOyts3Q
xhfatoDOBzIW0faQbak2lmunrdXGFm3bo43D2parjcIr092/P0u2ksEF76uz
/8coo22VgmP//i8Z1bTtopWJ++30/zFqa1tdbdjKxPkw9X9st65M3I+n/Y/R
fKU//8h2D40no01wwfPozP+xPUrzJ6MDLY9sz9LxIKO7tr1Gx4OMfrR+sg0J
LniemfU/xghtG6uNSbT/yDZdG3NoeWQD7Q8yftC2X7XxF62fbGto/5OxOTj2
71GTbTctj4xDNB+y5dB4MlJX+fORbKes8uPJOEPbKq7yx4+Mqtp2oTYuo/WT
7RoaT0b9Vf54kO0WbdyubRnaaK1tj2ijvbZ1WeXPBzJe1LZetDwy+mrbYG0M
17YxNB8yPqLxZJtG48mYrW1f0/LIWEjjybZEG39q22ptbFrlP//JtksbB7Ut
Wxspq6WthDZO17YK2khb7Y8H2S5Y7e8HZNTStqu1cYO23bza33/IuE3b0ml5
ZNyvbW1pf5DxJI0n2zPaeIGWR7ZXaTwZfbRtkDbe07YsbUzUtk+18bm2zdfG
99r2izb+0LZVdP2QsVHbdtLxJOOAth1f7e9fZJy0RtpO1kZp7bTy2jhH287X
xqXadpU2rte2m9b4/UlGM227Wxv3advDNB8yntC2ztroRusnW09tvKltb9P6
yXiXxpPtA218uMZff2T7RBuf0fLI9pU2vtO2n2n7yfidxpNtpTY2rPH3D7Lt
0MZ+bTsWHHsfIqPQWr89ZCu+1o8n47S1fv1kO0sbZ2vbeTQfMi6h8WSrQ+PJ
uE7bbtRGU227i+ZDRivan2R7aK0/f8h4XNue1sbz2vaKNnpr21vaeEc7831t
TNC2j7UxS9vmaeNbbftJG79p2z/aWK9t27WxT9v+Xevvv2TkB8eev8lWbJ2/
HsgopW3l1vnrh4wq2nauNi7WtivX+f1BRj1ta6SNJtp2pzbu1bYHtdFOO+0p
bTy3zp8PZHuZ1k/GG9o2UBvDtG20NsZr21RtzNS2L9f564GMb7Ttx+DY77/I
WBYc+/6dbCu0sU7btmljL82HnHnU/zwbedpWdL00TtW2stqorG01gmO/jySj
prZdoY1r1/v9R7aG2misbXdoo6W2ZWrjMdoesnUKjv0+n4yuNJ5sPbTxOi2P
bANoPBlDtW2UNsYFx/89AG+boo0Z2jZXGwu0bbE2lgbH/p6FbH+vT3d/P0bG
2uDY34OQbSstj4w92nZEG7naVmSDNEpq25naqKRt1bVxkbZdro262tZggz8e
ZNyqbS20cY+2PaCNR7Wtozae1baXtPGatvXXxhBtG6mNsXT8yDZZG9O17Qta
PxnQtkW0PDJ+1bblG/z9g4w12rZFG7u17bA2crSt8EZpnKJtZbRRUduqaePC
jX7/k622Nq7RNtPGLdrWXBsZ2tZmoz8fyXhE2zpoo4u2dddGL23rt9F//pIx
WNtGaGOMtk2i+ZAxTdvmaONrbftBG0u07S9trNa2zdrYpW2H6HwkI1vbUjdJ
o4S2nbHJH08yKmhbVW1coG2X0XzIuHqT339kq6+Nm7Xtdlo/Gena1pqWR0Zb
bWuvjWe0017UxqvaaX398WBjkLYN10aWtn2kjU+1bbY25mvbQm38om1/amOV
tm3Sxk5tO6iN49qWslkaJ2vb6door21p2jhf22oFx96fybhK227Qxk3adps2
7ta2+7XxsLY9qY3O2vZCcOz7DDJ6alsfbbytbe9p4wNtm6iNT7Ttc218pW3f
a+NnbftDGyu1bSMdTzJ2aNsBbRyj9ZPtpC3SKK5tpbVxlrado43ztO1SbdTR
tuu1caO2NdPGXdp2nzYe2uKPJ9me0MbT2tZNG68Ex77/Jtub2nhL297Vxvva
9qE2Pta2z7QxT9u+08ZP2va7Nv7RTtugje3atl8b/2pboa3SKKZtp2mjnLad
rY1zte0SbVypbddpo5G2NQ2O/fdXZNypba2CY38PQs56UNse18ZTwbHf35Lt
eW28rG29tTFQ297Rxujg2O9PyTZBG1O1bZY2vtS2b7Xxo7b9po0V2rZeG9u0
bZ82jmpbvjaKbpO2Utooq21VtFFjmz+fyHZxcOz3+WRcQePJVo/Gk9GQ5kO2
Jtq4Q9vu1UamtrXTRidte04bPbTtDW0M0LZh2hilbeO1MUXbZmpjrrZ9o43F
2rZMG39r2zptbNW2vdo4om15wbH/no6MItvT3X9/SbZTtXHmdr9+slXWRnVt
q0nrJ+NybbtWGw20rbE2WmhbS208oG2PaaOjtnXVxkvaaa9ro7+2DdXGSG0b
p43J2jZDG19o2wJtLNK2pdpYrm1rtbFF2/Zo47C25Wqj8A5pK6mNMtpWSRvV
tO0ibdTWtro7/P2TDKPxZLt1h7+fkdFc2+7RRhtte1QbHbTtWW1017bXtNFP
24ZoY4S2jdXGJG2bro052gZt/KBtv2rjL21bo43N2rZbG4e0LSc4/t//eyN1
p7Sdoo0ztK3iTj8fMqpq24XauCy4RPLv78l2TXDs7+HJqB8ce58h2y20PWTc
TuPJlqGN1tr2iDba03zI1kUbL2pbL2301bbB2hiubWNo+8n4KDj2fRDZptF4
MmbT+UO2r7WxUNuWaONPmg/ZVtP2kLGJlke2XcGxfz+IjIO0PLJlayNll7SV
0Mbp2lZBG2m7/PaQ7QJt1Nrl7wdku1obN2jbzdq4bZc/fmRL3+XPBzLu17a2
tDwyntS2Z2j+ZLxA48n2qjb6aNsgbbynbVnamKhtn2rjc22br43vte0Xbfyh
bau0sVHbdmrjAJ1/ZDuujZN2S9vJ2iitbeW1cU5w7HmCbOdr41Jtu0ob12vb
Tdpopm130/aTcZ+2PayNJ7Stsza6aVvP4NjzABlv0niyvU3jyXiXxpPtA218
qG2faOOz3f56IttXNH8yvqPlke1nbfyubStpPmRsoPFk26GN/dp2jNZPRqE9
0lZ8j18eGadp21naOFvbztvjr0cyLtG2Otq4Tttu1EZTmj/Z7qLxZLTStoe0
8bi2Pb3Hn/9kPE/jyfYKjSejN40n21vaeIeWR7b3tTGBlke2j7UxS9vmaePb
4Nj3aWT7icaT8RuNJ9s/2livbdtp/WTso/1Jtn9peWTk0/LIVmyvNEppWzlt
VNG2c7VxsbZdqY16e/3+IFujvX5/ktFE2+6k9ZNxr7Y9qI122vaUNp7Ttpe1
8Ya2DdTGMG0brY3x2jZVGzPp+JHtS218o20/amOZtq3Qxjpt26aNvdp2VBt5
2lZ0nzRO1bay2qisbTW0UVPbrtDGtdrWUBuNte0ObbTUtkxtPKZtnbTRVdt6
aON1bRugjaHaNkob47RtijZmaNtcbSzQzlysjaXa9rd2oQ3atlUbe7TtiDZy
tTOL7JdGSW07UxuVtK269rqLtO1ybdSl3oD6rdRbUL+H+gPUH6Xekfqz1F+i
/hr1/tSH0PEZSX0sjZ9MfTr1L6iD+iLqv+73n+/LvbHGO3ML9d00/jD1HBpf
5IDvpwTH3hfLeKMi9WrUL6Rem/o11I36LdSbU8+g3ob6I9Q7UO9CvTv1XtT7
UR9MfQT1MdQnUZ9GfQ71r6n/QH1JcOz7kL+8sdp73Wbqu4Jj3/8f8kY29dSD
vpfwzixDvYK3VaV+AfXLqF990G9f/YN++2+m8bfT+HTqrYNjv19qS709Lf8Z
b3uR+qvU+1IfRH049Sy/fZhE8/+Utn829fl+e2whbd8vtH1/0vhVNH4Tjd/p
nXmQ+nEan3LI95O97XTq5amnUT+feq3g2O/3rvK2G6jfRP026ndTv/+Q3z8P
U3+Sxnem/gKN73nIHe/MPof88X7b296j/oEfbxO98Qn1z6l/Rf17mt/PtP4/
aP0rqW+kvoP6AerHqJ902M+vuLeVpn6Wd+Y51M+j8ZdSr0P9+sN+fjdSb0bj
76J+H/WHaH5PUH+axnej/gr1N6m/Rf1d6u9T/5D6xzS/z2j759H472j8T9R/
p/4P9Q3Ut1PfT/1f77RCR3wv5m2nUS9H/ewjfvvOpX4Jjb+S+nVH/PXRiHpT
Gn8n9VbUH6T+OPWnqD9P/WXqvakP9M58h/poGj+B+lTqs6h/Sf1b6j9S/436
CprfeurbaPw+6kep51MvetT3Ut4oS70K9RrUL6Z+BfV61BtSb0L9Dur3Us+k
3o56J+rPUe9B/Q3qA4Jjz//DvDGK+njqU6jPpD43OPb+8o03FtP4Zd5ZfwfH
/p53nTe2Ut9L/Qj1POpF/vX9VG+cSb0y9erUa1K/nPq11BsEF9xOPgm9MfUW
NL4l9QeoP+aXh47Bsf8fWldvvET9der9qQ+lPpLWP47WP5m2bwb1L6gvoL6I
+lLqy6mvpb7FO3MP9cM0Ppd64WO+l/RGGeqVjvn9U83bLqJem3pd6kb9VurN
qd9DvQ31R6l3oP4s9e7UX6Pej/oQ6iOoj6U+ifp06nOog/oPxxKf5xPD8f3V
G3952xrqm6nvpn6Ieg711OO+nxJc8PuzMaGfEVzwfjI89IreqEr9QuqXUb/m
eOJ8ez/0+rT+W7xxe/D282oXn1p5ROgZx/3+a03jHwme27hkSs3eH4bePrhS
rdU1ivacEHqX4GfaDdrdvX4wXgyut7b5gHc7jg29V3DN3uVWLDk6LvS+wTmT
9v9220NZoQ8+nvj8icYP97YxwWf0wo9jborW/5Fff+a04JXHejwxr0u0/NnB
0Y9/HmxfBw8pXzij1CVhPlgY3OzqPg0yN0frX+Lngz+DK4QfnzE69NXJ/TMq
9E3BYfTSaiND3+WNg8EnNvaujROinu2NlGzfS3jjdOoVsv3y07L98bvAG7Wy
E9v3duhXZye2Lxg3BJ9Y9ndp06Ljc3O2O164Ldttr6VnJ47/O6HfHzzqxOjO
7QaF3jb4pxN7+2Du0NCfDO4WTah/6M9kJ47/kNBfyE5cD9H4V6n3yU4cz2Ab
lJ043/uE/p7fHsvyy8NEWv6nfr74PLhJ2Jxy0fUz3xvf+/XZL8FhMuULR9v/
h7etou3f6LfHdgb3a781e9L+waEfoPHHsxPn87DQT8pJXM8DQz85uGXdWYu6
zn8r9NI5ifOjX+jlvXGOd9r5OYnzeUDol/rl2VU57njhelr/TTS+WY4/Pnd7
477ggue5sD/s4eDJ4XCVfi/0J5LLD/cr65ycb3R+d8tx+8N6Bh+PFh+NfzO4
VdvojA397Rx/fN7NSdy/ov4B9Q+97RPqn1H/ivp31H/288XvtP6VOf763eC3
13ZQ30/9WI6/fxXKdbbiwQXvnx+dcNZpuYn9FWxn5SaWNyWMPzs43C1atQ22
87xxif95qxO8rFo4wtHnw3XB0Y/X+zT0G4MbhumvnBR609zE+RR9Pt8VXDVc
fbuj8a1yE/eryaE/FFzwfVgwHg+OTs8Pov50cPh0qdMm6s9TfyU3cX1Hf6/S
OziazrHo+eut4OhwLC/4+6zcdPf3LO8n9+eM0CcER7fPpcH2MfVZwbHn23m0
/m+DC/69lI9D/yk3cb2F/YXfctPd8+E/fn9ifW7ieovGbw/uOazRiVtIdHz2
0fH7N/hAuLxaRvs/39uK5SXuZ1Evlef2f1q5PL9/q+T55Z+bl7g/RuMvzvP7
/0oaX8//vDUKnjF678SFTaPnjyZ56e754s7g6tENZHzo9+b5z58Hk+uLPt/a
5fnr4ylvPJfnPs/SXs5Ld88HbwTHng8G5qW755NhwcnnGRudl7jew/NH1nhv
m+qNmdS/pP5N8NjwcfFHdH3+GHziYJ3YxKgv8/vTVuS58wnr6Phsy0vcP6Lz
Y29yf0T9aJ6/vvK8rWh+unv+OjXfr7+sNyrnu+NpNfIT9+Po+NbM99f3Fflu
e3Gt72kN8/39o3G+P3/v8OtDS78+y8xPfL5Ey38s390PrZM3ulLvQeNf97YB
wbHn36H5/v47Kt+fX+Py3flsU/Ld+YYZwQXfZ0Tn39x8f/wXeNti6kvz093z
99/5/vxdm+/P3620/j3BBc8j0fyPeCPXL8+KFMpw50fJ4Nj6z6ReKTj2fFk9
OLm9uCg4+T5klwfHPt/qBv8eDn/daP818MatwTdGE47Gt6Dx9wTH3j8e8Maj
wbHt7xic3D9Zz1J/KTj2fvMabX//4Nj7yRDqI4Nj719jafsm+5/H9ODk+WZf
0PaDlr+I9u+v3rY8uOD5NBq/Jjh2/W7x24vdwbHr67A3cqgXPinDXT+nBMfu
b2WCY59PFf3PW7XgaPfWib4/udA7rXbwgnB4Dkb3v2uCY5+fFpx83sAtwcnn
DWsenLzfICM4upy6RuPbBMfur4/Q/Dt4Z3UJTn4eW3ca34t6P28MDo7dn0cE
J+/nWWOCY/fnScHJ+3vWtODY5+8cb3xN/Yfg2Pv9EprfXzS/1bT/NntjV3DE
7tHz3yF/PJBN+zc1xR/fEil++Wek+PlVSPHzq5rij/8FwYtPbF3FWtHz0WXe
uDrFHQ+r742bafztfj5Ip/m1pt6W5tfeG8+kuONlL6a444tXafl9afmD/P6w
4bR/slLc9WQfeePTFH9+zU5x5xPm0/wXpvjr45cUf33/meLu11jlbZtS3P0Y
O4MLno+j71cOpvj72/Hk+RC9/6WkZrjnt5NTfT89NXF9R9+/lE/NcM+HaakZ
7v3y/NSM+Pu21UpN3P+j9++rgmPv9zekZsTfd3FT0j1Cvy05v+j9+u7k8qLP
h/tTM9z3Lw9725PBye+T0NnbXgiOff/UMzj2/USf1Az3/cbbyfW/Gvp7yfGv
hP5Bcn91D32iNz7xP2+fJ5fXOfSvvO374IL3yedD/zm44P2+S+h/eGNl8ufb
hb4x2duGvsPbDlA/lpyfhX5S4cTyWoZevHCitwi9tDfOKuzGp53jjfOSzgzj
L/VGHb8+u57G3+htzajfRf0+6g9Rf4K272lafzfavldo+9+k5b9Fy3+X+vvU
P6T+MfXPqM+j/h31n6j/Tv0f6huob6e+n/q/1AsV8b2Yt51GvRz1s6mfS/0S
6ldSv456I+pNqd9JvRX1B6k/Tv0p6s9Tfznp6Pzo7Y2B1N+h8aNp+ROoTy3i
z89Z3viS+rfUf6T+G/UV1NdT30Z9H/Wj1POpFy3qeylvlKVehXoN6hdTv4J6
PeoNqTehfgf1e4v645fpbe1ofCca/xz1HtTfoD6A+jDqo6iPpz6F+kzqc6l/
Q30x9WXU/6a+jvpW6nupH0nuv+j8zvNGkWK+n1rM7/8zva1yMb/86t5Wk/rl
1K+l3oB6Y+otaP0taX4PUH+Mekdafle/vXiJtv916v2pD6U+kvo46pOpz6D+
BfUF1BdRX+qdtZz6Whq/hfoe6oep51IvXNz3kt4oQ70S9WrUL6Jem3pd6kb9
VurNqd9DvQ31R6l3oP4s9e7UX6Pej/oQ6iOoj6U+ifp06nOog/oP1H+l/hf1
NdQ3U99N/RD1HOqpJ/t+ijfOoF6RelXqF1K/jPo11OtTv4X67dQzqLem/gj1
9tS7UH+Rei/qfakPpj6c+hjqH1GfRn029a+pL6S+hPqf1FdT30R9F/WD1LOp
p5TwvYQ3TqdegXoa9Quo14r7P1eFYkU=
          "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[{
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.95, 0.627, 0.1425], 
          AbsoluteThickness[2]], 
         PointBox[CompressedData["
1:eJx83XXUVOUWx3FERERURAxCeQkRVERUGmTT3Qzd3d3dKdJdQ3d3b7pDARER
AREREWmV0st+zrrvPPu3Zm3/uetzv5yZec+cOR2p67ep0ChunDhx2meIE0f+
N06cuiezhm7mr7DpvUE3yp/MFycOn9Wmi9B/hf4n9AfQn0KPl033RNr8BvQU
0NNA/xB6Fug5oRP0YtDLQq8CvTb0xtBbQe8EvSf0gdBHQB8HfSr0OdAXQ18N
fRN0Fs9rmzfh2bmuH9CmE9C/E9cctftBhponpP8Ueb2D0q9q003o96E/EU+d
Iv9tlv589me+3D3piqKXt0h/WZuTiD93/+2RnlybU2ePff1N0jOKn334Z3/B
RumfZlfvRzm0OR/0otDLQK8MvZY4oxtB26Q30uaW0DtC7wF9APTh0MdCnwJ9
NvRF0FdB3wh9J/T90I9DPwP9AvRf4Pv9A8bfPeiP4fuPm0N/vwm1+XXxH+Xl
/1gtPZk2x0DPAD0z9OzQv4ReBHpp6CHoNXPE/p5WSW+ozS2gd4DeHXp/6MOg
j4E+GXoY+kLoK6FvgL5DHIz+FdL3adMx6Keh/wj9inbMDeh3YfhH0J/LqftL
2pwY+jvQU0H/APon0LNBzwu9sHa4FPRKMHwN6A1yxv4+Fktvrk3toXeD3g/6
UOijc8bOP9dKnwTvPws+34Kc+vtfoc3rYfjtMPxecQ/5OXefJ/1oztjfx2zp
p7TpPPSfof8O/Y52zEPocXLp4RNo82u5Yj/vTOlva4ffg55emzNBzwo9D/RC
0EtCrwi9OvT60JtBbwe9K/S+0IdAHyVuOuZmz3xZXZ+oTTOhz4e+HF5/Hbz+
Nuh7oB+B/i30H6Bfhn4d+m3o/0D/D/qLuXV/VZvegv4u9Pehfwz9C+i5tWMK
Qi8Bw1fQDleDXg96U+ht4fW7QO8DfbD4/MPezbd1HCD969z6+58gXnLn29L1
E0+WPkOcLF7lVzOtmSF9Hgy/TJvXQt8KfTf0w9C/EW8pnijuR0M6Sz+nzZeg
/wb9FvS/of8LPX4e/fe/ok1vQk8JPR30j6B/nkePv1zi6g1zXyw7cpL0Atpc
XFxCPt5bU6SX1+aq4iOzC2+493S89Lp5YpcHrjfRpjbQO8Pr94bXHwR9JPTx
4mc4d/zvcdKni6fvjVnVvukY6XPFwfq6+/uWavMa6Fug74J+CPpJ6N9Dv5hH
T//XtPlP+H7+gu/vKfQX8j5zt+vpsyRYNl16Im1KCj0F9LTQP8wb+/255edn
Yvftt54jPWfe2L9nofT84rTuByL/nouJB/DhZ68wV3o58Rx5udOLpFfRpjrQ
G0NvDb0T9F7QB0L/Cvo4+PzT8url8xzxuHfkByF/Ly2Bv2+12Fu/2Kz/Xmb4
+w+KK12ZP21vTFj6Ce2Ys9B/0qZfxVVzrjvYeccs6Te16QH0J9Djfan7y9r0
BvTk0NNAzwg9C/Qc0Al6UehloVcWp8h8IV38fvOl19bmRtBbQe8IvSf0AeL7
T093vZ7erZ+N0Oax4ieLZQHjxv9UbZ4NfTH0VdA3Qd8J/YD42mP5P9ZIPy5+
9mNMWb3hUunfiQuNaPnsn7jPd0FcP7GMsQ3Sr4rrXj2Z5vxDt/77hzbdF3+T
RibgZdIfa8c8ny92/r9cekJtSgI9mfjQsy8reWbXU2tzBnG+rLWfLcLk76FP
88XOP9zfl10cTi5fiNt+zSeWmfPNniulF8kX+324XkabQ9BrQW8IvSX0DuLJ
rZM8+4m63kMcrE/wM4f7i73t/+HiYPG3Q4YfI5Zff9IVB6RPEW/rKHMM18Pa
tEjcy40Qt39ipThxMMFL3yh+tuy9tXD/Vuk7tGm/+NnIe/aB3f6JY9p0BvqP
0H+BfgP6PeiPoMcl3V/SptehvwM9BvoH4nayOdd2u/TM2pwN+pcUO3/YKb2w
NpWGXgl6TegNoLeA3l7sFg9n3f6/7uI9DzLUHLV7n/R+kc8npmEUuzzYK300
xX6/+6VPhj4LXn+hNq+AvgH6dor9Pe2Wvk/sVgdqi/koxf6+5f3otDiVTM3v
uc9/Xpza/eBcvwL9d4qdX7q/7664lZtBuf5Q/PaztauKV1x/Lv8z75LF3T3X
E2hTYrH785PK+OC3tSmV+NhR+c+Nn/Ta9An0rOJgf5/rebW5EPRS0CtCrwG9
PvTm4lOlZY7rejvo3WD4vuI+zWUO4PpQ6KNg+EliN/oHue93Zv7Y+bcbPwvE
sjTIfVHmN7xcvGh/yezD8rv92+vzx06/rm/Tpr3Qj0A/Bf2H/Hr+9rM42Dxw
/Tr0O+Jgfcr1f8RuaZ7c9TgFnrmx+899/y8W0L+P18TB9o7rb2nTezD8+2I3
euO5nqlA7PLJTX9fiPe51X03/eUpoMd/QXGwuuF+PyULxC5/3OevIB7mvgH3
+6sudpP7fPf91BMH24OuNysQu7x2va02dRW7zZGKrvcRB+ubu6QP0eavoU+E
PkNczO2wdn2+Ni+Dvg6G3yp2s6+87u/fIw72f7v5x2Ft+hb6uQJ6/nNZm3+D
flvsZicT3N//dwH1e6L/tMPxC+rfx6viYPvEfX9vatO70NNpx3xcUM3v+HNx
sP51WobPXTB2ee2mrwLaVKKgnn+V16ZqBdXygOtqU1PobaB3gd4b+mDoI6FP
gD5d/K7bYHd9nriD22B0fSkMvxaG3wJ9N/RD0L8RB+tHbvx8r02XoF8rqH/f
t7T5r4Lq907/wvfzQiH9+q8U0sMnLaTnLykL6eVTWm36qJBevn9WSI+/XNqc
H3px6OWgV4VeB3oT6K2hdxZ3chuk30jvJXa7O859K32QNn8FfXyh2N+v69O0
aS4MvwT6Ghh+M7z+LnGwvnpE+kFxsP0rppNi9/Mv6PrZyOsdln5RnN3NcMX8
qzb9KXaLw96uPygUO/9y/ak2xyuseyJxsP5wVPobhWPnD2JKIT4hs/dprqcR
B+tb7vN/WFj9PZylcOzywfWcYje7S+I6FY6d/7n3LyaWv35ES7d8KatNVaDX
ht4YeqvCevnbSVzb/QBc76lNA6GPKKx/f+PEsvV2IZ37/UwVR9YHaU5hvfxc
XDj2+3bLt9XiYHvPzf83aRNHxqeb/x/QphOF9fLlu8j354b/SZuvQr8J/T70
J9CfL6L7y9qcBHpy6KmhZ4T+KfQc0PNBLwq9DPTK4mB/lOu1tKlRkdjfh+st
YfiO8Po9xO70ilGuD9Dm4dDHiiPrSzxFm2ZDXwR9ldg7f2KjNu2Evh/6cehn
oF+A/gv0P6Dfg/4YetyiuifU5teLxs7PXE+mzTHQM0DPDD07vP6X8P5FoJeG
HoJeE3pD6C2gd4DeHXp/6MOgj4E+GXoY+kLoK6FvgL4D+j7ox6Cfhv4j9CvQ
b0C/C/0R9OeK6f6SNieG/g70VNA/KKZ/f59oUzboeaEXhl4KeiXoNaA3gN4c
envo3aD3gz4U+mjok6DPgr4A+opiev62Hvp2GH4v9KPQT0E/D/1n6L9DvwP9
IfQ4xXVPoH3pNehvF9fTx3valB56JuhZoeeBXgh6SegVoVeHXh96M+jtxMH6
mvv7u0LvC8MPgT4K+kTxXzJ2Hsj+WJqpzfOhL4e+Dvo26HugH4H+LfQfoF+G
fl0c7M+W7evwbW36R5v/g/5iCd1f1aa3oL8L/X3oH0P/Anpu6AWhlxCXcQcY
3N9XQZurQa8Hval2TFvoXWD4PtAHQ/8a+gToM8TB/nrX52nTMvG/svs/i+tr
tWkr9N3QD4sj++vD34gjxwPonO58Cfpv2nxLHOxPdfu3/xa/71bw3fGBf8XB
9pUbPn5JPfwrYm/9+s2S+vtLKQ6OD7vh05XUn+8jbfpc/3vOBcMXEAf719z+
+eJi7/hGeW2uCr0u9CbQ20DvDL232Ns+HyQOjo+672dkSf39jdem6dDnQl8K
fQ30LWJ3Knsc13dBPwTDn4T+vdg7vnCxpJ5+r4kjx5/4T236q6SaHvipNr1Q
KvT//Z3u+0mkTUnFwfEAN32lEEeOR1Fabf4Q+mfQc0LPD70Y9HLQq4jPyOhJ
4HodbW4s9s7vba3NnaD3gtcfCO//VSn9+xqnxwdNg/EzB/oS6Kuhb4bO0A+K
3eb7NXd874TYO753Vpt/gv4r9JvQH0B/Aj1ead1f1qak0JNDTwM9I/Qs0HNA
J+hFoZeFXhl6beiNoLeC3hF6T+gDoI+APhb6VOizoS+Gvgr6Jug7oR+Afry0
nn6/0+YL0K9C/6O0/n3d1+bH0J8vo3tCbUpSRv/+kmlT6jL682cQB8ez3N/3
qTZnh54PehHoZaCHxMHxFddraXNDcbB/z32+ltrcAXoP6P3Fwf499/rDxcH2
unv9Mdo0BXoYXn8RvP5K6Buh74Dxux/G/zE9vukMjP8fof8C/Qb0e2K3OhHX
9UfaFLes7i9p0+ti7/qJd7QpBvoH0DOLvfMDsmnTl9ALQy8NvRL0mtAblNXT
Twttbg+9O/R+ZfXvY5g2jy6rf5+TtXkW9IXQV0DfAH17Wb182afNR6Gfhn4e
+hXov0O/C/0h9OfK6Z5AmxJDfxt6KujpoX8CPSv0vNALldO/n1LaXLGcHr81
tLk+9ObQ20HvBr0v9KHQR2nHTII+E4ZfAH059PXQt0HfC3//ERg/p6D/AP1n
6NfF3vk5d7T5H7G3fhqnvDK/qE2vQX8L+nvQ34eeCfoX0PNALwi9JPQK0KtD
rwe9WXn997fVpq7Q+0AfAv1r6BOhz4A+H/oy6OvE3vbB1vL6+92jzYehfwv9
HPTL0H+Dfhs+39/iyPow/Qc9fgX9+V/V5jehvws9nTg4fur6x+Lg+Knrn2tT
bnFwfoebvxfQphLQy4u99ZNq2lxXHGzfufMHm2pzG+hdxEXk9OSu7vrE3to0
WHxXNgeruj5SHBxfccu3CeI/5fSvLa5P16Z50JdCXwt9C/Td0A9B/wb699Av
wfi5BuPvVgW9fP1L7K0f/KvNL1TUw79SUQ+fVOytn6UUB+cvue3vtOJgf7J7
/Y+0+TPouaDnh14cejnoVaHXgc/fRJtbQ+8MvRf0QdC/gj4e+jToc6Evgb4G
+mbou6AfhH4S+lnoF8XB+WLu+/lVm/6E/gD6U+jxKumeSJvfEAfn17n5dwpx
cH6Qm3+lEQen/7r+oTZngZ5THJyf516fxN7+v2LaXLaSnj6riIPra9z147XF
wfkGcr0kNdbmVtA7Qe8JfaA4ON7u+ghtGgd9KvQ50BdX0r/v1dq8CTpDPwD9
hLiA+0Jc/66SXn78pM1Xod+Efh/6E+jPh0Jq/f1lbU4S0t9P8pD+/KlDev6c
UexdX/6pNuWAng960ZCev5cJ6flHZXFw/N7NP2ppUyOxt3+xpdjNDnO76b+j
ODi/0fUe2jRAHJy/75aPw8UTZfH82H2+sdo8RextH8/W5kVib//sKrG3f3Sj
OLI/jnbC59sPn++4uIs7QWWd9DPi4HocMV3Q5l/Ewfmxl6T/oc33xMH260Xp
j7U5buXQ/8/fdecHJqwcUtu/r1fWv/9klfX0EaNNGcQLpskFaG75nxl6dnFw
fo77/X+pTUWgl4Yegl4TekPoLcTe+kcHbe5eWX///bV5GPQx0CdDD1fW0/9C
bVoJfQP0HdD3Vda/v2PafFocHJ9zf9+P2nwF+o3Kevl0V5seib39B89VUaaX
tDkx9Heq6PGTqor+/B9o8yfQs0HPK/bWjwprcynolaDXEHvrxw20uTn09jB8
N/h8/arE/r7d+B2qTaOhT4I+C/oC6Cugr4f33w59Lwx/FPop6Oer6On/5yrq
90q/a/Md6A+hx6mqewKxW/285X5/r2nT29Dfg+HTa3Mm6Flh+DzQC8HwJaFX
hOGrQ68PvRn0dvD6XaH3hT4E+ijoE6HPhD4f+nLo66Bvg74H+hHo30L/Afpl
6Neh34b+D/T/oL9YTfdXtemtanr8v6tN70P/GPoX0HPD6xeE9y8BvQIMXw1e
vx70pjB8W+hdYPg+Yu/+SYPF3vHpr8XB+fZu/XmCNs3Q/57nib31/2Xi4P4h
wfF/bdoKfTf0w9C/gX4O+iXxP3I68V7XfxMH1xu4fqtaSB0f/lvsXZ/xrzhy
vJ3iV3/mR3K5yTg3/CviyPFoelObU1bXf386bf4I+ufQc0EvAK9fHN6/PPSq
0OtCbwK9DfTO0HtDHwR9JPTx0KdDnwt9KfQ14sj2HG3R5l0w/CEY/iT076Ff
hH4NXv9Psbd++Zc2P62up48XaoT880k4kdjbP5ZUm1NATwv9wxp6+f+ZNueE
nh96sRr685fT5irQ60BvDL019E7Qe0EfCP0r6OOgT4M+B/oS6Kuhb4bO0A9C
PwH9LPSfoP8K/Sb0B2Jv/8ITbYpXU/eXtekN6Mmhp4GeEXoW6DnE3v5TEnvb
h0XF3vHDstpcWRxcz+rWX2trcyPoraB3FHvbVz21eQD0EdDHQp8q9vZPzNam
xTD8KuibYPid0A9APw79O3j9C2Jv++iqNv8hDs4fcsvf+zX18vdxTb18fr6W
7gnF7vDGcbd8TqLNySJ215ek1uYM0D8Ve9eXZtemfNCLiCPXm1IZceR6Fw6J
g+t13PV/tWrFji+3/GyoTS2hdxAH9wNxf38Pbe4vjuyPoeHimbcW7i+Z3Y3f
MWLv/gtTxN72ZVjsRudC1xdFPr8bfytrhdT2x8Za6vviHfr7oP3w/RyD9z8j
ThLs8JP+ozb9Av0G9HviyPXK/Cjyedz1xXFrK/NLtWOXX66/Xjv287nv5x1t
ioH+AfTM0LPVjp0fuPODv6wdO37d+xfWptLQK0GvKQ7OjzwkvYE2tYDeHnp3
eP1+8PrDoI+G4SeLS7kTpF2fpU0Loa+AvgH6duj7xMH1WpelHxV7xydPa/P5
yPfp1j+uiL31y9+16S70hzD8c3WUOYE2JYb+NvRU0NND/6SOnj6zir3ri/KK
I9djcyFtKgW9IvQa0OtDbw69HfRu0PtCHwp9FPRJYu/68ZnatAD6cujroW8T
e+sHe7X5SB29/D4l9tY/f9Cmn6Ffh34H+j/Q49TV/UVteg36W9Dfg/4+9Ex1
1d/DX4i99ds8dUNq/aJgXb18LSn21h8qaFN1sXd+RT1taib2zj9pC+/fVezt
X+wj9o4vDBF7+w+/1qaJ0GeIveMD87V5GfR10LeK3elmKV3fo82HoX8L/Rz0
yzD+foPxdxv632Lv+MV/Ym//aPx6+vt5VZvfhP4u9HTQP4b+OfTc9dTn4QJi
b/2qhNhb/yqvTdWg14XeFHob6F2g94Y+GPpI6BPE3v7h6do0D/pS6Gvh9beI
vfWj3TD8IXFwv73g+D/07+HzXRJ7xzeviSPrQ3QL+l9i7/jFv9r8Qv2Qv7+I
XtHmpNBTQk9bX09/H4kj9wvgz8TB/aHc+mMubc4Pvbg4WJ1y899y2lS1fuzy
+Yz0OvVjx5+YmoiD68Hc9eutxd76UWexO5y2yl1f1au+Xv4Nqh87vt36y1fa
NB76tPqx07/rc7V5CfQ10DdD3wX9IHy+k5G/z33+s9p0UezdP+RX6H9Gvi/X
H0Tez43/p+Jgfd19P/EaxI5f1xNp8xti7/qtFA1ip3e3/pFGmz4Ue9cfZREH
20+u52yg/l4mceR8Eyom9vavlRV7+y+riIP7Ubj9J7XFkfMRqHEDtTzhVuLg
fgaud2qgl089G6jlDQ2MfD43fxsh9s5/GqfNU8WR6/lojti7Pn+xOLhfneur
tXlTg9jlQ3D9vzYfEHvXr5/Q5u+g/wT9KvSbDWKXH+77vQ/9SQM9/TzfUE8/
LzeMnd+74ZNoU3Lxbdn8G+Z66ob6959R7F1/9ak4WD9300cOsbd/OJ/YW78u
ql+Py8Dnqyz27u9TS+ztX27UUE2P3FKbOoq96+N6iL3rqwY01PPf4WJ3enhJ
N/8cq81ToM9uqOfPixrq+e8qsbf/YKM4uJ+h+/t2ir3z6/bD+D3eUC+fz0TG
j1u+XBB72+e/NFTTO/0R+fvd9vU9/Xnosdg7Phi3kTIl1ObXoSeDHiP29r9k
gJ4Zhs8O/UvoRaCXhh6CXhN6Q+gt4PN10ObujdT4ov7aPAz6GOiTG4XU/qWw
Ni+EvhL6Bug7oO+Dfgz6aeg/Qr8C/YY4sn8yfFebHmnzc411f0mbE0N/B3oq
6B9A/6Sx/v1n0+a8Yu/+YIW1uRT0SjB8DXj9BtCbw/DtoXdrrH+//Rrr+ePQ
xmp5TKO1eVJjvfydpc0LGqv5Oa3Q5vXQt8Pfvxc+/1Hop8Te/fPONw6p/Q8/
a9Pv4sj5THxHmx5Cj9NED59Am1+D/nYTPfx7TWI/n+vptTkT9KzQ80AvBL0k
9IrQq0OvD70Z9HbQu4q97fO+2jxEHDnfjEZp80ToM8Xe8aX52rQc+jro26Dv
gX4E+rdi7/zAH7T5MvTrMPxteP1/xN75h/9p04tNQ+r8mle16S3o70J/H/rH
TfXrfyH29t/lFnvrpwXF3v6hEtpUAXo16PWgN4XeVuztf+wi9q5P7iP2ri8f
LPauj/9a7O1fmaBNM8Te+u88bVoGfW1T/f1t1ebd0A/rz8vfiL3r986JveuL
L4m99fPftPkW9L+b6vnDv9oUv5ke/hVtehN6Sujpmunv5yNt+hx6LrF3fXoB
bS4OvTz0qtDrissFO7CkN9GmNs1Cav21M/TeYm/9eVAzNT3TSG0eD3262D/+
r01Loa9ppudfW7R5F/RDYm//40lt+l4cPM8suP5f7J3fek3sbR/+qU1/wffz
VOxtH77QXJkTNde/n6TN9e8rhTalba6n7w+16TPoOaHnh14MejnoVZrr6a+O
NjeG3hp6J+i9oA+E/lVz/fsfB3//NLG3fT0HPv8SsXd/itXiyPY6bYa/j5vr
+f9BbT4B/Sz0n6D/Cv2m2Nt+f6DNT/TfS/Fa6OnjZW16Q+zdnyC5NqURe9tn
GcXe/oUsLfT754BOLfT4K6pNZaFXhvevDZ+vEfRW0DtC7wl9APQR0Me20L+f
qS30+J+tTYuhr4K+CfpO6Afg/Y/r8Unfwfi9AP1qC738/0Ps7f+/r82PoT/f
MqSuD0+oTUmgJ2upx19qbc4g9tbfPtXm7C319JmvpZ6+ioi99Zcy+t9zCIav
Bb2h2Du+0rKlXr53aKnHXw+xt37RH/6+4S31+B0j9o7PTGmppncOw/svEnv7
x1dq00Z4/R3Q9+vX42Pw/mda6u/3R7G3/+MXeP8bYm///r2WIf/85/Ajsbd9
H7eV6vyS2Ds/4nWxt//lnVb6749pFdL3/28VUtvfmcXe/olsYm//xJfQC7fS
85fS2lypVezy3w1fs5X6e7iBNrWA3l7sHf/prs39xN7+p2Fi7/jJ6FZ6/E/W
n4dn6X9PC/Xr8YpWanqgDdq8Hfo+sXd87ajYOz53upX+/s/r75OuwPf7O4y/
u/D5H4rdy11354881zr0/+cBrJeeQBzcr0lMicVt3Aknrr+tTanEwfER19OL
g+cPuet7PtHmrK1D+vp/ceR8GC6kTaWgV4ReA3p9cXB/edebi4P7Z7vP104c
uR6JukHvK/7AHZB3fag2jxIHz6dy19dNEnvX183UpgXQl0NfD30b9L1i7/rA
I9p0Shzcn931H6D/DMNfh34H+j/Q47TRr/+iNr0G/a02evj3tPl96Jna6L//
izZ6/OfR5oLQS0KvIPbW76qLvfOv6mlTszZ6+dO2jV5+dW0TUseH+oi9+/MO
aRNS+9e+Fnv375/YJnb+Gtz/X+zdv29+m5A6frWsjV5+rWuj5x9bI//e/b73
aPPhNnr+8K3YO3/tnDhyvIAua/Nv0G9D/xve/z/o8duG1Pn1r7YNqe27N9uG
1P393hVHrufldGJv/e1jsXd/u8/b6t93brF3flyBtmp+RiXE3vHj8uIDsrur
ruvVxJHz/biuOLh/vXv9puLgftuutxEHz1dxw3dpq+cfvfXr0WB4/ZFt9fxr
gjZPF3vHN+Zp81Loa9uq5TlvaaumV9ot9q7PPCSObM/SN+Jge92dn/a92Lu+
7pLY27691jakjm/fgvf/S5v+bRtS6xcvtFOmV9qp9+Ok0FO2039/2nb6+/uo
nV7+fCb2ri/N1U7N7zm/NhWH4ctpU1XodeD1m+jPw63b6eVn53ZqeuFe8PkH
wfBftVPTE41vp5Y3PK2dXr7OFQfP33B/3xL4/Gvg828WB+ffuuF3afNB6Ceh
n4V+Efqv0P+E/gD6U+jx2uueSJvfgJ4CehroH7bXy4cs2pQTOrVX45OKaXNZ
6FWg14beWByc/+h6K+idYPie0AdCHwF9HHz+qfD3zYG+GPpq6Jugszg4f8U9
/+2AODi/wD0f7gT077TpJ3FwPojrV7Xppjg4HuWe73Zf7D1/7ok2P99B95fF
kefBcRJx5Hl1lLyDfv/U0DNq86fQc0DPB70o9DLQK0OvJQ6Ot7nn1zXS5pbQ
O4qD9QnXe4iD56G6PgD6cG0aC30K9NnQF4m95++t0uaNMPxO6Pth+OPw+mfg
81/Q5l+g/wH9Hrz/Y3j9uB11T6jNr0NPJo48z5BjtCkD9MzQs3fUn+9LbSoC
vTT0EPSa0BtCbwG9A/Tu0PtDHwZ9DPTJ0MMw/hZ21N/vSnFwvwr3/McN2rQD
+j7ox6CfFgfHZ+T5lvSjNl8RR55/STe0+S70R9Cf66T7S9qcGPo70FNB/wD6
J+Jg/4d7fm02cbD+Is+r5bziYH3ZPb+2sDaXEgfry274StpcA3oDcbA+7Xpz
eP/22twNej9xsD69QPpQsff83dHw+pNg+FniYP3bDb9Am1bA379evx9th/ff
C/0o9FPiYP3KPR/2vDjyPF/+Wew9//h3/e/5jv739FAcnM/vnv8bp3Po/+t3
7vqkBGLv+Nxr4sjz6ujtznr+/p44uB7KTd/pxcHxqVXSM0HP2llP33nEwfaO
e/5rIf3vuWRn/fupKPaev1pdHOxPWiK9fuTzuue7NtOmdtC7Qu8rDo6vuD5E
7D3fdpQ42N6Q9+OJ4mD/lXv/meLg/M3F0ud3VtMTLdfmdfr1aBu8/h7oR6B/
Kw62l13/QZsvQ78O/TaMv3+0+T/oL3bR/VVtekscbA+5v/9dbXof+sfQv4Ce
G3pB6CWgVxAH+z9dryYO9m+4+Vc9bW7aRc/f2mpzF+h9oA+G/jX0CdBnQJ8H
fZk4OF57SvrayN/jtg+3avNusbd+eFjs7Z/9Ruxt/50TB+c3uPPHL4m97a/f
xMH5Su75bbfE3vGHv8Xe+b//dgmp48Pxu4bU/Q9e6RrS1/+LvePnKbuG1PnL
6bT5I+ifi4PtAff8s1zi4HiJm38VEAfr8+76q+LiyPMcqXzXkDo/uGrXkH+/
fqrbNXb6cK/fRJvadA2p57N17ho7vzgmvXfXkP+8Nh6ke8xIbR4Pw0+H15+r
TUuhr4G+Bfou6IfEwfEH9/y3k2Lv+aPfi73nT17sGrt8ceP3mjb/2TV2+nDD
/yUOjhe4/X9Pu4b85znSC91C6vmHicTe+W1JtTlFNzU+KW232Onfnb//oTjY
f+LO7/9MHOwPdMPnFEf291D+brHzK3f9QjFtKtctdvp0w1cRB+fLuL+/jjY3
ht5a7D2frlO3kHr+Ra9uIXV++UDoX2nzOLH3/Lxp2jxH7F1/vEQcHO9w779a
HHneLW0WR54HyCwO9o+5fhDG/wmxd33t2W6xyy/Xf9KmX6HfFAfHw1x/oM1P
xMH5hK7H667ej1/uHlLX774h9q7fTq5Nabrr8ZNRHKxvup6le0g9PzeH2Ht+
IXVX44OLioPzx10vKw7WR1yvrE214fUbweu30uaO0Hvq9+MB8PojxN7zEceK
vecvT+2uf1+zxd7zRxd3V9MDr9KmTdB3Qj8A/Tj076BfgM93FfofMPx96I+h
P99D94TalAR6sh76/VP30N9fhh76+/1Um7NDzwe9CPQyPfT3E9KmWtAbQm8J
vQP0HtD791C/dxqu/14eA31KD738D2vTIhg/K3vo6XOjNu+Avl/s3R/hWA/9
+z6jzT+KveuzfhF7z0+9IfaeT3pPmx/1UPN7ittTz/9f0qbXxcH2pOvvaFNM
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
/lZgqin2nscK5gZi7/pYMLWwze1tU3fb3M82DbPNo23TZLF3vw0wz7JNC23z
Ctu0wTZvtx2zzzYftU2nbfN523TFNv9um+7a5oe26bmvTHMC25TYNr9tm1LZ
5vS26RPbnNU25bXNhWxTKdtc0TbVsM31bVNz29zONnWzzX1t01DbPMo2TbLN
M23TArF3vx0wL7dN623zNtu01zYfsU2nbPMPtuln23zdNt2xzf/YpjgjTfOL
Yu/8CzC9Zpvfsk3v2eb3bVMm2/yFbcpjmwvappK2uYJtqm6b64m9+2uBqZlt
bmubusL7g7mPbRpim7+2TRNt8wzbNN82L7NN62zzVtu0xzYftk3f2uZztumy
2LsfGJh/s023bfPftuk/2xz/a9P0qm1+0za9a5vT2aaPbYc/t025bXMB21TC
Npe3TdXE3v34wFzXNjW1zW3E3vltYOpim3vD64FpsG0eaZsm2ObptmmebV5q
m9ba5i22abdtPmSbvrHN39umS7b5mm26ZZv/sk3/2uYXRpmmV2xzUtuU0jan
tU0f2ebPbFMu25zfNhW3zeVsU1XbXMc2NbHNrW1TZ9vca5Sen4BpkG3+yjaN
t83TxN799cA0VxxcDxbNvETsnT8BpjW2ebNt2mWbD9qmk7b5rNg7/wJMF+H7
A/OvtulP2/zANj21zfFGh9T95cCUyDa/YZtS2A6nsU0f2uYstimn2HseH5hJ
7J0fA6ZiYu95UWAuO1p//2CqMlr/HsBc2zY1Hq2/PzC3sk2dbHNP2zTQNo+w
TeNs81TbNMc2Lx6t50dgWm2bN9kmhukJzAdgeDCdEHv3EwXzd6P1/ARMP4m9
+2WC+SpMP2C6aZvv26Yntvn5MabpZducxDYlt82pbVNG2/ypbcphm/PZpqK2
uYxtqmyba9mmRmP08hfMLcfo+RmYOsLrgbnHGD09g2mAbR5um8aO0b8/ME+B
zwOm2bZ5Ebw/mFbZ5o22aadt3m+bjtvmM7bpgm3+xTb9YZvv2abHtjnuWNOU
0Da/bpuS2eYY25TBNme2Tdlt85e2qYhtLm2bQra5pm1qOFb/fsDcAoYHUwfb
3B1eD0z9bfMw2zTGNk+2TWHbvNA2rbTNG2zTDtu8b6yen4PpmG0+bZt+tM1X
bNMN2+G7tumRbX5unGl6yTYntk3v2OZUtukD2/yJbco2Tv9+wJzXNhW2zaVs
UyXbXMM2NbDNzcfp6RlM7W1zN7H3fA4w9bPNQ23TaNs8yTbNss0LbNMK27ze
Nm23zXtt01HbfMo2nbfNP9um38Xe+iiY79imh7Y5znjTlMA2v2ab3rbN79mm
9LY5k23Kapvz2KZCtrmkbapom6vbpvq2uZltamebu9qmvmJv/xGYh4gj14Oh
aZRtnmibZtrm+bZpuW1eJ/aezwGmbbZ5j9jbfwamI7b5W9v0g22+bJuu2+bb
tukf2/yfbXpxgml+1Ta9ZZvfFQfXr0YzvW+bP7ZNX9jm3LZjCtrmErapgm2u
Zpvq2eamtqmtbe5im/rY5sG26WvbPME2zbDN82zTMtu81jZtFXv7w8G82zYd
ts3fwPuD6ZxtvmSbfrPNt2zT37b5X9sUf6JpfsU2vWmbU4ojz5NCUzrb/JFt
+tw257JNBWxzcdtU3jZXtU11bXMTsff8QDC1geHB3Nk29bbNg2zTSNs83jZN
t81zxd76O5iW2uY1Yu/5UGDaAsODeZdtOiT2njcF5pO26XvbfNE2XbPNf8Ln
B9NfMDw4/NQ2vTDJNCeyTUltcwrblNY2f2ibPrPNOW1TfttczDaVs81VbFMd
29zYNrW2zZ1sUy/bPNA2fWWbx9mmaWLveQJgniP2no8KpiW2ebVt2myb2TYd
tM0nbNNZ2/yTbfrVNt+0TQ9s8xPbFG+yaX7ZNr1hm5PbpjS2OaNtymKbc9gm
ss1FbVNZ21zZNtW2zY3Ewf2Uo5laib3n6YK5o+2YnrZ5gG0aYZvH2qapYu95
w2CebZsW2+ZVtmmTbd5pO+aAbT5um76zzRds01Wx97xhMP9hm+7D64H5sW16
foppTjhFf/9gSmKbk9mm1GL3dhWjmTOIg/sBr4li+lTsPe8RzNltUz5xcH+q
tVHMRWxTGbF3Pzwwh2xTLXg9MDe0TS1tcwfb1MM297dNw23zGNs0xTaHbdMi
27zSNm20zTts037bfMw2nYHpAcw/2qZfbPMN23TPNj+yTXGnmuaXbNPr4sjz
UdH8jji4v9KqKKYY2/yBbcpsm7PZpi9tc2HbVNo2V7JNNW1zA9vUQhzcTyCa
ub34yWI5oTOaqTsMD+Z+tmmYbR5tmybb5lm2aaFtXmGbNtjm7bZpn20+aptO
2+bztumKbf7dNt21zQ9t03PTTHMC25TYdvhtceR+kWhKJQ7uH7c6ijm9bfpE
7K1PgDmr2Ft/AVNe21zINpUSB8/HWBvFXHGanv+CqYZtrm+bmtvmdrapm23u
a5uG2uZRtmmSbZ5pmxbY5uW2ab1t3mab9trmI7bplG3+wTb9LHa31y29Jor5
um26Y5v/sU1xppvmF23Ta2Lveehgfss2vWeb37dNmcTe8+bB/AUMD6Y8Ynf7
w0zRzAWn6/kXmEra5gq2qbrtcD3b1Mw2t7VNXW1zHxgfYBpim7+2TRNt8wzb
NN82L7NN62zzVpj+wbRHXMgtUFZHMR+G4cH07XQ9PwDzOdt0ebpefoH5N9t0
2zb/bTvmP9scf4Ze/oLpVdv8pti7HgJM74q9479gTif2zicB08fwemD+3Dbl
Fnvnb4K5gNg7HxRMJWxzedtUDd4fzHVtU1Pb3MY2dbHNvW3TYNs8EsY/mCaI
vfthgHm62Lt/ApjmwfgE81Kxf/2/Nq0Ve8eDwLxF7J3PAabdYu/4M5gP2aZv
bPP3Yu/4PZguwfBgvmabbsHrgfkv2/SvbX5hpml6xTYntU0pbXNa2/SRbf5M
HDxvO5opl23Ob5uK2w6Xs01VbXMd29TENre2TZ1tcy/bNMg2f2WbxtvmabZp
rm1eYpvW2ObNtmmX2HveHJgPiiPPg0DTSdt81jZdtM2/it3ptPu3RjH9aZsf
2KantjnerJC6Hy6YEtnmN2xTCtucxjZ9aJuzzNLfJ5hy2mayTcXg/cFc1jZV
sc21bVNjsfe8BTC3guHB1Mk297RNA23zCLF3P2kwjbPNU23THHh/cHixbVot
9u4nDeZNtolt8wHbdGKW/v2D+Tvb9JNtvmqbbtrm+7bpiW1+PmyaXrbNSWxT
ctucWuzdjxFMGcXe/Z/B/Cm8HphyiL37SYM5n20qapvL2KbKtrmWbWpkm1uG
9e8PTB3FwfNaNkcx9xBHnleHpgFi9/iIlFuimIfD64FpLLwemKeIvfufg2m2
2Lv/PJgXhfX8DEyrYHyAeaNt2gnjH8z7bdNx23zGNl2wzb/Ypj9s8z3b9Ng2
x52txx+YEtrm121TMtscY5sy2ObMtim7bf7SNhWZradfMJe2TSHbXHO2nv7B
1NA2txB7609g6mCbu8/W828w9YfhwTxstl7+gmkMfH4wT7ZNYdu80DattM0b
bNMO27zPNh2zzadt04+z9fwYzFdg+gXTDbG3/grmu7bpkdh7/gOYn5sTUtsz
YHpJ7D1PDsyJbdM7tjmV2Hv+Cpg+sM2fwOuBKdsc/feDw3ltU2HbXMo2VbLN
NWxTA9vh5rapvW3uZpv6wfgE81DbNBpeD8yTbNOsOfr3BOYFMD2AacUc/XsC
83rbtN0277VNR+fo3yOYT4m99WcwnYfXA/PPtul323xnjp7/g+khfB4wx5n7
zCXcA+02RzElsM2v2aa3bfN7tim92Nv/D+ZMYv/6f23KKvb254M5j7iMu6Fc
NFMhGB7MJW1TRXg9MFcXe/c/AVN9+HvA3Mw2tRMHz7vZFMXcVexdDw+mvmLv
/ntgHiL2jl+AaZRtnmibZtrm+WLv+RFgWi727mcP5nW2aZs4n/vBrYli3mOb
jtjmb23TD7b5sm26bptv26Z/bPN/tunFeab5Vdv0lm1+VxyWw7nxV0cxvW+b
P7ZNX9jm3LapoG0uYZsq2OZqtqmebW4K4xNMbW1zF9vUx3Z4sPi+zG7Sr45i
+to2T7BNM2zzPNu0zDavtU1bbfNu+D7AdNg2f2ObztnmS7bpN9t8yzb9bZv/
tU3x55vmV2zTm7Y5pW1KZ5s/sk2f2+ZctqmAbS5um8rb5qq2qa5tbmKb2tjm
zrapt20eZJtG2ubxtmm6bZ5rm5ba5jW2aYtt3mWbDtnmk7bpe9t80TZds81/
2qa/xMHzFldGMT+1TS8sMM2JbFNS25xCHDz/e0UUU1rb/KFt+kwcPA90eRRz
TtuU3zYXs03lbHMVcfB87GVRTHXEwfN8l0YxNxYH+wuimVqLg+3ZJVHMnWxT
L3h/MA+0TV/Z5nG2aZo42J8RzTzHNi0RB9uTi6KYV9umzbaZxXPkcurT0UwH
bfMJcbC9Fc101jb/ZJt+tc03xcH5dtFMD2B4MD+xTfEWmuaXbdMbtjm5bUpj
mzPapiy2OYdtIttcVBycbzQ/iqmsOLjfRTRzZdtU2zY3sk2txMH11nOjmDuK
g90J0Uw94fXAPEAcrM/PjmIaYZvHioPnGYejmKbC5wHzbHFwPurCKKbF4uB+
CPOimFeJT8njnHNGM22C8QfmneLgfPNopgO2+bht+s42XxAH5+PPiWK6CsOD
+Q/xdDkduOnsKKb78P2B+bE4uN54bhTT84tMc0LblMQ2J1uk/34wpRYHu8Nm
RjFnsE2f2ubstimfbS4ilqsFY1a5z1tmkV6+hLSpljh4Poib3huKg/ONF0hv
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
2OYfbdMv4mD/xtQoDt8QB+frTI5iuicOzi+ZFMX8yDbF3RT7exsfxfzSJj08
mF63ze/Yphjb4Q9sU+ZNevyBw9ls05fi4P5a0cyF9b9HU2nbXMk21YT3B3MD
cbB/a1oUUwvb3N42dbfN/Tbp6RdMw2zzaNs02TbP2qTnH2BaKPbOvwbzik0h
df41mDbA8ODwdnHk/Ho07bPNR+Hzg+k0vD+Yz9umK/B6YP5d7J3vDaa7tvmh
2Du/GkzPbQ79//7qc6KYE9imxJv1/Bwcfts2pRIHx+ejOZzeNn0CrwfmrLYp
r20uZJtK2eaKm/X0BKYatrm+bWpum9vp8YWmbpv17wnMfcXe/l8wDd2sp2cw
j4LPA6ZJtnmmbVpgm5fbpvW2eZtt2gvjD8xHbNMp2/yDbfoZvg8wXxd717+A
6Y7Yu94IzP/YpjhbQmp9GMwv2qbXbPNbtuk92/y+bcpkm7+wTXlsc0HbVNI2
V7BN1W1zPdvUzDa3tU1dbXOfLXp6BNMQ2/y1bZpom2fYpvm2edkW/fsH0zqx
t/0C5q3i4HycWVFMe8Te9VJgPmybvrXN52zTZdv8m226bZv/3qKXP2D6D8Yn
mONvNU2vbtXLXzC/KQ6Ol0+OYnp3q/4+wJxOHBzvjGb6GIYH8+e2KbdtLmCb
SsDnAYfL63+Pjqlmm+vC3w+mpvB5wNwGhgdTFxgezL1t0+Ct+vcH5pHw/mCa
sFVPv2CeDsODaZ5tXgqvB6a1MDyYt9im3fB6YD4Ew4PpG7G3PwXM38PwYLok
Ds6HmRHFfA2GB9MteH8w/wXfP5j+FQfXy02PYn5hm35/ML2yTb8/mJOKg/tf
zIhiSmmb027T4wNMH8Hw4PBntimX2NsfC+b8Yu/8IDAVt83lxMH1UNFMVcXe
+V5grmObmtjm1vD+YOos9u4/AOZe4rTuhKd5UUyDxN7+WzB/Jfb2Z4NpvNjb
/wzmaWJvfQhMc23zEvg8YFoDfw+YN8P0AKZd8PeA+SAMD6aTMP7B4bN6ekLT
RfFd2R1adXEU869i7/pvMP25LaTOhwPzA5iewPQUhgdzvO0htf8ETIls8xu2
KYVtTmObPrTNWWxTTttMtqmYbS5rm6rY5tq2qbFtbrVdf59g6mSbe9qmgdv1
9ATmEbZpnG2eapvm2ObFtmNW2+ZNtolt8wHbdMI2f2ebfrLNV23TTdt8Xxxc
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
2TI5ex4uRltvdvJGD2/29cZL3nwjOXt/Jsb7Mn5ifiLlxfhGti/mT1JejL+8
OcwbY7052Ruzpf9iLvLGKm+ul+2LUXOoNbcYWnG+7LsRY3tv1vPGPt48aGjD
/P9VqXGUN0/0xhnePD+5/PMeGzMaJGf3z2JelZzdP4txY3J2Py5mk+Ts97DF
aObNh7zxmHdxx+Ts9+vF6O7NPsnZ8yMxXvTm6954z5sfe+Nr7+IfvfGnN4d6
Y4w3J3ljljcXemOlN8uSs89jilFjWJw/Ym7uje28uas39vbmgd440psneON0
b57njcu82dgbRd683Rv3erOFN9p4s4M3unmzd3L2/xTEeMGbr3njXW8O8sZX
ydn7dzF/8MYfydnzeDGHeGO0NycmZ9eTYsyU8mIukPJirEjOrh/ELE3OrkfE
qD7cmnW8sa03d0nO7gfE2Mu7+IDhYTzUOGJ47L+Yx3vjNG+e641Lk7PrXzGv
9MYN3rzNG/cMj/NBzAe98ag323uj6/C4nsTsJeMnRn9vvuqNd2T7Yg5Mzj6/
LsaXydn7RzGZnP3/JjF+l+2LOdgbo2Q+izlByosxQ8qLOd8by5Oz7++IuU7K
i7HJCOsqdbxR15s7e2PP5Oz9q5j7j4j7U4zDR8T5IOZxUl4MePMcb1zizUbe
uH5EnA9i3irjJ8bdydn9g5jNk7PPI4jROjm7HhWzXXJ2PStGl+Ts/xeJ2TO5
/PdONmb0GxHnr5ivJGfXM2IMGBHXs5gfeeMLb37vjd9k/or5r+x/MUqSs//n
JOZ4GT8xpidn72PFnOeNZbJ9MdeOiOcvMaqNjPNXzNrJ2fNrMbZJzr4PIuZO
ydnzUzH2SM7eP4hZ3xuHefNYb5zqzbO9cXFy9n1oMRsmZ+9fxLhO6hPzluTs
+bcYTZOz5+liPjAy7n8xWiVnz/PFfMIbnb35jDeel/kgZnFydj0rxtvSHzE/
TM6uX8T43JvfeeNXb/7jjZHeHOeNad6cOzKef8RY6s013igoseam3tjamzuW
xOOxGIXe3M8bh3rzGG+ckpzdP4l5Vkmcz2JcVBLP52JeURLPp2JcWxLPp2Le
XBKP52LcVRLXk5j3l8T1JMYj3nzcG08lZ/czYj7tjedk/MXFL3vjLW9+UBLX
kxifefNbb/wi81/Mv2X/iTHCm/95Y6o353hjibRfzNVSXoyqo2J5MWt5Y6tR
cT6IuYM3dh8V2yPmvt44xJtHe+Nkb57pjQtlPMS83BvXePMmb9zpzftGxeOn
GA97s603nvRmj+TsflKMZ0fF46+YL3njzVHx+Cnm+8n59/+j8ak3v/HGz9J/
Mf/yxnBvjvXGFG/O9sZib66S8RejyuhYXsyao2N5Mbb05vbe2M2b+3jj4OTs
flTMo7xxkjfP8MYF3mzgjau9eaM37kjOnn+I2Sw5u/4Ro6XUJ+ZjMv5idPJm
d6lPjL7efFH6I8Yb3nzPG59482tv/OTNP70xzJtjvDE5OXt+IeYsbyzy5kpv
rE/O3meJWWNMw/A8TYwtvLmdN+p5c29vHOTNI5Oz+wExTvTm6VKfGOd78zJv
XCXbF7PIG028eW9y+e+Z9t+I8ZA323ijoze7JWffvxGjT3L2/RExX5D6xHjd
m+9642NvfuWNH735hzeGenO0NybJ+Ik5Mzn7/pUYC725whtl3qw+tuH/P2/b
eyPG5snlz/v6bsTc1hu7enOv5OzzXGIcmJx9/kzMI6S8GCdIf8Q8Lbn8eeTG
jPOSy5+H9NqIeWly+f34xozG3rzBG7dL/8W8xxstvPmoNzp4s6s3enuzvzde
8+Y7ydnn98QY5M0vvfGDN3/3xhBvjvIunDg2HC/UnOGNBd5cPjYev8Qo9eYm
/1mjjjfremMXb+7pjQO8ebg3jvcmvHGuNy/xxpXevN4bt3nzbm886M3W3mjv
zS7J2ftHMXp5s583XvXmAG8MlPaL+YWUF4Pe/M0bg5Oz999ilnhjgrRfzOlS
Xoz53lzmjXXSHzGrjYvlxdhsXGy/mNuMi/WJsbPUJ+Ye3thfti/mYd44zpun
yvbFOMebF3ujkTevS85+P0OMW73ZNDl7fyRG8+TsebaYrZKzzy+I0S45u/8V
s3Nydv8mRs/k7Hm0mM8nZ8+DxXjFm2974yNvfp6cPc8R43tv/uqNf7050hvj
ZfzEnCb7U4x53lyanL1/EmOtNwvGW6O2N7dOzt7/ibGTNwvHx+OPGPXHx/ks
5qHJ2fM4MY715ineONubF3mjoTevHR/nsxi3ePMubzzgzUeSs/cPYjzhzae8
8Yw3n/NGsTffkv6I8aHMPzE/88Z33vzFG/94c4Q3xnlz6vh4PBBjrjeXeGON
N6tOsMam3twqOXufIy7ccUJY72runpy9/xNjv/j3ah4yIR6/xTjGmyd74yxp
j5gXeuMKb14j/RHj5jieat4p9Ylxf3L2PF/Mh73xuDef9MbT3nx2QjyeivGy
N9+U+sT4IDl7HyXmp8nZ+wcxvvXmz974W7Yv5nApL8Z/3pwi/RdjjpQXc3Fy
9jxejNXerDKxYbgeFaOWN7f0xg7e3M0b+yZn18NiHjwx9keMo715ktQnxpne
vMAbl3vzam/c5M07vHFfcvZ5dDFbJmfXf2K09WYnb/RIzu4fxezrXfSSN9+Q
/ojxfnJ2/yjmJ9J+Mb7x5k/e+Mubw7wx1puTvTHbm4tkPMVY5c313qg5yZpb
eGP75Oz5r5j1JsX5L8Y+k+L6F/OgSfH8LcZR3jxxUjx/i3GGN8/3RgPZvphX
eeNGqU/MJt6FzWJ9aj4k5cV4TNojZkcpL0b35Oz6Qcw+3njRm6974z1vfpyc
Xc+J8bU3f0zO7qfE+NObQ5Oz5xlijJHyYk5Kzq5nxJgl/RdzYXJ2/SIuWplc
eb2iZpk3aky25ube2G5y7I+Yu3pj78mhP2oe6I0jvXnC5Dj/xTjdm+dNjvtD
jMu82dgbRd68Xdojxr2yP8Rs4Y023uyQnF0/itHNm72lP2K84M3XvPGuNwd5
4ytv/uCNP7w5xBujvTnRGzO9ucAbK2Q9ilnqjepTrFnHG9t6cxdv7OXNA7xx
RHL2PEPM471xmtQn5rlT4vlAjEu9eaU3bvDmbd64x5sPeuNRb7b3Rldv9vJG
f2++6o13vDnQG196k9743ZuDvTHKmxO8MSM5u34Sc743lntznTc2mWrNzbxR
15s7e2NPb+7vjcOnxvEU8zhvIDn//n80z5kaj99iXOLNRt643pu3euNubzb3
Ruup8XgqZjsZDzG6eLOnN/p58xVvDPDmR974wpvfe+O35Oz+W8x/vVHizfHe
mO7Ned5Y5s213qg2rWG4/hezdnJ2PSvGNsnZ9auYO3ljD2/W98Zh3jzWG6d6
82xvXDwtjqeYDaW8GNdNi/NRzFu80dSbDyRnzx/Fha28+YR3YWdvPiP9F+N5
mX9iFnvjbW9+KOMhxufe/C45u38U41dv/uONkd4c541p3pzrjaXeXOONgunx
fCTmpt7Y2ps7eqPQm/t549Dpcf2KeYw3TvHmWd64yJtXeOPa6XE9iXnz9Lge
xbhrelw/Yt4/PR7/xXhEti/m4954yptPJ2fPz8V4TsZDzJe98ZY3P/DGZ9Ie
Mb9Nzt4fiPGLN//2xghv/ueNqd6c440lydn7KzFXe6PqDGvW8sZW3txhRtx/
Yuw+I+4/MfeV+sQ4RMqLebSUF+Nkb57pjQtl+2JeLuXFuEbKi3mTN+5MLv9/
Kv02Yt7njYe92dYbT3qzhzee9eZL3njTm+/PiOtHjE+9+Y03fvbmX94Y7s2x
3oVT4nxQc7asPzEWe3OVN6rMjOcvMWvOjOc/Mbb05vYz4/oRYzdv7uONg715
lDdO8uYZ3rggOXv/LmYDGQ8xrpby4uIb49+rcYc3m3mjZXJ2/SDmY8nZ9YsY
nbzZXeaTGH29+aI33vDme974xJtfe+Mnb/7pjWHeHOONyd6c5Y1F3lzpjfXe
rDHLGlt4cztv1PPm3t44yJtHzorzWYwTvXm6N8735mXeuMqbRd5o4s17ZTzE
eCg5e/8kZptZ8XgiRsdZ8XgkZjdv9EnOv/8fzRe88brUJ+a73vh4VjwfiPmV
N3705h/eGOrN0dJ+MSZ5c6bUJ8ZCb67wRpk3q8+2xube3NYbu3pzL28c6M0j
vHHC7Hj+F/M0b5yXnF1/inmpNxp78wZv3O7Ne7zRYnZcj2I+6l3YIbny90DU
7OqN3t7s743XvPlOcnY/I8ag5Oz3L8T80hs/ePN3bwzx5ihvTPTmDG8s8OZy
b5TK/BFzkznWqOPNut7YxZt7euOAObE/Yh4+J84nMY5Pzn6/QUx449zk7P9R
iXmJN6705vXeuC05+z0UMe+W8mI8mFz+e959NmK2Ti7/vtozGzHae7NLcvn7
jKc3YvTyZj9vvOrNAd4YKOMh5hcynmLQm78lZ/9PTIzBydn/LxOzJDn7PR0x
Jkj7xZyenP2eihjzvblM5r8Y62Q9iVltrjU28+Y2c+P4ibHz3NgeMfdIzn7/
R4z9k7Pf/xHzsOTs93vEOM6bpyaXf5+w50aMc7x5sbRHjEbSHzGv88atydnv
J4nZ1BvNvdnKG+2kPWJ2lvJi9Jwb17OYz3vjFRlPMd/2xkfe/Fz6I8b33vzV
G//KeIg50hvjvTnNG/OSy79v33Mj5lJpvxhrvVkwzxq1vbn1vNh+MXbyZqE3
6nvzUGmPGMd685R5cT6JcbY3L/JGQ29e641b5sXjn5h3zYvzQYwHvPnIvHg8
FOMJbz6VnF2PiPGMN5/zRrE335L2iPGhNz/zxneyfTF/8cY/3hzhjXHenOqN
ud5c4o01sv7ErDrfGpt6c6v5cT2KsaOUF3P3+XH9iLGf1CfmIfPjehLjmPlx
Poh5sjfOkvrEvNAbV0h/xLzGGzd7804ZDzHu9+bD8+PxRIzHpT9iPumNp6X9
Yj4r5cV42ZtvJmfXL2J84M1PpT4xvpXxEPNn6Y8Yf8v4izlcti/Gf1KfmFO8
Mcebi5Oz+ykxVnuzyoKG4X5CjFrJ2f2fmFsmZ/fTYuywII6fmLstiPtDjH0X
xPUs5sHeONqbJ3njTG9e4I3Lpf9iXu2Nm7x5R3J2PyvGfd5sKftTjLbJ2f24
mJ1k/4nRw5t9vfHSgrj+xXzDG+978xNvfOPNn7zxlzeHeWOsNycnl79v67ER
Y7Y3F3ljlTfXJ2fXL2LUXGjNLbyxvTfreWOfhXE9inmQN47y5omyfTHO8Ob5
3mjgzau8caM3m3ijmTcf8sZj3uzoje7e7OONF735+sJ4PhXjPW9+7I2vvfnj
wng8F+NPKS/m0OTs+kOMMd6ctDAef8WY5c2F3ljpzTJv1Fhkzc29sZ03d10U
x0OMvb15oDeO9OYJ3jjdm+d54zJvNvZGkTdv98a93mzhjTbe7OCNbt7s7Y0X
vPmaN9715iBvfOXNH7yL/ojzXc0hUl6M0bJ+xFWmeGNmcnY9KeYCb6zwZql3
UfXF1qzjjW29uYs39vKedIA3jlgc94eYxy+O54fTJD9X8kujeaXkN0h+m+T3
SP6g5I9K3n5xPJ91jWav6KL+kr+anD1/ekfygVL/l/HvSSn/u+SDpf2jpP0T
ootmSD5ftr9c6l8XXVR9Scw3i0ZdyXeWfE/J95f8cMmPkxySnyP5JZI3kvx6
yW+V/G7Jmy+J49s6mu0k7yJ5T8n7Sf7Kkni8GRDNjyT/QvLvJf9N8n8lL5F8
fPSk6cnZ/cG8aCyTfG1y+ff1N1yfVlvaMFyf1o4uqiv5TtHYQ/L6S2P9h0Xz
WMlPlfxsqf9iyRtK+euWxuPPLdFoKvkDkreS/AnJO0v+zNK4f56PZrF4wNI4
/h9K/z6X8fsu/j1+lfwfKT9S6h8n7ZuWnN0/z4150VLp3xrZfsGyWP+m0dha
8h2XxfYVLov7b79oHCr5MZKfIvlZkl8k+RWy/WujebPkd0l+v+SPSP547G/R
U9L/p2V8npP8ZcnfWhbnywfR+EzybyX/RfK/l8Xz+Yjk7Pnbf9GYKvkcyZfE
+rha8qrLG4bnc7WWx+1vtTwen3dYHs+/uydnz3P3jcYhkh+dnD1fPjmaZyZn
z5MvlPxyya+J5k3JlZ+XKbozOfu8zH0xx8OSt03Ov78W/549pPyzUv6laLwp
+fvRRZ9K/o2U/zk5+/zSX7J/hkdzrORTJJ8t+WLJV0UXVlkR85orQnuwZTS3
l3w3yfeR/OAVcf8dJflJkp+xIsxXXLAizo8GK+Lx/+po3ij5HSvi+mkm228p
7X9M8k6xPeweXdRX8hel/W9I/l4cb3wi2/869hc/Sf//lHyYjN+Y6KLJks+K
xiKpf6XUv17K11gZy28Rze1Wxv7VWxn7t3c0DpL8SCl/YjRPl/z8lXF8L1sZ
j09XSf1FK+PxsUk075X2PSTl20jeUfJukveR/IXYXrwu7X9X8o9jf/jVynB8
xo/R/CM5uz4eGl08Ojl7fzApmjMlXyj5CsnLJK++Km5/8+Ts+mbbaOwq+V5S
/sBoHrEqnK9wguSnrYrr/7xoXroqnp8by/ZvkPbdLvXfI/W3kPoflbyD5F0l
7y15f8lfk/wdGZ9Bkn8p+Q/S/t8lHyL5KMknSj5jVVgvRQtWxfW5XPZPaTQ3
WR3Xb53Vcf3VjcYu8e+55+q4Pg6I5uFS//FSHpKfK/klkl8p+fXSvtuk/XdL
/qDkrVfH8WkfzS6S91od13+/aLwq7Rsg4zNQtv+F9I/J5b/PsmH9/hZdNFjy
kmhMkHy65PNXx/W1TPq3bnVYj6y2pmG4f9gsufz7f91Tvk1y+ffdu6V85+Ty
7wd1Sfke0dh/TcX6aJfyw5LLv0/VNeXHxfp4qpQ/R/KLJW8k278uthe3ron9
b1rZng3rq/maiv3ZIeWt1lQcz9unvJ3knWV8ekbz+eTs/uiV2F++vabifNQp
7d+PpPznUv77aP4q4/9vcvn3TzqnfGQ0xks+TcZvnuRLpfxayQvWhv2J2snl
1+tPpXzrtRXzvWPKd1pbsT/apLxwbcV4tE55/bUV9T+S8kPXxvE/VsqfEo2z
K//+lpRfFI2Gkl+bXH691CTlt6ytWC/NUn5XNB6oLN885Y8kl9+f3p/yJ6T8
U5X9a5ryZyR/TvLi2B6+Je3/sLJ8Uco/i8Z3kv8i/ftH6h9R6cYpHyflp8r2
58r4LZF8TayPVdfF7W+6rmI+tEj5Vuvi+O0Yzd2jC/dbF8aLh0TjmLg9niz5
Wevi+F8YjSskv0bymyW/U9p/v7T/Yckfl/zJdWE+4eloPivlX5byb0r/PpD8
Uyn/rYzfz1L+b8mHV45ny5T/F80pcX9ijuzfxZKvlv5VKY39rxVdvGVp3P4O
pfH8sVs09i2t6O8TKT+4NByvcXRpOB7xpNKK4+3jKT+zNLb/gmhcLvnVkt8k
+R2lcfzvq+xfOp6xZTTaSvs6Sf97SN63NBwv8VI035D8/dJwvOUn0v9vSuPx
9af49/hLyg+Lf4+xUn6y5LOlfYtKw/kPq6K5XvKaZRXj8WTKtygL56/C7cvi
+aleNPYpi+eng6JxlOQnSn6G1H++5A3KwnzjVWVxft5YFsevieTNovlQdOFj
kneU8t0l7xPbgxfLwvwpfj0a70n5j6X+ryX/UfI/Y30cKvWPKYvzf1JZWK+Y
Fc2Fkq+UvEzyGutj+zaPxnaS7yr53pIfKPmR6+P2T4guPH19nP/nrY/r6zLJ
G6+vOJ+0TXlRNG+X/F7JW0jeRurvEI1ukveW/AXJX1sf1/+70Rwk+VdS/gfJ
/5DyQyQfLflEad9M6f8CyVdIXro+Hv+qV2kUjj91orFtctb+XaKxl+QHSH6E
5MdLflpy1r5zo3Gp5FdKfkNyNv9uS87m1z3RxQ9K/qjU317q7yp5L8n7S/6q
5O9IPlDyLyWn5L9LPlj2zyjZfxMkn5GcHX/mJ2frd7nsn3XJ2fFxk6qNwu/f
bFa1oj0bfh+nbjR3Ts5+T2dPKb9/cvb7cIcnZ+8fjkvOnk8iOXt+cE5y9nzx
ksr6Ntz/Nqoax+/6aN4q+d3Rxc2rhvFC66phPNiuahy/LlXDfGLPaPSLf1/8
iuQDKrefrp+LP0rOrj+/iOb3kv9W6Q3Hh3+Ts+ujEmnf+KphvWC6jM88GZ9l
Uv/aqnF+VStoFK7vahfE+rcpCO3hTgVx/PYoiPO3fkEcn8OieWxBPH6cKvWf
XRDbf3E0G0r566J5i+RNJX8g9hetJH9C+t859pfPVLY3Xa/heSlfLNt/uyCO
/4cyfp9L/d9J/3+V+v+J9WGk1D+usvyG+7tplf3ZcP80V/KlBY3C/cuaaBRU
i/tn02px+1tXi/Nnx2qxfGGlN9xf71dZ34b750Mr69uwPo6R/JRoniX5RZXe
cH9+RTSulfzmuD3cJdu/X/JHJH9c8qekfU9L+56T8i9L/paMzwfR+Kxaxf7a
8Pzi22j8Ivnfko+Q/v8n4zNV8jmSL5H6V1caKa+6STBrRWMryXeILtxd8n2l
/CGSHy35yZKfKfmFkl8u+TWS3yT5nZLfJ/nDkreV/EnJe0j+rOQvSf6m5O9L
/qnk30j+s+R/ST5c8rGST5F8tuSLJV8leZXqMa8ZjS0l317y3STfR/KDJT9K
8pMkP0PyCyRvIPnVkt8o+R2SN5O8peSPSd5J8u6S95X8RcnfkPw9yT+R/GvJ
f5L8T8mHST5G8smSz5J8keQrJV8veY0aMd8imttJXk/yvSU/SPIjJT9R8tMl
P1/yyyS/SvIiyZtIfq/kD0neRvKOkneTvI/kL0j+uuTvSv6x5F9J/qPkf0g+
VPLRkk+SfKbkCyVfIXmZ5NVrxnzzaG4r+a6S7yX5gZIfIfkJkp8m+XmSXyp5
Y8lvkPx2ye+RvIXkj0reQfKukveWvL/kr0n+juSDJP9S8h8k/13yIdHFoySf
KOVnSL5A8uWSl0q+Sa2Y14lmXcl3kXxPyQ+Q/HDJj5cckp8r+SWSXyn59ZLf
Jvndkj8oeWvJ20veRfJekveT/FXJB0g+UPIvJKfkv0k+WPISySdIPl3y+ZIv
k3yd5NU2jflm0dxG8p0l30Py/SU/TPLjJD9V8nMkv1jyRpJfJ/mtkjeVvLnk
rSRvJ3lnyXtK/rzkr0j+tuQfSf655N9L/qvk/0o+UvLxkk+TfJ7kSyVfK3lB
7ZjXjubWku8keaHk9SU/NPf/AJIWLjo=
          "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[{
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.455, 0.7, 0.21], 
          AbsoluteThickness[2]], 
         PointBox[CompressedData["
1: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
0htqcwtxseAGuPQO2ty98ufp7fX+2jwM+lixLM263j0jfYo4+HBiCoifyupq
1cPSF4mDx09leUerxN7unaTe/L+xcqjaPtupzfvh9R+H138O+hXot8RVvQ+w
9/z3xO3k8oy23vv7VNzJO4FATG8r6/nziypqfqCvxcHjlV6PXkW//3G0OTH0
VNB/hp4Neh5x8Hi39/yFxa28Hcre+JfSpkrQa0BvID4vm1+Rvcdvrk3tYfhu
MHw/6EOhj4E+Gfps6Auhr4S+AfoO6PugH4N+Fvpl6H9C/xf6E+hvoIerqntk
bf4OemzoiaCnhJ4eelbov0IvBL0k9IrQq0OvL/a+7uJ56yfNtKkd9K7Q+0If
Ig7uv90pfbQ2T4I+C/oC6CvE3urKJa+vF3ubg5O9vl0cPH7mfX/uFc+SxWF2
b/lwVPxSTvd+4W1fn9GmP6DfhH4X+mPor6F/gh6pml7+RBMHj0960z+WNieE
ngL6T9CzQM8NvSD0EtArVNPLv2raVA96U+htoXeppr+/+4gDsrs9ovf9O1gc
vB+Q138TO+tfE7Vppji4vuot3+dX+/x9472/y2H4dTD8Nuh7oB+BflrszX69
vX6pmv7+uiFO4e2A8Mb/H/16+JHY2T//Suysv3wUL5TTq9t780fE6nr5/G31
ULX//EdtTgA9OfR00DNDz1Vdfz4KVNfjV1ybykOvCr0u9CbQ28Dr66xNvaEP
Ejvrx6Ng/CdU1+/fDG2eB30Z9LXV9fu7VZt3i53198PafAr679CvQ78D/aHY
2b/1Ups/VNfzx1c1lDmq2Nk/GFOb40NPBj0t9F+g5xTL2sfMR9745YdeDIYv
B70K9DrQG0NvDb0T9F7QB0IfCX089OnQ50JfCn0N9C3QWezsHzikzSehX4R+
Dfrf0B9AfwH9PfQINXX/Rpt+gB4PelLoaaBngp4DOkEvCr0s9MrQa0NvBL0V
9I7Qe0IfAH0E9HFiZ//xNG2eA32JOLh95fXV0DdD36VNB8XO/qET2nRBHHY8
mq+Knf3Lt7X5vtjZ//tcm99B/7JWqNq+jqJNMcRh+6s5rjYlgZ5a7OxfzqjN
2aHng14EHr8MPH4o9FowfEN4/JYwfAdx2P526iF27u/XX5uGQx8LfarYOT8g
oE2Loa+Cvgn6TugHoB+Hfh76Feh/Qb8H/ZnY2T/zVuwcXwhfO1Ttn/9a7Oxf
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
Np+B/gf0m9DvQn8M/TX0T9AjDdY9mjbFEjvbTwm1KQX0n6BngZ4bekHoJaBX
EIf93ghX06Z6Yuf3I5qKne3XtmJn/1IX6H20eTD036BPhD5T7Oxfma9Nywfr
+XOdNm2Dvgf6EbGzf+a0Nl2CfgP6PzD9HsH0ewX9I/SIQ0LV9vW32vQj9ATQ
k0NPNyRUXX+aeUiour4ylzYVEDv3jyquTeWhV4VeF3oTsbP/sY3Y2X/ZGYbv
DcMPgj4K+gToM6DPEzv7T5Zp81roW6Hvhn4Y+imYfr/D9L0O/Q70h9BfQv8A
/auhukfVppjQ40NPBj2tdt9foOeE4fNDLwa9HPQq0OuInfvfNdam1mLn/nWd
tKnXUDU/8UCxc/+5kTD8eLFzf7npQ/XyZa42LYW+BvoW6Az9EPST0C8O1Z/P
a9D/huEfQH8B/T30CMN0/0abfoAeD3pS6GmgZ4KeAzpBLwq9LPTK0GtDbwS9
FfSO0HtCHyB29r+N0OZxw/T8N02b50Bfoh1YDX0zDL8L+kEYvxMw/hegXxU7
1+ff1ub70J9Dfwf9y+G6R9GmGNDjQk+iHUgNPaPYOV8KzNnFzv1jwJTPNhex
TWVsc6jYuT8CmGrZ5oa2qaVt7iB27v8Bph62ub9tGm6bx9qmqbY5IHbOrwXT
YrFzPRSYV9mmTbYDO23TAdt8XOz8vgeYzoud+3WB+YrYuT8WmP6yzfds0zPb
/NY2hR8Rqq7HBPPXI/TrB9P3Yud8WjDHGaGnJ5hCbHMqsfv7ENqUQeyc7wjm
bGLn+jEw5RU759uCubDYub8MmErb5kq2qaZtbiB2zl8FUwvb3N42dbfN/WzT
MNs8xjZNsc2zbdMi27zSNm20zTtsh+y3zcds0znbfNk23bLN/9qmp7b5jW36
YqRpjmybotvm2LYpsW1OaZt+ts1ZbVMe21zINpWyzRVtUw3bXF/s/L4FmJrb
5nYj9fIUTN3EzvXoYO5rm4ba5tG2abJtnmWbFtrmFWLn+h0wbbDN223TPtt8
1Dadtc1/2KY/bfNd2/TENr+2TeFGmeZItuk72xzLNiUSO9dTgTmFbUpvm7PY
pl9tc0Gxc/0ZmEra5gq2qbptrmebmtnmtrapq23uI3aubwPTENv8m22aZJtn
wvsBpgW2ebltWm+bt9mmvbb5iG06Y5sviZ37M4Dppm3+xzY9ts2vbNMn2xzx
t1B1/RKYotnmH21TQrGzPQLm5LbpJ9uBzLYpt20uIHa2p8BUwjaXh9cPpmpi
Z/sPzHVtU1Pb3MY2dRE727Ng7m2bBtvmUbZpom2eYZvm2+ZlYuf+oGBaZ5u3
2qY9tvmwbTptm3+3TTds8x3b9Mg2vxQ710+C6aNt/mq0afrWNse0TQlsczLb
lM42/2Kbcomd32sGc37bVHy0nv5gLid27q8Fpqq2uY5tamKbW9umzra5l20a
ZJtH2qYJYud+aWCeDu8fmObB8GBeCsODaa1t3mKbdtvmQ7bplG2+CK8HTNdh
/gPz37bpIczPYH4hdo4HgOmDbY4wRo8/mKKKnfuJg/kH2xTfdiCpbUprmzPZ
ppzwesBMtqmYbS5rm6qM0e8nmGvbpsa2uZVt6mSbe9qmgbZ5hG0ab5un2aa5
MD3BvMQ2rbHNm20T2+aDtunkGP35BfMF23RtjF4eg/k2PD+YHtjm57bpvW3+
cqxp+sY2xxA79/8FUzzbnMQ2pbHNGW1TDtucT+wcfwJTUbFz/A3MZcTO+jSY
KtvmWrapkdjZ/wrmlmLn/idg6ih29r+CuYfY2R8CpgG2ebhtGmebp9qmObZ5
sW1abZs32aZdtvmAbTphm8/bpqu2+S/bdN82P7NN72xz+HGmKYpt/t42xbXN
IWJnfxqYUtvmDLYpu23Oa5uK2ObStinUNte0TQ3Fzv4MMLewTR1sc3fb1N82
D7NNY23zFNsUsM2LxM79hcC0SuzcDxfMG23TTng8MO8XO/vDwHTcNp+zTVds
8y3bdE/s7P8DB57aprdi5/wHMH8xPlTt/wPT17Y5+ng9/cEUR+zcTw3Micfr
1w+mVLb5Z9uUbbx+/8GcB4YHU2HbXMo2VYLpAeYatqmBbW5um9rD+IC5mzjs
fpto6mebh9qmMbZ5sm2abZsX2qaVtnmDbdphm/fZpmO2+axtumyb/7RN/9rm
J7bpjW0ON8E0RbbN39mm2BP08gzMiWxTStuc3jZltc2/2qZCtrmkbapom6vb
pvq2uZltamebu9qmvrZ5iG0abZsn2aZZtnmBbVphm9fbpu22ea9tOmqbz9im
P2zzTdt01zY/tk2vJ+jvXzB/sk2RJprmaLYpltjZHgdzQtuUwjb/ZJuyiJ39
B2DODcODQwra5hLw+sFUwTZXs031bHNT29TWNnexTX1s82Db9JttnmibZoqd
9Skwz7dNy23zOnh+MG2zzXts0xHbfNo2XRI7229gvmGb/rHNj2zTK9v80TZF
nGSav52k3w8w/WibE9im5LY5nW3KDOMP5ly2qYBtLm6bytvmqjD+YKprm5vY
pja2ubNt6m2bB9mmUbZ5gm2aYZvn2aZltnmtbdoK7x+Yd9umw7b5lG363TZf
t0134PWA+eEkvfwC00sYHhz4YJu+mmyao9qmmLY5vm1KZpvT2qZfbHNO25Tf
NhezTeVscxWxs/4Ipjq2ubFtam2bO9mmXmLn96zAPNA2jbTN423TdLFz/jqY
59qmpWLn92jBvEbsnP8Ppi22meHxwHTINp+0TRdt8zXb9LdtfmCbXtjm9zA9
wBRhimn+xjb9MEU/P5jj2aaktjmNbcpkm3PYJoLXA+aitqmsba5sm2rb5kZi
53xiMLWC4cHc0XZIT9s8QOz8/jGYRsD0BPM42zTNNs+xTUts82rbtBmmJ5h3
2Q45KA67nhjNJ2zTBdt81Tbdts33bdNzsXf79SdrfczvxM7va4Hpy6mmOYpt
imGb49qmJGLn97bAnFoc9ntfaMooDt4/b42PObs47Pfw0JTPNhcRe7cfKu1n
KgPjA+ZQ21QLXj+YG9qmlra5g23qYZv726bhtnmsbZpqmwO2abFtXmWbNtnm
nbbpgG0+DvMPmM7b5iu26S/bfM82PbPNb21T+Gmm+Wvb9L1tjmObQmxzKtuU
wTZns015bXNh21TaNleyTTVtc4Npen4EUwvb3N42dbfN/WzTMNs8xjZNsc2z
bdMi27zSNm20zTts037bfMw2nbPNl23TLXFm7986H/O/tumpbX5jm76Ybpoj
26botgOxbVNi25zSNv1sm7Papjy2uZBtKmWbK9qmGra5vm1qbpvb2aZutrmv
bRpqm0fbpsm2eZZtWmibV9imDbZ5u23aZ5uP2qaztvkP2/Snbb5rm57Y5te2
KdyMUHX9MZgj2abvbHMs25TINqewTeln6NcD5ixi5/4DYPrVNhcUO9tfYCpp
myvYpuq2A/VsUzOx83vQYG5rm7ra5j5i5/wfMA2xzb/Zpkm2eaZtWmCbl9um
9bZ5m9jZngXTXtt8xDadETvb32C+BO8HmG7a5n9s02Pb/Mp2yCfbHHFm6P/v
d77GxxTNNv8odn6fHEwJbXNy2/QTPD+YM9um3La5gG0qYZvL26ZqtrmubWpq
m9vYpi62ubdtGmybR8H7B6aJtnmGbZovDt7PfLWPeZk4eH91P9M627xVHPw9
Gj/THnHw9wT8zIdt02kYfzD/bptuiIO/H+BnvgPjD6ZH4uD95P3ML+HxwPRR
/Fp2R+/zM381yzR9a5tj2qYEtjmZbUo3S78eMP8yS08/MOWCxwNzfttU3Hag
nG2qapvr2KYmtrn1LP15AFPnWXr+AXMv2zRI7Oy/AfNI2zQBHg/M08XB2+Ov
8jHNs81LbdNaeH4wb7FNu23zIdt0yjZftE3XbfPftumhbX5hmz7Y5gizTVNU
2/yDOPh7AX6m+LY5qW1Ka5sz2aactplsUzFx8PcxV/mYy9qmKra5tm1qbJtb
2aZOtrmnbRpom0fYpvG2eZptmms7sMQ2rbHNm20Ti4O3I1jpYz5om07a5gu2
6Zptvm2bHtjm57bpvW3+MmCavrHNMWxTPNucxDalsc0ZxcHfd/Ez5bDN+WxT
UdtcxjZVts21bFMj29zSNnW0zT1geoJpgG0ebpvG2eaptmkOjD+YF9um1bZ5
k9i7nDSrn2mXbT5gm07Y5vO26apt/ss23bfNz2zTO9scfo5pimKbv7dNcW1z
iG1KbZsz2KbstjmvbSpim0vbplDbXNM2NbTNLWxTB9vcXRz8va4VPqb+tnmY
bRprm6fYpoBtXmSbVtnmjbZpp23eb5uO2+ZztumKbb5lm+7Z5qe26a1t/mKu
afpa7Gy/gDm6bYpjmxPbplS2+WfblM12II9tKmybS4md4/dgqiR29oeBuYZt
amA70Nw2tbfN3WxTP9s81DaNsc2TbdNs27zQNq20zRvEzv4jMO2wzfts0zHb
fNY2XbbNf9qmf23zE9v0xjaHm2eaItvm72xTbNucyDaltM3pbVNW2/yrbSpk
m0vapoq2ubptqj9Pz/9gbmab2tnmrmJn+x9MfW3zEHHw9zZX+phGz9PfR2Ce
JA7+nuByH9Mssbc7dPZSH/MCcfD31Vb4mFbA84N5PTw/mLbD8GDea5uOip3t
JzCfETvrg2D6wzbfFKepKUdUl/uY7trmx7bptW3+ZJsizTfN0WxTLNuc0Dal
sM0/2aYstjm3bSpom0vYpgq2uZptqmebm9qmtra5y3z9+QNTH9uBweLg7yku
9zH9Zpsn2qaZtnm+bVpum9fZpm22eY9tOmKbT9umS7b5hniK/Dr4kTU+pn/E
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
e3Gvj+nuqc/Lw/0+5sfi4Pmme31Mr8XB7clDPuZP4uD9EPxMkU6HqvMhwRxN
7JwPCaZYpz8vj/zMCcXB6z0O+JhSiIPHww/6mH86red/MGU5/Xl5vt/HnFsc
PN/Yz1TQNpcQB9fH/EwVTn9envmZq8HwYKp3+vP3hZ+56Wn9eQZTW9vc5fTn
7xM/Ux/bgcG26TdxcH/EPh/zRHE3b4eKn2mmOHi9hp95/mn9eQTTcnh+MK8T
B8839TNtsx3YIw6eD+9nOgLDg/k0vH4wXbLNN2zTP+Lg/gI/86PTenkEplen
9fIMzB9hfgRTxDP68wPmb8/o+Q9MP57R0w/MCWxT8jP6/QBzOhgeTJltc64z
en4CUwF4fjAXFwevt/EzlRcHf8/Mz1z1jJ7/wVT3jP4+AHOTM/r7FExtxM75
62DubJt6w/iAeZA4uL3mZxplmyfYphm2eZ5tWmab19qmrbZ5t206DPMDmE/B
/Aem38/o5SeYr9umOzD/gfmhbXppmz+c0csfMH11Vi+/wBz1rJ5+YIopDp7P
sNfHHF8cvF7Sz5RM7Kw/ggNp/9fXXYdZVX19AGcGBhRb7By7u/0Zy+72YuNY
WIiFCWIAYqDYChgDSjeoINZXVEAMVLqHbhAYJph6n3XP895Z6/ucZ93/Ps+6
+/TZZ599dvjlseV4tSmPknGa2pR/yXIObQ8ZF8eWq2PjBjoeZLk9NlrS8sjS
mo4fGU9QerI8FxsdY0uX2Hg3tvSY7J9/ZPSKLQNiYzgdT7J8ExuILRNiY1Js
mU7nj4x5dPzIsjQ21qiT/m5plk10/5BRHVsaTQndYOvY0myKvx/J2CO27K82
3yPJOEydjKedZjkuNk6l5ZFFYuMitXn/JMtVlJ6M5mpTfiBLC7UpD5Bxj9r0
nyPLQ7HRJra0i40OseX1Kf7+JeOd2NJ9ir+fyOgZW/rHxjC1KT+TZbQ6qY9M
M35UJ+MxpFnGq5P20mnGX2rT/oAs02j9ZMyNLUvU5n2YjNXqZDz0NEup2rwP
kVEVWxpOzbjyEBlNp/r0ZNmR0pOxuzrpr59m2U9t3p/IOHSqP35kOTY2TlGb
+hCynK029RdkXDjVnw+yXBkbGVoeWW6LjbtjS6up/nog43FKT5a2tP1kvBRb
XouNt2NLN3XyPeqXFKN4qr//ydJPnYzHkmYMnervX7KMio0fYss4Wj8Zf6pN
fSZZpqpNfR4Zc+j6JctiOp5krIotG2Njc2zJnxYaW6rN+xtZdoiN3dSmPo8s
hbFxSGw5JjZOji1nxcYFseUKtalPIuP62HIrLY+Mu2LLg9Myrv8CGY/Flmdj
40W1+f5LllfVpv83GW/Flo9iF38WW/qqk/ZyY1OMIWrTnoIsX8fG92o7HoC3
/Ko239/I+ENtvj+SZYra9N8lYzYtjyyL1KY/HBkr1eb7IVk2qM33RzIq1WY8
A7LkTc+4/rRkbDHd7w9Ztqf0ZOyqNt9TybKv2rRHJuNgtWm/QZajY+MktWnP
SpYzp2dc+ycyzqf0ZLl8ur+fyLhObdoPk+UWSk/GnZSeLA+oTXtQMh6NLc/E
xgt0PsjyCqUno6vazCdMlg/Vpv0SGZ/Glj6xMTi2fBUb38WWX9TZ4twbacbv
atN+iiyTY2OW2rR/I8tCdTa7bDoqxVihNuPfkWW92oyfR0YFrZ8sDWaERhO1
af9Hlu1iY5fYsg+tn4yDKD1ZjlKb9tBknKg27QHJcobatH8j47zYcpk6GQ8h
zbg2ttw8wz//yLhDbdovkuV+tWk/R8YjatN+mCxPq037aTKep/WTpfOM3PNw
dIrxpjppr5Jm+WCGzw/J+CS29J7h8yMyBsWWL2Pj29jyc2xMjC3/xsbM2LIg
NpbHlv9iozy21MVG45mhZdvY2Dm27B0bB6qT8cjSLEfGxgmx5X+xcW5suVRt
yiNkXBNbblKb9uhkFKlNeYgs9830+RkZD6vN+J9keUpt5k8ho73ajMdMlpdj
44364zUgxfJ+bHwcW76IjYGxZWRsjFEn4w32SbGMjY3f1El9SO8Uyz/qpL4v
zZhRf777pVhK1El5b2CKsYzSk2WdOqlPGZxilKnNfHpkqVWb+fvIKJiVceNP
k2UbdVLfPDjF2GlW7nnaN8WylzppL94/xThAnRQXhqRYjlAn4z33TTGOVyff
owelWE6flXueDUwxzpnlzwdZLqHtIeNqddKebmiK5UZ18j46JMW4XZ20ZxmU
YrmX0pPROrY8GRvPxZZO6uR9e2iK0UWdtCcelmJ5j9KT0SO2fK5OxhMblmIM
oO0nywh1Uh86OMX4Jrb8RNcPGRPo/JHlb7oeyZgeu3C+OumvlmYsjS1rY2MT
HX+y1KiT9iBfphiNZoeWrWOjWWzZU23mbyFj/9hyeGwcF1tOU5v5iMiQ2T4/
IMvFlJ6Mq2b765csN8z2z38yWsSWluqkv8eQFOMhtZmPgCxPqE35gYx2s/39
T5aOs31+SMbrs/3zgCzvqpP6tKEpRvfZ/nomSy86H2T0jy3DY2O0OqnvHpxi
QWyMn+3vf7JMio1psWWeOqnvHphiLFEn/aUGpFjW0PLIKI0t1bHRcI4/f2TZ
KjZ2VCfv2wNTLHvM8dcfGfvN8fcfWQ6LjWPVZjx9spw6x98/ZJxN6clyEaUn
48rY0lydtDcdmWLcpjbzqZPlHrWZ/4CMVmrTH5MsbdSm/oWMtmpTH0iWDrQ8
Ml6j/SHLO2o7HoA3uqnN+x9ZeqpN+ZmMfmpTn06WYZSejFGx5Ue1mY+cjHGx
5a/YmErrJ8vc2FisNuMxkGW12ryPkLExtlTFRv7c0NI0NnaILbvHRmFsOTQ2
joktp8z11xMZZ83155MsF6qz3UlbjEkxrlCb8TjIkomNW2n9ZLk7Nh6k7SHL
43MzbvwFMp5Vm/7HZHkpNl6NLW+rzXjoZHwUW4pjo6/a9Ccly1BKT8bXseUH
Wh4Zv1J6svypNv1ByZgSW+aoTf9bMhZRerKsou0hY4M6ae+VZtmsNv3Jycib
F1q2nOevPzK2j124m7q+vzgb+6pN/2WyHOL/z8bRseVkWh4ZZ8aWC9SmPzgZ
l8eW69WmPzsZt8SWu9SmPzgZD8zz1wNZHouNZ2LLi7HxitqM/0OWt+j6IePD
2PJZbPSJLUNi4yt1tjjbfkyK5ft5Pj8m45fY8kdsTI4ts2l7yFgYW1bGxvrY
UhkbDeaHli1iY7vYsmts7BNbDlab749kHBVbTprv8wMyzpjv8x+ynK824x+Q
cZnajGdFluvUyfsQUoyb1WY+CLLcGRv3x5ZHY+Pp2PJCbHRWm/H/ydJVbeYD
IeOD2EWfxkZvtZkPgCyD1ab9Ehlfqk17KrJ8R9tPxs9qM/8GWX5XJ/OVpxn/
qpP5AtMss9Rm/hUyFsSWFWoznwwZ/6mT71FjUywVajOeARl1atP/jixNSjKu
PTsZ25ZkXHtUsuwSG3urTX9YshxUkrsfx6UYR6qT+RLTLCeqTf8FMv6nTtrb
jUuxnFeSce2JybhUbdqPkuXakozrT0LGTWrTf4Qsd6hNfyQy7lMn2dHYFBc+
ok6+56YZT5Xknndpluf9/9l4WW3mLyLLm2oz/xEZ75f4+48sn8TGFyX+/iPL
oNgYqTbz8ZDlW3VSn40UY2yJz7/IMpHSk/GP2oyHQ5aZajOeDxklatP+lCzL
66/371OMdbGLytX19VVs1MaWxgsyrj0iGdss8OnJsrPajD9Mxl6UniwHqs14
XGQcsSDj2m+Q5QS1qX8g43RKT5Zz1ab9FhmXxJZrFmRc/QsZN8aWoti4d0HG
tb8iy8Ox8WRsaR8bndSm/RpZ3oiN9xZkXPmRLB+rTft7Mj6PLQNjY4TavM+Q
ZcwC//wm46fY8pvazEdExt8LfP5DlhlqU/4lY77azJ9FlmVqMx4VGWsX+PyM
LGWxUUPbQ5aChRk3Hw4ZW6tN+Z0sO6nN+wMZey70+SdZDlCb9vhkHK7+SB+3
E39KsRyvNvMnknGaOqmvHptiOYeWR8bFC/31Q5ar1cn3XqQYN8SW22n7yWgZ
W1rT8sh4IrY8R8sjo2Ns6aI27z9kvKs25Qmy9KDzT0avhf56JsuA2BhO20+W
b9SmPEUG1OZ9lCwT1Ob9hYxJajN+HVmmL/T5CRnz1Kb/CFmWqk1/HjLWqE35
iyyb6HyQUa02769kabQoNLZa5I8fWZot8uePjD0W+eNBlv1j4zBaHlmOo/Rk
nBpbhPaHjIsW+ecJWa5Sm/kMyWgeW1rQ/pBxD20PWR6KjTa0/WRpR9tDRofY
8rra9Acj4x21qT8mS/fY6LnIP4/I0l9txg8nY1hsGa0235PI+FFt6s/JMp62
h4y/1Kb+jSzT1Ob7Dxlz1Ul/3h9SLEtiY3VsKY2NKtp+sjRcHBpNY8uOsbH7
Yn88ybKf2nx/IOPQxf78keVYWh4Zp9D2kOVstXl/JOPCxf58kuVK2n4yMmrz
PY4st6nN9w8y7qb0ZGmlNt9DyHhcbb7fkQvb+vWx8VLswtfU9d/z2Hg7tnSL
jeLY0s/vDxtDY8uo2PghtoyLjT9jy9TYmEPnkyyL6X4gYxVd/2TZSPcPGZvp
+iNL/pLQ2DK27BAbuy3x+TlZCmPjkNhyzBJ//5Fxcmw5a4k/f2RcEFuuiI3r
Y8utsXFXbHkwNh6LLc/Gxoux5dUl/nom463Y8hEtj4zPYkvf2BgSW76Oje9j
y6+x8UdsmRIbs+n4kWUR3Q9krIwtG5b45yEZlXT/kCVvaWhssdQvjyzbL/X7
T8ausWXf2Dg4thwdGyfFljNj4/zYcnlsXBdbbomNO2PLA3T+yHg0tjwTGy+o
Tf0jWV5Rm/IAGV1jy4ex8Smtnyx9YmNwbPkqNr6LLb/Q/UDG72rT/ossk9Vm
/h8yZqlNf3Ry4cLYWBFb1sdGhdr05yRLg2Wh0SS2bBcbu6hN/3ey7BMbB8WW
o2LjxGX+fJDlDLVpv03GebHlsti4NrbcHLv4jthyf2w8ok76I6ZZnla3zP6+
TjGeV2ebU3QdkWLprDb9kch4M7Z8EBufqM/X5rj9h6dYeqtN/wcyBqlN/yOy
fKk2/RHI+FZt+g+R5efYmBhb/lWb/kNkzFSb/m9kWRAby9WmPwlZ/qPjR0a5
2vTnJUvdstzzbFCK0Xh5xvXnIcu2atOfh4ydY8veatP/kYwDY8uRtDwyTlAn
7YH6p1j+Fxvnqk3/abJcGhvXxJabYqMotty33N8PZDysNv0ByfKUOvleMjzF
aK82/YfI8vJyfz2S8Yba9Ocmy/tq0/+KjI/VSX3qkBTLF3T+yRhI55MsI9VJ
fXC/FGOMOqkPTrOMVSfj/fRNMX6LLf/ExozYUhIby2LLutgoUyfj9fRJsdSq
k/E2e6cYBSsybvwDsmyjNuMnkLETpSfLXiv8+sk4gNKT5Qi1GX+BjONjy+mx
cU5suYT2n4yr1Ul7tzTLjepkvObPU4zb1dnH7fpeKZZ7aXvIaE3HkyxPUnoy
notd2MmfDza6xJb3aP1k9Igtn8fGgNgygraHjG/UyXi/X6RYfqLzScYEuh7I
8vcKfz+SMV1txrMgy/zYWBpb1qrNeBxkbFIn/S3TLDWx0WilXx5Ztlab8gsZ
zdSm/EKWPWNjf7XpT02Ww2PjuJX++UWW09Sm/EaGqG3/f2+5eKV/npJxldr0
xyfLDbQ8Mlqs9M9zsrRUm/IvGQ/FlifUpjxNRju1KQ+TpWNsvB5b3o2N7itz
+eWIFEuv2Oi/Mpcfj0yxDFcn8+2lGaPVyXwJaRaok/kC0ozxsWVSbEyj/SHL
PLUZT4qMJbFlTWyUxpZq2h4yGq4KLVut8ssjY8fYsofavE+TsZ86GU4mzXIY
LY+MY2n7yXIqpSfjbLUdD8BbLlKb9wcyrlSb8j9ZmqvNeB5k3KZO2iMNT7Hc
ExutYksbWj8ZbdXJeMfDUywd1KY+gozX1GY8ArK8o07aUw1LMbrR8sjSk84H
Gf1iy7BV/vlBxqjY8qPavA+SMU5t3gfJ8helJ2MqnT+yzKX0ZCym65Esq9Vm
/CYyNlJ6slTR8SQjf7VfHlmarvbPLzJ2WO2ff2TZPTYKV/vnL1kOpfRkHBNb
TqHtJ+Os2HJhbFwRWzKxcSsdf7LcHRsPrvb3I1kej41nY8tLsfFqbHk7Nj6K
LcWx0Te2DI2Nr2PLD7Hxa2z5MzamxJY5sbEotqyKjQ2xZXNs5K0JLVvGxvax
Zbc1Pj8nY9/YckhsHB1bTo6NM2PLBbFxeWy5PjZuWeOfX2S5a41/HpPxgDpp
j5xmeUxtvn+Q8YzalD/I8qLajIdJxivq7OfMo9Isb9H6yfgwtnxG20NGn9gy
RJ1tLt96RIrxVWz5Xm3KA2T8ojbvQ2T5Q23K02RMpu0ny2y6HshYGFtWxsb6
2FKpTubLG5liNFibceMXkmULtXl/I2O7tX55ZNlVbd4fyNhHbcr/ZDmY0pNx
1Fp/Pshyktq8P5FxBqUny/mxcRktjyzXxcbNseVOWj8Z99PxIMuja/39SMbT
tH6yvEDpyehM6ydL19j4gPaHLJ/GRu/YMjg2vowt38XGz3T8yPL7Wp8fkPFv
bJm11udHZCyg7SHLCnXS32t4ivGfOunPnGapWOvzTzLq1El/7DRLk3WhsW1s
2WWdPx5k7L3O7w9ZDlrn80MyjqT1k+VEWh4Z/6P0ZDlvnX/+k3HpOn/8yXJt
bNxE+0OWO2j9ZNxHyyPLI+v8/UvGU2pTfiDL8+pkPIKRKcbLalP/SJY31/nn
CRnvx5ZP1Gb+EzK+UCfjLaRZBqmT71Fpxki1mX+FLN+qTfsrMsbGlomx8U9s
mRkbJbFleWysiy3lsVEbWxr/FxrbxJadY2Ov2HJgbBwRW06IjdNjy7mxcUls
uSY2bowtRbFxb2x5ODaejC3tY6NTbHkjNt6LLR/HxuexZWBsjIgtY2Ljp9hF
v6nr57Ni42+1mf+DLDPUpv0fucHC2LJMbeavImOt2rQ/JEtZbNTELipYHxpb
q017VLLspDbjx5KxZ2w5IHbJ4bHl+Ng4TW3GmztHbcbnuFhtxgO5muI3qM14
wberzfwwLdf766G1N57w/5fnKH1Hineh+Lt+/UU9vNGL0g+g9MMp/g3FQfEJ
FJ9E8ekUn+ddtJTiayj9JopX++NVVLDBH7+tvKUZxfeg+P4UP0xt2jcf541T
KS4Uv4jiV1G8Oa2/Ba3/Hoo/RPE2FG9H8Q4Uf53i71C8+waf3/VUm/na+qvN
fGLD1Gb+sdFqM1/Zj2ozvvf4DT5/+Ett5pOb5o253iVLKL6a0pdSvIriDTf6
eFPvomYU391b9qP4oRQ/luKnqJPx0rL1PWerTfn4QrUpj1+pNu+bGbV5372N
4nerzftDK7V5X3hcbb6XtVWb96mX1OZ95DW1Ke+/rTbfq7vR+ovVpr6zP61/
qNrUb4xSm/fLH7xlHG3fn94yleJzaPsXq8371yp1/ft80UZvbPaW/FK//1t6
yw6lPv1ualN/V1jq9/+QUn9+j1Gb8fRPLnXbK2epTX31Bd5yBcWvV5vv57dS
/K5Sf308qDbtWR6j7Xu21J1vvFjqznfRq954y1s+ovhnpf767euNIWpTn/w1
Hb/vS931Jb964w9/PGUKHd/Z6gOyO5iNL/LGSopvoHglxfM2Zdz76RZq8z67
vTd29S7ad5O//w/e5PPHo9VJ+8Fs/nGSt5ypNuW7873lcrWZv/M6tXlfvmWT
z5/u9C56wP8fj6qz06l2zqZ/Rp3Mj57d/hdo+a9Q+q4U/3CTfz586tcvfdRJ
+8hs+sF+/4q+ov3/jvb/F3888bvalB8mq015dJa3LNzkn38rvGU9xSt8+sIG
Zf78NVGb+Sq2K/P7t4s6u/nTs/ffPmX+/juozN2vclSZu19xYpnP388o8/nX
eX55chkt/9oyf//eXObvvzvKfP52f5m//x4p8/nv02U+f37eWzqrTX3am+r6
+s6iD9Sm/cgnZT5/6+33F4Mo/iWl/5aOz89q8z1kol+//EvpZ3oXLaD1L6fl
/0fLL/eWOoo3Lvfpty33699Zbdo37u2NA9Wm/cWR3jiB4v+j+LkUv5Ti11D8
pnJ3vlFU7s/vfeX++nvYW55St80O8JLNX9urk/bU2fz15XKff75R7vJbeV9t
5rf92Fu+UJv+dwPLff4ystznT2PKXX4pY8t9/vKb2rxv/1Pu8u/iGX57paTc
54/LKL7O7y/K/P+lltIXVPj8bZsKv/87qc18vnupzffGAyr8/X1EhX/+H1/h
7nc5vcI/P8+p8Nt/iTeuVpv33xu9cTvF763w+XPrCnc9yJMUf05txgft5PcX
XSrc80Teo/Q91Ga+8c8rXH6MAf7/MkJt3s++qfDPh5/8+cCECn99/V3hr6/p
dPzm+/3FUn+8i9ZW+Px9U4V/PtRU+Py7UaX7v2ztjWZqU37ZU13/PoL9K/39
d7g3jlM/nH2gZbf/tEp//sVbLqb4VRS/geItKt39JC298VClP75PVPrj305t
yicdK939ite95V3av+7qSdpdoEd2/3tVuvwG/b1luP8/Rlf66xeV/vk4Xl3/
flM0qdI//6Z5yzyKL1Gb9n5r1En9VLY/XKna9B+oVpv+og03Z9x8pVttzrj+
GDuqk/Ess/3v9lAn9V3Z/nf7qc18aYepTf++Yzf759upavP97uzNbv/los3+
+XCl2pQvmqvN96vbvOUetXl/aKU2729tNvvj31Zt3i86UPw1b3lHbd6fuvn9
kZ5+eei32T2vi4apTX+NUXT8ftycy2+z/bnGqc38xX/584Gpm3PP154an6s2
/ZMWe8vqzbn7P9t/bKM6me8s27+sSm36A+VX+fRN1ab/0g5q019q96qM659U
WOXP/6Fq0976GLVtn1rlr4+z1KY93IVq0/7rCrUp/2SqfP52a5V/ft2tNt9P
H1Sb9qWPq03/mGdp+16qyrjy66tV/v58m+IfqU35s1ht2h/3peUPVZvy49d+
f+WHKn/9/Frl7jf5U236N01Rm/kT56jNfLWLqlx+IKvo+G6o8vnLZm/kVfvj
v2W1O57YXm3eT3ar9s+nfatdflt4SLV73uFoSn9ytb9+zlSb9lIXVPvn5+XV
/vl0vTr7eDswm//fUu2ed3KX3x48oDblr8eqc9d7Nv9/huIv+vXhFYq/Ve2f
bx+qs8OhH5EtX3xW7Z9ffSg+xBtfVWf8/DpqU//9i9qMH/6H2oy3MdlbZqtN
+WwhpV9J8fXeUun/jwY1/vm7RY07/sXb1WRc/cWualM+2qfGP98Prsm48ttR
avP+fJL/P85Qm/r189X19dW4TG3Kh9f55eFmtSk/3+n/j/vV5vvNo/7/eFpt
5q97oSbjvh91VpvxqrqqzfikH9Tk7rfs+Nmf1mTc+I29/fGQwXT8vqzx1893
tH8/q039/u9+f/Cv2pSvZ6nN+O8L1GZ8oxVqMx7PfzW5/C47/mpFTcaNV15X
k3HzJTSpzbj5Ybatzdj5YAp3UZvx8/b2loNq/fqPrM3lH9n5N05UJ+MHJfOH
1OaeLxM0fl5tLv/JzmdyaW0uP87Gr63NXc//avwmdVJ+mqzxO9TJ+IR/avy+
2lz+/IfGH6nN5X8TNf5Ube75qttT+Lw6KY9n1/9ybcbNR/Imbf/7tRk3P8sn
9evXePEXtbnrITsfyiB1Mr5zdr6UkepkPPbxGv+2NuPmYxmrNvOpTKT4P7W5
6yM73vlMdTI/RHZ+k5La3PM4e/yX1+9/drz0dbUZN19JeW3GjS9dW5tx40E1
rsu48XK3qXP5ieysNvWbe9X5+/vAOn9/HlHn85cT1Kb+73R1/XwVheeqzXyl
l9S5+1muUZv5tG5Um/knitTZ09kpma/BWx5W2/YYdT5/b69Ohk/OLr+TX5+8
oU76H2fPz3t1/vr/WG3GT/+8LuPG1x5Y5+5HjFCb9+MxdT7//8kfD/nNHy/8
rU7mK8qevxn+eGE+7d8yOj5r1Wb8zrI6f//X1Pn8s6BBczefxNZqk3/t5I09
1Wa+1APUZvsPV5v5SI5Xm+N/mto8f85Rm/zzYrU5PldT+hvU5vq4neItaftb
+/8XP6E287M8pzb5c0e1uX+6qM3xfdevT3r47UUvig+g5Q9Xm/kevlEn5cFs
/g2/PpmgNuNnT1Kb8dqmq814rvPUZvzhpWoz/tsatXn+bFKb66NabeYfa5TX
3I0XvpXaPJ+aqc31v0eevz72V5vr9zB1ffmi8Di1+X59qtqMXytqM/7sRXn+
+roqz18/zdWm/NFCbco/9/j/y0PexW3y/PXTLs9dL+igNvfn63n++njH/1+6
57nro7int/RXJ+P/Z9c/TG3Kh6Pz/PX9Ix2f8Xn++vhLbcavnpbnz+9ctRmv
c4nfH6z265NSilfluetZGub749M03y9/x3x/fHbP98d3v3y/f4eqTf52rP8/
Tsl3+ZWc7Y0LKX5lvr//Mn575Da1ef7cne/PTyta/uP5Lr+TtrT9L+X76/M1
/3+8TfFufn9RrDbf1/qpzfvHULV5PxiV39x9X/hBbd4/x6mT53N2vKY/1ab+
YqrajGczJz93PWbHg1qc39yN/7Sqfv3Z8VU2qk39xWa1qf/Ib9j8/7/Ha30L
tmyYy/8/1PgO6qQ+KxvfTV1f3yKFajNezyFqM77PMerk/ambxk9WJ/U/3TV+
VsNcflWs8QvUpv7nCnVS35SNX69Oyq9qudUbd6mT8kA2/YNqU//0mN8feZbi
Lzb05+fVhs3d+Chv0f5/5PcXn6mT8Vy6aLxv/fa/pfEh9fv3tsa/VifvD9nt
/75+fZ9o/NeGuetdjxf+qF/+xxqf4o3ZDXPPq64aX1R//F/V+Ep18v7RXuMb
vFFZfz5e0Hheo9z+dtD4FuqkvqCTxrdv5P6PXf3/C/dVJ/WHL2n8YEp/NMVP
apS7H17R+JnqpP6jo8bPb+S3/3KKX+fXL7c0yh3vFzV+Z6Pc/fGyxh+g/XvU
/1+e8duLFxq54ymv+O1FV4p/2Ch3P3XW+Ke0fX1o+wf7/8tXFP+O4r/Q9v1O
x3cy7f8sOn4L65ffRuMr6s/HYxpf742KRrnrrZXGGxQ4o0mBT78dxXfxln0K
/PoPqo+30/hRBbn84lmNn1jgr88zCvz+nUfxy7xxbYE//jd74w6/PLm/wN8f
j3jL07T+52n9nWn9b1L8A4p/Qvvfm9Y/qCB3vT2t8S/p+HzrLT9TfCIt/1+/
PMwsyN0fT2p8gTeW+/Ml/1G8nNLXUbxxY7/923pjZ4rvTfEDKX4kxU9o7Nf/
P2+cS/FLKX4NLf8mWn4Rpb+P0j9M8aca++u7vbe8TPE3KP4+xT+m+BeN/f01
0FtGUvoxtH1jKf4bLf8fis+geEljnz8sa5y7nh/R+DpvlFG8ltIXNPH5xzbe
2Inie1H8AIofQfHjKX46xc+h+CUUv7pJ7nq4T+M3euN2it9L8dZN/Pl50hvP
UbwTxbvQ8t+jeI8m/vh+Xv//GzU+oD4uGh/hjW8o/hPFJ1D8b+/i6RSfT+mX
UnwtxTf57ZUa2v5GW/j0W3ujGcX3pPj+FD+c4sdR/DSKC8UvpvhVFL+B4i0o
3pLiD1H8CYq3o3hHir9O8Xcp3p3ivSjen+LDKT6a4qD4eIpPovg0is+j+BKK
r6F4KcWrKd5wSx/fyhs7UnwPiu9H8cMofizFT6X42RS/iOJXUrw5xW+j+D0U
b0XxNhRvS/EOFH+N4u9QvBvFe1K8H8WHUXwUxX+k+DiK/0XxqRSfS/HFFF9N
8Y0Ur6J4flMfb+qNHSi+O8ULKX4oxY+x/j++4XyE
          "]]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[{
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         PointBox[CompressedData["
1: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
vX54I3bOf0crpEyxxBlqjNr9JL3XP4eeRJtTQf8KemboOaBTIb3+LlpIbW+4
jDZVhl4LekPoLQrp199Bm7tD7w99GPRxhfT2Z6o2zYG+GKZvdaGI9ecE6Zu0
iWH4AzD+E9B/gX4Z+l/w9+/C/PkX+mvo7xfW/WNtjgs9MfSU0DMU1tP3nTZl
h54Xhi8C4y9dWG8fK4md4/OahSPWZ979Hw20uTn09jB8N23qB30o9LHQp0Cf
DX0R9FUwfRth+nZC3w/9OPRz0C9B/xP6HeiPob+CHrWI7jGL6Nf3mTYlgh4G
PT30TNCzQc8DvTD0UtDDxUdk8/rGuz+mhjbVh96sSMT2wNv/a6fNXaH3Ffvn
d70+RJvGQJ8sjtzfolARvfwv1KaV0DcU0evXHWLn+HafNh0TO/sPZ8Xe7V61
lkj/Xeyfr5gn/brYP771+m3oj7TpJfT3iv7nL70FxOsfaXOconr4hNqcAno6
8Zn/5laVHF7/VpuyQs8NvRD0ktArQq8OvR70ptDbQu8CvQ/0wdBHQ58EfRb0
BdBXQF8PfTv0vdCPQj8D/SL0P6Dfgv4Q+gvoUYrpHkP76qfQE2hzcnF+Ob1y
UfanKG2xiM+THI9wRm3KAj2X2Nn/KqjNJYpFbP8XSK+gzdWKhbvHQ1RXm5tA
byP290e9/bPOYmf/rbc2DxL7x2fe9I2C6ZsI0zcTpm++WFbOCaN5fbk2r4O+
rVjE9tWbP3u06Yh4jqwez3r9tDb9Bv0a9JvaoQfQn8Pw76B/WFz32NoUH3oy
6GmgfwP9R+g5i+vXX0AcebzLxaGX1+aqMP46MP7G2mGtoXeC4XvB+AfC3x8J
0zehuF4+Zojjegdg3vs/T5uWQV8LfWtxvfzs1qbDxdX6OnRKmy4U15/fq9D/
0eb70J+JvduNHnqfj7di5/6j6CWU+ZMS6t/TFyX0+JNqU+oSevq+Fvv7D3Ol
/6DNP0HPD70Y9HLQq0CvDb0R9FbQO0LvCX2Afj00Al7feOjToc+FvhT6Guhb
oO+Cfgim7yT0X8X++QGvX9GmG9DvQX8K/Q30D0rqHkub4pXU059Em74sqaf/
K236HnoO6PmgFxU799+V1ebK0H+G3hB6S+gdoPeA3h/68JL68zNOm6ZBnwN9
CfTV0DdDZ+gHxf75Ga+f0Kbz0C9D/xv6XehPoL+GHq2U7h9rUzzoiaGngp4B
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
fQ7mfWLn/iswHbPNZ23T72Ln9xrAfN023RZ7t2Ou2Bjg0CPb9NI2vzcuXN0P
AqaPbHMc25TQNqcYp6cHTOls87e2Kattzm2bCtnmkrapom2ubpvq2eamtqmt
be4idvbfwNTHNg8epz+PYBptmyfB+MA0S+ycvwTzAtu0wjavt03bbfNe23TU
Np+xTRdt8x+26ZZtfmibXtjmKONNUwzb/KltSmCbk9umtLY5o23KYptz2aaC
trmEbapgm6vZprrj9ecJzE1sUxvb3Nk29bbNg2zTKNs80TbNtM3zbdNy27zO
Nm2zzXts0xHbfNo2/Wabr9mmm7b5gW16bpvf2aYPJ5jm2LYpvti5/wrMyWxT
Gtv8jW360TbntB1WwDYXt03lbXNV21THNje2Ta1tcyfb1Ms2D7RNI23zBNs0
Q+xcjwDzPNu0DMYH5rW2aatt3m2bDtvmU7bpgm2+apv+gc8jmO/bpme2+S38
fTBFn2iaP7FNX9jmpLYptW3+2jb9YJt/sk35bXMx21TONlexTbVtcyPb1Mo2
d7RNPW3zANs0wjaPt03TbfNc27TUNq+xTVts8y7bdMg2n7RNv9rmK7bphm2+
Z5ueTtTrY3DojW36YJJpjmWb4tnmJLbpS9v8lW363jbnsE35bHNR21TWNle2
TT/b5oa2qaVt7mCbekzSyxOY+9um4bZ5nG2aBtMD5jm2aQmMD8yrbdNmsXP+
Hcwsds7ngOmgbT5hm87b5ssw/WD62zbftU1PbPNr2xRtsmn+2DZ9bpsT26ZU
tjmDbcpsm7PbJrLNRWxTGdtcSezsD4Kplm1uMFkvz2BqAcODub3tsO62uZ84
ivffqgDTMNs81jZNhekH82zbtNg2r7JNm8TO/atg3mk77IBtPi527l8E0y/w
98F8yTb9JXbuBwXzHbH/+5SrAkz/2uZXtun9KaY5pm2Ka5sT2aaUYud5PGBO
b5u+Ezv3M4I5m9j5fSAw5bXNhcX+8zZWBphK2+Zw21TTNte3Tc3FzvPUwNzO
NnWzzX1t01DbPMY2TbHNIdu0yDavtE0bbfMO27TfNh+zTeds8++26U/bfNs2
PbbNL21T1Kmm+SPb9JltTmibwmxzOtuUyTZntU15bHMh21TKNle0TTVscz3b
1Mw2t7VNXW1zH9s0xDaPtk2TbfMs27TQNq+wTRts83bbtM82H7VNZ23zRdt0
3Tbfsk2PbPML2/TeNNMcwzbFsR1KIPZ/b2ppgCmFbU5rm761zVlsU27bXNA2
lbTNFWxTddtc1zY1tc1tbFMX29zbNg22zaNs0yTbPNM2LbDNy23Tetu8zTbt
tc1HbNMZ2/ybbfrDNt+0TQ9t83PbFGW6af7QNn0qjnx+Jprj26bktjmNbcpo
m3+0TblscwHbVMI2l7dN1WyH6timJra5tW3qbJt72aZBtnmkbZpom2fYpvm2
eZltWmebt9qmPbb5sG06LXae5wTmC2Ln+VNgumab/7FND2zzM9th72xz9Bmm
KbZt/sI2JbPNqW3TN2L/9ySXBJh/sE05bXN+21TcNpezTVVtc23b1Ng2t7JN
nWxzT9s00DaPsE0TbPN02zTPNi+F5QdMa23zlhn68wym3bb5kG06JXaexwbm
X23TVdt8wzbdFzvPiwPzU9v0Vuw8jw7MH8zUrx9Mn9jmeLYpqW3+0jZ9bZu/
t00/2eZ8tqmY7VBZ21TFNv9smxrZ5pa2qaNt7mGbBszUyxOYh4ud5/eBabxt
nmab5oq9ny8/vjDAvASGB9Ma27zZNu2yzQdt00nbfN42XbHNf9ume7b5iW16
Y5ujzTJNsWzz57YpiW1OZZu+ss2ZbVMO20y2qahtLmObKtvmWrapoW1uYZs6
2ObuYv/3chcGmPrb5mG2aZxtnmqb5tgOLbZNq23zJtvEtvmAbTphm3+xTZdt
81+26a5t/tc2vbbN74dM08e2Oa5tSmybU9qmDLb5O9uU3TbntU1FbHNp21TJ
Nte0TQ3Ezv4AmJvbpva2uZtt6id29j/APNQ2jbXNU0J6fQam2bZ5kW1aZZs3
2qadYmf/B8z7bdNx23zONl2yzX/apju2+bFtemWbo84O///3aYNMMW3zZ7Yp
kW0Os03pbXOm2frzB6ZstjmPbSpsm0vZpnDbXMM21Rc7zysHczPb1M42d7VN
fW3zENs0xjZPtk0h27zQNq20zRts0w7bvM82HbPNZ23T77b5um26bZsf2aaX
tvm9OeHq+Y1g+sg2x7FNCcX+/XKzA8wpbFM6sf976KEA87di/361IFNW26Hc
tqmQbS5pmyra5uq2qR68fnCoqW1qa5u7wN8HUx8YHsyDbdNosX8/3KwA8ySx
//inmQGmWWL/fszZAeYFsPyAaYXYeR41mNfbpu22ea9tOmqbz9imi2L/+XMz
A8x/wPwD0y3b/FDsPF8aTC/EzvOqwRxlrp4eMMWwzZ/apgS2ObltSjtXTz+Y
M4r956dNDzBlgfGBOZdtKmibS9imCra5mth7HNn8aQGmumLneeZgbmKb2oid
4wcwdxb71xunBZh6z9WfRzAPgr8PplHwfoB5om2aaZvnz9XrIzAth/kP5nW2
aZvYuf4D5j226YhtPm2bfrPN12zTTdv8wDY9t83vbNOH80xzbNsU3zYns01p
bPM3tulHsXM/C5hz2qYCtrm4bSpvm6vapjq2ubFtam2bO9mmXrZDA23TSNs8
wTbNsM3zbNMy27zWNm21zbtt02HbfMo2XbDNV23TP7b5/rxwdf8KmJ7Z5re2
Kfp80/yJbfrCNie1Talt89e26Qfb/JNtym+bi9mmcra5im2qbZsb2aZWtrmj
beppmwfYphG2ebxtmm6b59qmpbZ5jW3aYpt32aZDtvmkbfrVNl+Zr9cHYLph
m+/Zpqe2+Y1t+mCBaY5lm+LZ5iS26csFev6B+Svb9L1tzmGb8tnmorapLLwe
MFcWO/tPYPrZNje0TS1tcwfb1MM297dNw23zONs0zTbPsU1LbPNq27TZNrNt
OmibT9im87b5sm362zbftU1PbPNr2xRtoWn+2DZ9bpsT26ZUtjmDbcq8UH+e
wZzdNpFtLiL2HufbcUWAqYzYPx5fGWCuJF7VVo64g0y1bHMD29TCNre3Td1t
cz+xf75maYBpmG0eu1CvT8E01TbPhvkPpsW2eZXYP1+zJMC0SfxILudWWRxg
3mmbDoi7yeLYdV6A+bjY/733OQGmX8T+7znMDjBfEvvfJw8FmP4S+783MTvA
fEcsc2PHrKkBpn8j50eQ+ZXYOR8FpvcXmeaYtimu2DkfD+ZEtiml2P896okB
5vS26TvbnM025bXNhaGXhh4OvSb0+ov0+9U8si+Q3k7sny9eLr2b2Ll+3Veb
hoqd6/NjoE+B4UNi536HRdq8EvpGsXP9bgf0/TD8MXES74GW86WfE8f1HsDq
vb7ftelP6Ldh/I/FVfwZJv2lNkVdrPtH2vQZ9ITQwxbrz1c6bcoEPeviiO2J
d745jzYXgl4KekXoNaDXE/v320+R3myx/vy21aau0PuIv5Svu27z1l9DIsfn
re9Ga9Nk6LOgL1ys15crxM75+Q3aoe2L9fu7T+zc/34Uhj+7WC+fFxer5Zmu
i8/In8/hrX9vadMj6C+gv7dE9xjaFAd6AugpoKeF/i30LNBzL9Gfz4Ji536N
kkvU54UrLNHvX3UYf90levvUVJvbwN/vAsP3hj5Y7FxPHwV9kthb/B9627uZ
0Bcs0dvD5WLneu76JXr7t01c0Xvggtf3ip3rgUeW6O3hGf3v+Tfof2jzzSVq
exL2cIneXj3XpihL9frnw6V6+ft0qX5/4mtTcuhplur1S0Zt/hF6LrFzPaiA
2H9etXc/Qwmxtzi0996f8kvV9oKqidt5F4C8v19Hm5qI/eu73vvfemm4uj7Z
WZt7QR8EfST0iUv1+ztDm+Yv1evPZfr10jp4/Vuh74F+GPpp6BegX4P+D/QH
0J9Bfwc9+jLdY2vzF9CTQU8N/Rvt0A/Qc8Lw+Zfp9UfxZWp54XLaYVXF/vPd
vF57mV5/NF6mPv+hVmL/eSLe8tNJ/3vuqf89DVym1y8jtMMmwN+frk3zoC+F
vhb6Fui7oR+Cfgr6r9CvQr8B/T70p/D638L8+WC5+rzSJ9ocb7n+fCcV+78v
6K0/v9Smr6F/D/0n6PmgF4NeFnoV6D9DbwS9JfSO0HtAHwB9OPTx0KdBnwt9
yXI9/9do82bou6AfhH4S+nnoV6D/Df0e9CfQ3+j3m6Ot0MtXrBX68/O5NiWB
ngr6V9Azw/hzaDNBLwq9DPTK0GtBbwi9BfQO0LtD7y92jueHibcUkxvSve3b
OG2eCn0O9MXQV0PfBJ2hH4B+Avov0C9D/wv6Xej/Qn8N/f2Vun+szXGhJ4ae
EnoG6N9Bzw49L/Qi0EtDrwS9JvQG0JtDbw+9G/R+0IdCHwt9CvTZ0BdBXwV9
I/Sd0PdDPw79HPRL0P+Efgf6Y+ivoEddpXtMbf4MeiLoYdDTQ88EPdsqvf7K
o02FoZeCHr5Kf/5raFN96M2gtxPX9U4AetPXVZv6Qh8ido4/x2jzZLFzfiQE
wy+E8a+EvkHsHL/uEDvnP/ZBPwb9LPTftfk69Nti5/j5EfSX0N9brUwfiZ3v
u8cRO9/3SagdSiF2zoem052/heGz6n/PuaEXgl4SekXdQ9Xh79cTO+cnmq5W
2wtqK448/gp1ETv7r320eTD00av18jtJm2ZBXwB9BfT10LdD3wv9KPQz0C9C
/wP6LegPob+AHmWN7jG0+VPoCaAnh54WekboWaDngl4QegnoFaBX0w6rC70J
DN9G7Ox/d9am3tAHQR+1Rq+fJoojz4fQTG2eD3252H++pNfXadM26HugH4F+
Gvpv0K9Bvwn9gdi5XvFcm99B/3Ct7rG1KT70ZNDTQP8G+o/Qc0IvAL049PLQ
q0KvA70x9NbQO0HvJXbuHx6oTSOhT4A+A/o86Mugr12rthe0VTu0G/phbT4F
/QL0q9D/gX4f+jPob8XO+cno65T5E236AnpS6KnX6eXza236AfpP2mH5oReD
4cut0+v/KuL8crr9ord9qb1Ob2/A3Ejs7D+AqZVt7mibetrmAbZphNg5Hwjm
8bZp+jq1/UTzXLFzfgNMS23zmnV6/QqmLbA8gHmXbTpkm0/C9IDpV9t8Rewc
34PpBixvYL4Hrx9MT9fp9Q2Y38D4wPTBej08mGOJnfMnYIondr7vBOYkYuf7
WmD6UuxcvwXzV7bpe7FzPh8cyiGOPP+Ppnxi5/sPYC4qdq4vgKmsba5sm362
zQ1tU0vb3MF2WA/b3N82DbfN42zTNNs8xzYtsc2rbdNmsXM9Asxsmw7a5hO2
6bxtvmyb/rbNd23TE7FzvQDMr21TtA2m+WPb9LltTmybUtnmDLYp8wa9PIA5
u9j5/iGYyDYXgb8PDitjmyvZplq2uYFtamGb29um7ra5n20aZpvHip3rr+Cw
qeLI7w+iebZtWmybV4md+yPAtEns3I8D5p22ww7Y5uNi5/4OMP1imy/B9IPD
/rLNd2zTv7b5lW16f2P4/8/nTAkwx7RNcW2HEtkOS2mb09um72xzNtuU1zYX
tk2lbXO4bappm+vbpua2ud1G/f6DqZvYP984OcChvuLI75ejaajYuV8OzGNs
0xQYH5hDYud4BkyLxM79EmBeGTm+eQGmjWLnehyYd4id81Ng2i92zneD+RgM
D6ZzYud8E5h/FzvHD2D6U+wcP4BDt8WR+9NoerxRrc/R/FLs7L+AKeom0/yR
2L8eMTHA9Jk4w39H90/STw8wJ7RNYbZD6Tap7QmaMsHw4FDWTWp7gKY8m/T6
H8yF9L9HUynbXNE21bDN9WxTM9vc1jZ1tc19bNMQ2zx6k16fgWmy2LnfEsyz
Nun1H5gW2uYVtmnDJr3+BIe263+Ppn0w/WA+Cn8fTGdheQbzxU368wym67D8
g/kWjA9Mj2B4ML+wTe9t1tMD5hhiZ38UTHE26/UZOJTANqWwHUq7Wa3P0PSt
2Dl/BeYsm/X6HEy5bXNBsXP/IZhKwvwAcwWxczwEpuowPJjr6vmBpqbw/oG5
jdg5ngNTF7FzPgrMvWF6wDR4s95+g3mUbZokds4HgnnmZr39BtMC27xc7Jw/
BNN627xN7OxPgGkvLD9gPiJ2zoeC6QzMDzD/Bq8HTH/A9ID5ptg5nwmmh2Ln
/CWYn4ud6ytgirJFv34wfyh29p/A9CkMD+b4W/T0gym52LlfFsxptujXA6aM
8PfB/OMW/X6AKdcWvfyCucAW/f6DqQSMD8zlYXxgqmab68D4wNRki16ewNza
NnXeoj8/YO5lmwZt0csvmEfC/APTxC16/Q/mGfD6wTQfpgfMy2B6wLQO5geY
t8LyD6Y9Yud6EpgPw+sB02mYH2C+IHaOv8B0DYYH8z/w98H0AJY/MD+D4cH0
Dv4+mKNvNU2xt+r3E8xfwPBgSrZVzw8wp4bhwfTNVv16wPzDVv3+gynnVj3/
wJzfNhW3HSpnO6yqba5tmxrb5la2qZNt7mmbBm7Vn0cwj7BNE7bqzz+Yp9um
ebZ5qW1aa5u32KbdtvmQbToF8wPMv9qmqzA+MN8QO9dPwXTfNj+1TW/h8wTm
D7aZpk/Ezv4EmOPZpqS2+Uvb9LXt0Pfb1OtF008wPJjz2aZitrmsbapim3+2
TY1sc0v9etHUEYYHcw/bNMA2D7dN423zNNs01zYvsU1rbPNm27TLNh+0TSfh
/QCHztumK2Jn/x3Mf8P7D6Z7tvmJbXpjm6NtN02xbPPntimJbU5lm76yzZlt
Uw7bTLapqG0uY5sqb9fvP5hr2aaGtrmF2DmfAaYOYud4EMzdxc75FzD1t83D
bNM42zzVNs2xzYtth622zZtsE9vmA7bphG3+xTZdts1/2aa7tvlf2/TaNr+/
wzR9bJvj2qbEtjmlbcpgm7+zTdltc94d+vMEpiJi5/41MJcWO/e/gamSba5p
mxqInd+rAHNz29Re7OxPgkPdbFM/2zzUNo21HZpim2bb5kW2aZVt3mibdtrm
/TD/wXTcNp8TO+cvwXRph95+gPlP23THNj8WO7+/AKZXtjnqTv16wBTTNn9m
mxLZ5rCdevsNpvS2OZNtymab89imwra5lG0Kt801durlB0z1bXMz29Rup17/
gbmrbeprm4eInes3YBpjmyfbppDYuR4H5oW2aaXYuZ4J5g22aYdt3id2rt+C
6Ri8/2A+K3bO54Lpd7Fz/gPM123Tbdv8CJYfML20ze+xafrINsexTQltcwrb
lM42fyt29ifAlJX1+gvMuW1TIdtckvXyAKaKMDyYq9umejA+cKip/vdoagvz
D8xdbFMf2zyY9fYYTKPFzvUzME+yTbPEzvlEMC+Avw+mFWLnfASY18PrAdN2
1ttvMO+F6QfTUZgeMJ9hvT4C00Xb/IfYuZ8JTLfEzv0cYH4Iw4PpBfx9cCjK
LtMUY5ceH5g/tU0JbHNysXP/BJjS2g5ltE1ZbHMu21TQNpfYpT//YKpgm6vZ
prpi53gGzE3EzvkPMLXZpZd/MHe2Tb1thwbZplG2eaJtmgmvB8zzYX6AabnY
2X8C87pden0Cpm279PobHNoDrx9MR8TO8TCYT8PrAdNvYmd/DMzXxM79P2C6
KXbuHwKHHtim57b53S69PgLTh7tNc2zbFN82J7NNaWzzN7bpR9ucc7feHoCp
wG69PIG5+G61PKGp/G69PgBzVdtUxzY3tk2tbXOn3Xr5BVOv3Xr7D+aBtmmk
2LkeDOYJYmf/HUwzbPM827RM7H4fXZvX7tbrEzBtFTv7E2DebZsO2w6dsk0X
bPNV2/SPbb5vm57B5wHMb2F4MEXfo4cH8ye26Ys9+vMHDiXdo9fnYEq9Ry//
YP7aNv1gm3/aoz8/YMoPrwfMxfbo+Qemcra5im2qbZsb2aZWtrmjbeq5R68P
wDzANo2wzeNt03TbPNc2LbXNa2zTFtu8yzYdss0nbdOvtvmKbbphm+/Zpqe2
+c0evf4G0wd7TXMs2xRP7Jy/AXMSsfP7E2D60jZ/ZZu+tx3KYZvy2eaitqms
ba5sm362zQ1tU8u9en0A5g571foaTT326vU/mPvv1etjMA23zePEzvEHOGya
bZ5jm5aIneMJMK+2TZttM8P8A9NB23xC7OyPgen8Xv35BfNl2/S32Ln/Esx3
bdMTsfN7ZmB+LXZ+vw5M0faFq+9DgvnjfXp8YPp8n16ewaHE4sjfE0RTKtuc
wTZlFju/1w3m7GLn9+/ARGLn9+jAXETsPj9Gm8rY5kriNrK4t14eYKplmxuI
/ePdIFMLsfO8CDC3t03dbXM/2zQMph/MY2F4ME0Vu8+L0ebZMD/BtNg2r7JN
m8Tu82O0eac48vei0HRA7H+dakmA+Tj8fTD9AsOD+RJMD5j+EnuXE2oFme/Y
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
q8N45pRF1O315ypDU8ap6vC8lrKc6xutaXvIcqVvXO9bbleH58XyhNFWHd43
pyyPqMPvyVPG03T8yPIy7T8Zb/mWD9TheTFlfKaO+pPI0lEdxpunjJ/U0fs4
snRXh/nMhieMfvZ6YMvgCns9kfFPha0PyTJKHb2/JGMirY8sMytsfUDGggpb
/5BlOW0PGXW0/2RpXukaLSvt9pNlI9/Y0rfsQN9Pxu6+ZX911H4j4zB11B9K
luN845RKe/8myznqMF9myij4livUYbxsyrjOt9xWaa9nMu6l5cnycKW9nsl4
yre8ROsj4011+D1wytKB1kdGWaWtz8nyrW/8qI7aD2Tppg7joYcnjL6+ZVCl
vf7JGOZbKn1jgjp6n0OWGeqo/UXGfHU0/oEsy9Rhvp2UUUvLk6XZqIJpT5Kx
zihbH5NlQ3XU/iBjC99S4hu7+Zb9fONQddQeI8ux6qj9TcbJo2x9RJaz1dH7
ZzIuGmXvB2S5XB09z5Fx7Sh7/yDLraPs/ZiMe3zLQ77xpDp6fiLLi+roeYaM
N3xL+1G2PiaXfaouPo+x5Rt19D6LjB/s59nym2/08S1/+Mbfo+z9gywVvjHe
t0xXR+13Muapo+cZsvynjt5HklFD548sTUfb9ZGx9mh7PZJlA9/YnNZHlu19
Y1ffsq86zCeTMg7xLcf4xkmjbX1ClrPU52U/2E8ZF4629RdZLvONa+h4kuUW
37hbHY0/IMuDvvGEb3mBzgcZr4+29SdZ3h9trz8yPlFH78/J8vVoW/+R8b1v
6Tra1j9k9PYtv6uj8Qhk/OVbRvrGON8yzTfmqqPnObIs9Y1qdTSegixNxhRM
e5KMtdTR8yhZ1ldH7UcyNlOH9x0py3bqMN9MytjFt+wzxh4/Mg4eY+/nZDl6
jK1/yTjRt5w5xtbHZFwwxt6/yXKpOnp+IuNqWp4sN/vGXeqoP5YsD/jG477l
eToeZLxGx58s76mj8YxkfKyOxnOR5Svf+E4dfi+dsvyqjsbvkdFLHfUHkWWg
bwz1LeW+Mda3TFVH7Tcy5lB5JMsS36ii8kSWVVR+yVhzrF2eLP8ba88HGZuq
o/Y/WbYda8sjGTuro/dHZNnbNw5SX5C9sBuesBxFy5Nxgjp6/0WWM2h5Ms73
LZfQ9pBROtZej2S5aay9/si4Ux21Z8hyvzrqDyfjMXVxPCNbnvONV9VRe4gs
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
ZY3phdX9YSlj3en2/kWWjX1jq+n2fkaWHafb80HGHr7lAHWYTzxlHO5bZLqt
z8g4VR21B8hyrjrMN9UrYbRWh/97T1muVIf/y+yZMK6n7SfL7bT9ZLSdbutj
sjxCy5PxtDr0d6QsL9P6yHjLt3ygDv0NKeMz2h6ydFSH+eJ7JYyfqPyRpTuV
JzL6+ZbBvvGPbxlF5YeMiXQ9kWUmLU/GAnXUfiTLct+o8y3NZ7hGS9+ykW9s
6Vt2UIfn2T4JY/cZ9niQZf8Z9n5CxmEzbHkky3HqqD1Bxikz7Pkjyzm+UZhh
6wOyXDHDln8yrpth6w+y3EbrI+Ne3yUP+8ZTvktemmGuZzbepONBlg6+UeZb
vqXyQMaPdD7J0o3KIxl96fvJMmiGrQ/IGOZbKn1jAu0PWWb4xnzfssw3an1L
s5m2/JKxjm/ZcKYtz2RsMdMef7KU+MZu9P1k2U8dxmukjEN9y7HqqP1Jxsnq
qP1JlrPVUXuCjIt8y+W0PjKu9S23+sY96jCerEfC8pBvPOlbXlRH7Vky3vAt
7dXhfWLK+FQd3senLN/4xg++5TfaHzL60PJk+YP2h4y/fUsFrY+M8b5lum/M
8y3/+UaNb2k6y+4PGWv7lg3U0fMPGZv7lu1n2euXjF1n2fsfWfb1jUNo+8ly
jG+cROsjy1m+caFvuYy+n4xrfMsts+z5JOPuWfZ6JMuDdPzJeILWR5YXfON1
Ov9ked83PlGH8aYpy9e+8T2tjyxdaXkyevuW32fZ+oeMv+j7yTLSN8b5Lplm
t4eNub5lKX0/GdW0P2RpMts11ppt10eW9Wfb8kjGZrQ8WbbzjV3U0fMrWfZR
R+0fMg72LUfPtvdvMk70LWfOttcPGReoo/YPWS6l5cllV8829Q1bbqb1kXGX
OuoPJMsDdDzIeFwdtefJ8jx9Pxmv+Zb3fONj3/IVbT8Z3/mWX32jl28Z6BtD
fUu5OmpPkzHWt0z1jTm+ZYlvVFH5Icsquh7JWHNOwfQfkOV/6qg/jIxN59jv
J8u2vrGzOnqfQZa9feMgdfQ8Tpaj6PvJOMG3nOEb5/uWS9TR+xcyStVhPrt+
CctN6jDeDwnjTnV4n5my3K+Oxg+Q8dic/H7SP2F5Th3GA6aMV9VhvF7K8q46
jLdEwvhIHcbrpSxfqsN8Tymjszoav0CWX9Th/3RSRk91+D+8fgnLAN/4Ux3+
Ly9lGaGOxk+QMUYdvb8iyxR1NJ6AjNm0PFkWq6PxBGSsVEfjH8jS6Bst5trv
J8t6vrGJOoyHTFm28Y2d1NH7QLLsNdfuPxkHzrX7Q5YjfeN4Wh9ZTp9ryz8Z
58211yNZ2qiL43nYuEodfu/YP2G5kZYn4w51+L12ytJOHcZr908Yj8619RG5
5Fl1mA83Zbwy19ZfZHmHjgcZH9L+k+ULWh8ZndTReCiydPGNHuownqV/wtKf
jj8ZQ3zLcPp+Mkb7lsm+Mcu3LKLjT8aKubY+JkvDXFufk7HGPLs8WVqpw3if
lLHxPFt+ybI1LU/Gjr5lz3l2+8k4wLcc4Rsyz5ZHspxGy5Nx7jx7PZHlYt+4
0rfcoA7j7VPG7bQ8We6bZ8sTGY/Q+SPLM77xsm952zc+8C2f+0ZH3/Kzb3T3
LfCNwb7lX98Y5Vsm+cZM37LQN5b7lnrfaD7ftaw7315PZGw039a/ZNlqvq3/
yNhhvi3PZNmDlidjf99yuDr8HnNowjhOHf1+giynqsPvMQcljHPU4Xnl94Sl
tToaj0zGFerwPiplud43bivuz4CEpa06/N4zZTysDuMVByYsT6vD741Txku0
PrK8pQ7tyUEJo4M69DcNSFg+U2fTYS5NGd9SeSTLT77RTR3mG+qfsPSj8kjG
IHXUHiXLP+ro+ZOMSt8ykdZHxgzfskAdtafJWKaO2g9kqZtv759kNFvgWlr6
xoa+ZcsF9niQUULLk2V339jPtxzmG8fS9pDlFN84m9ZHloJvXO5brvONW2l7
yHLvAlv+yXjItzzlGy8usPcPsrzpG+19S5lvfLPA3j/I8qM69PcPSBi/qcN8
CSlL3wW2PiTjD9oesgxTh/cFAxJGhTrMd5GyTFCH/9vonzCmq8P7ugEJy3za
HzL+8y21vtF0YWH1+4CUZZ2FdnkyNlho739k2UId+hv+SBjbq6Pfb5FlN9/Y
Vx3G4w9KWA5Vh/k8BieMY9TR78/IcrI6+v0cGWfR/pDlInX0+zkyLlNHv/8i
y7XqqD1Dxi3q6PekZLlHHf2elIwH1dHvv8jypDpqP5Hxgjpqv5HlDd9437d8
6htf+5YffKOrOvwcZmDC0oeOPxm/q6P2E1n+VofpDFPGSDr+ZBnvG9PU0e9f
yTLPN5aqo98jkqXGN5ossseDLGurw3yDKWN937I5rY+M7XzLrots+SdjH99y
yCJb/sk4Wh3G2w1MWE5aZMsfGWeqs58jXTgwYblQHd7npYxL1eH/plOWa9TZ
27C2KeNm33K3OryPTRkP+JYnFtnyT8bzi+z1Q5bXF9n7IRnvqaP+S7J8oo7a
D2R8pY6eZ8jyvTrMZ9c/YfzqW3rT+sgYqM5upxsNTFj+Uof/O+ifMMoX2fs3
WcbR8Sdj6iJ7PyfLXN9Yoo7aU2SpVkftATJW0fEjy1qL7fkk43/qMJ9oyrKZ
OnqfR8a26uj5kyy7LLbHn4y91WG8zICE5WDfOMq3nOgbZ/iWC3zjEt9ytW/c
pI7as2S5yzfuV4f5hgYkLI/7xnO0PrK8po7a72S861s+9o0vF9v6iCzf+cYv
vqWXbwzwLUN9Y4RvGesbU3zLHN9Y7FuqfKPRt6y5xDXW8y2b+sY2vmVn39jL
txzkG0f6lhN843Tfcr5vtPEtpb5xo2+50zfa+ZbHfONZ3/Kqb7zjWz7yjS98
S2ff6OJbevpGf9+lf6qL7QU2hquj+bzIMkYdzWdFbjJNHfp7UpbZSwpmPi0y
FvmWleowHihlNKij+b/IpS2Wukarpfn9cGjCsolvbO1bdvI9ZU/fcuDS/Hym
jCMoP57y0yg/j/KLKb+K8hsov4Py+yh/lPJnKH+F8rfVoT2gLv3QGp9bSyfK
f6a8B+WgfAjl/1I+mvJJtH2zKF9Iy6+gvJ6Wb/Gfzde1lo0p34ryHSnfg/ID
KD+ccqH8VMrPpbw15VdSfj3lt1PelvJHKH+a8pcpf4vyD/6z9dVn6tBezOqH
jtb4ifLulPejfDDl/1A+ivKJ1lNmUr5AHeazyPozl1ujjvLmy2ze0rp0Y8q3
tJYdKN+d8v3V0fxdh6nDfC9Z/+Zx6qg/8xR1mE8mW/4cdZjfJlu+oA7jDbP+
2SvU2c8rz8z6Z69Th/lMs+VvU4f5a7Ptu1cdzS/4sDWeUkf9SS/R9r2pjuYX
66CO+tfKyB3VUf/Pj+qov7WbOmxu9jzfVx09/w9aZu+3w9TR83qlOvz/QHZ8
Jqij/ucZ1phvj0fpMjo+tdbSbLnN11FH74c3tMYW6jBeM8tL1GH8aHZ+drOW
/dRh/Ex2fR2qDvP5ZPmx1jhZHf1fytmUX0TLX075tUVn/3d96/K8vGT/L3PP
8ry8DtP8IXX0vuBJdRhvl93fX1SH/8/O1v+GOoynytoj7dXh/02z/ftUnT0O
tsy27xt11jyYm63/B3u85Td1NH6hD+V/LLfl8291NP9bBeXj1WE+piyfro76
d+ctN+VX/lNH87fVqKPxDU1X2HxtddR/uYE66u/c3Lp0e8p3tZZ97fpwyAr7
/cdQfpLdHjmL1n/hClv/XGaNa1aY67/0FnU03+jd6mh+xwdX2OP3xApzvOUF
a7xu1yfvq6P+6E9W2OP/9QpT3+D7FaY+Ke1qjwd6q8N8Vdnx+10djRf5i47f
SPt5jKPjP22FrZ/m2vXJUnXUn1utLvYHlzRZWVg9/3RWf621Mr+/ZvXX+uqo
P3AzddR/sp01dlFH4/X3UUf9Swero/7Do9XR+9YTKT/TGheow/9xZeu/VB31
911tLTfb7cFdtH0PUP643V95Xh3+PzbLX1MXf29Q+p466u/8eGXB9Fd9Rev/
jr7/V7s/6EXLD1RH/ZND1VH/abk1xqqL/aWlU9Xh/9uyfI46/N9atvwSa1RR
voryNasK5n3+/6yxqToaH7FtVcHMx7hzVV5fZvPR7a2O5ss7yFqOqiqY+eBO
qCqY+evOUEfz351flV//WX6JOrzfyua3K6X8JmvcSfn9VXn9kOWPWctzlL9K
+buUf0Tr/5K+vzMt/wst35P2f0BVXn6y31/+afdXRlQV4vn3ysZU5ffHnzWf
og7jz7LjO1sd3ldl8+strsrriyxfaT8vjerQHuqieYvqwur3HVm+XrXNN6nO
6xu1bFOd1zdZvlO1Xf9edn04kNZ/pP08jq/O7zfZ/p9end9vsuN3njoUl2z5
Nta4ivIbq83xwB3q8HudnzRvpw7tIzUerc6vl+z4PqsO43Oy/BV1eF7Jln+n
Or9e9fP4sDqvX7Llv7BGJ/t56UJ5D1q+P+VDaPuH2+3FaMonUz6rOi9vHbV+
WUT7v6I6v95/1OUb1GH+vyxfo6awur32g+at1OH3Z2psbC1b1+T30+8037Em
374yzfcsfv4TzQ+oyY9vlh9Rk5ePLzQXazmN8nPV4X3Y55pfbI0ra/Lym+U3
1OTl60vNb1eH56OvNb+vJq9/9XjhEXV4HvhK82dq8uvzG81fVof26Leav60O
88Nn+Qf28/J5TV4fvKN5R3UYb/yG5j9T3r0mLz9vao6avL5ur/lgdWj/vq/n
99/i/ryn+Sj7eZlUPD8faT5THZ7/PtV8oTWW0/mrV4fxWWo0rzWWdWvz8veZ
5hvV5vdjtWxVm98vs3wHa9mD8v3VoT2Rnb/Da/PrPTv/x1nLqbXmfOOc2rw+
y5ZvXWvLxxXWcj3lt1HelrbvYXVo32b119O1+fnLytdLtP9v0fZ3oO37rNZc
D/hWHeaz+VDP70/W6Fabl5/s+Pej5QfV2vP3jzo8j32seWVtXt47aD6xNi/P
WfmaoQ7twQ80X1A8Hm9pvqy4/WqpK26Plmc0q8uv99c0b1mXf/+rmm9oLVvW
mfWhpM5cD7J7XX49aXnHfnX58c/yw+ry6/VdzY+1llPUoX3+tuZn19nrq2CN
y+vM9STX0fpvpfXfqw7/75Jdfw/Z75On7PbiRXVoj2X1x5t1tn5qrw4/18yu
zzJ1aG9pfYRv6vL7fVb+fywer2z539RhPNz3mvdVh/Z2Vr/9oQ79PVn9NKx4
fLP6q6LO1r8T6mz5nV5nr8/5xf3N8v/qzP1Gaot5dn9uWl9Y3X7P2hfr1Ofr
y9oXG9Tb7duiPj8eer/C9vXm/laymzqMX+mk+b71efnK9v/QenM/wzHWcnK9
vb+fpS62d+Qiu724TB1+z5jdv6+tz+vD7P55S33BtB/uqbf3zwfr8/o2u/8+
Sfv3AuVv0Pa/T/mn6tB/lOVfq8N8gdn+/6AOz9fZ/bmrOjxvdta8jzV+t5+X
v9Whvy1bfqQ6jOfR4y3j6/P6KVt+mj0fMk8dinN2fpZaS41dH5o0mPMrazeY
vGz9hkLc3pDNG+z+bWc/L7s2mPKIfRoKpv10SIM5Xzi6oWDavyc15PV/Vj7O
bMjrwyy/sMGe30sbbPm6xho3q8N8BNn5uZu2/wHavyca7PF/Xh36F7Lz93qD
PX/vNZjzIZ+oQ39JtvxX1vJ9gykv+NUeL+ndYMvnQHXUfvyL8vIGe/2NazD1
EabS98+l7Vti1yfV6qh9uqrBlv+1Gm35/1+jOb4lmzWa7cG2jfb87NJov39v
azm40Z7fo+z65cRGu39n2O2RC2j5S+z2yNWN9vzeROu/yxr30/49Ttv/XKOp
z+Q1dfR88W6jPX8fN5rzXfaltXxnjV8o70X5gEZ7fQ1Vh/ZBlo9oNOdTxlpj
Cm3fHDq/i9VhPpOsfFepQ3tX76dobLT1y5qrCqZ9vt6qgmn/b7qqYNq326wq
mOeTnSnfa1XBtL8OWpVfv1n7+kh1sf1UcoI6ah+cvqpg2ufnq6P2VxvKS9XF
9hpuXFWI24Ny56r8eGTtw3bW8pjdHjyrDu2BrP33avF4ZNv3jrV8pI7aP19Q
3lkdtW+6qKP2YU9avr/9vPxp9wfD7fbKGMon0/7NtvuDRavy+kzbu7JyVcG0
fxto+RZNWq8uL9nxaaWOju8mlG+tjs7PTtbYk/IDKT9CHe3f8ero/J2mjtrn
56mj8nGxutgelquscQPld1iX3Ufb9ygt/wwt/wpt/9t2e+RDdfF5FJ/T8p1o
/T9T3oNy2PXJEMr/peVH2+OFSXR8Z6mj59uF6qh9vYKObz0d/zWatl5d/2T9
F+s2tfnGlG+lLvZ3yI7qqH7Yo6nZnpID1MXyisPt50XUUfk91VrOpbw15VfS
919P67+9qSl/ZW2b2uP3iDWepvxlyt9SR/XLB9ZlnzU115N0tC77iY5v96a2
/PWj5Qfb9eMfWn6U/Twm0vbPVEf10wJrWd7Ulo86dVT/NW9my2dLa9lIHdX/
W1K+Ay2/u/287E/LH0bLH0fLn6KOnj/PsUaB8isov04dni+z/DZr3Ev5w83y
8vOy5k81y8vXK5q/pI6er99UF/sTpIM63F+z/oOyZq1N/8G31vjRrk+6qUP7
PFt/X9q+Qeqof2KY3V6pbJaXj5c0n2AtM2j/5tPyyyivpbxZc3M8sE7z/Hw9
r/mGzfPy/YLmW1Be0jw/Xk9pvltxfY9ovp81DqX82Ob58XtM85Ob58fjCc3P
tsZFlF9O+bV2e+VWu724p3lev76u+UPN7fF/0lpebG6P/xvq0J/xjObt6fh8
WvQDmn9TXP4hzX+wlt8o79M8v57aaf5H8fvaav53cf03aV5RdBvNxxe3v1Tz
6ZTPs5b/KK8pLi+aN13DGGtbywaUb25dsj3lu9Ly+1J+COXHUH4S5WdRfiHl
l1F+DeW3UH435Q9S/gTlL1D+OuXvU/4J5V9T/j3lXSnvTfnvlP9F+UjKx1E+
jfK5lC+lvJryJi1svpa1rE/5ZpRvR/kulO9D+cGUH035iZSfSfkFlF9K+dWU
30z5XZQ/QPnjlD9P+WuUv0f5x5R/Rfl3lP9KeS/KB1I+lPJyysdSPpXyOZQv
obyK8lWUr7mmzf9njU0p35bynSnfm/KDKD+K8hMoP4Py8ym/hPJSym+i/E7K
76f8Mcqfo/xVyt+l/CPKv6S8M+W/UN6T8gGU/0n5CMrHUD6F8tmUL6Z8JeWN
lLdYy+brWWMTyrehfCfK96L8QMqPpPx4yk+n/DzK21B+FeU3Un4H5e0of5Ty
Zyl/hfJ3KP+Q8i8o70R5F8p7UN6f8iGUD7cuG035ZFp+FuWLKF9BeQPla6xt
81bW2JjyrSnfkfI9KT+A8iMoF8pPo/xcyi+m/ErKb6D8dsrvo/wRyp+h/GXK
36b8A8o/p7wj5T9T3p1yUD6Y8n8pH0X5JMpnUr6Q8uWU11PefB2br2uNjSjf
ivIdKN+D8v0pP5zy4yg/lfJzKG9N+RWUX0/5bZS3pfxhyp+m/CXK36K8A+Wf
Uf4t5T9R3o3yfpQPovwfyispn0j5DMoXUL6M8jrKm7W0eUtrbEj5lpSXUL47
5fvF/j+yhC7T
          "]]}, Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[{
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.578, 0.51, 0.85], 
          AbsoluteThickness[2]], 
         PointBox[CompressedData["
1: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
1UV/GL0JenP0Nugd0Xug90Mfhj4WfQr6bPSF6MvR30Rfh74Fy+8DLL8D6J92
j/fP36L/hPF/oufsEfczY/t56BejZ6AXQS+OXhL9bvR70aujZ6I3QG+M/jR6
a/QO6N3R+6IPRR+DnkKfhf5K7NQy9Dcw/h30zejvo+9HP4z+DfqP6H9g/k7q
GfczYnse9PyxU5ejX4PxN/SMj2+3xfbS6BXQq6HXQX8I/XH0Zuit0F9A74be
B30I+mj0yegz0RegL0Vfjb4W/T30nej70D9B/xr9KF6/Y+g5esXjT4/t56Jf
hH4Z+tXoxdBLoN+Ffg96VfTa6PXRGwUnzt+eim3P9Yr2t94+OHF91DW290Yf
jD4KfRL6DPSX0Zegr0J/G31TcOL6akds24v+MfpX6D+g/47+L/ppL8X9nNiW
D/3S4MT16VWx/Xr0W9FLoZdHr4JeC/1B9MfQm6K3RH8evQv6S+iD0EcGJz6/
ODE4cX0+PbbNR38V/XX0Negb0bej70H/CP1L9O/Rf0P/B/3U3nE/O7ZdiF4Q
/Ur0oui3oN+JXg69MnpN9HroDXtHr5c/GdueRW8XnLg/0zm290IfiD4CfQL6
NPR56IvRV6K/hb4BfVtw4v7T7th+CP0L9O/Qf0X/G/2UPnHPHdsuCE7c37ok
tl2Bfl2faP/Y9ebYfkdsK4teCf1+9AfQH0V/Ar0Felv0F9F7Bic+vzwgtg9H
H48+FdOfi+kvQn8N3dHfRd+Kvgv9IPrn6EfQf8Hr9xd6rr7x+LNi2/noBdAL
o1+LfhP67eiGXhH9PvS66I+gN0F/Br0Neif0Huj90Yehj0Ofgj4ndmoh+gqM
fxN9fd/49duC/iHGH0D/DP1b9J/R/0Q/uV/cz4xtedEvRi8UO1UE/UZtL6lt
ZbT9Xm2roe2Z2vawtjfWtuba3jo48f4BbB2DE+eDsHfXtn7aPjQ4cX4F29h+
8fEa9pS2zdb2V7RtuXbqDW1bp+2bte0Dbd+vbZ9q+zfa9pO2/6FtOftL+xna
dp6259e2DG2/RtuKa/ttwYm/L4Ptbm2voG3Vtb2OtjXQ9se17Wltb6VtHbS9
m7b11fYh2jZG2ydr2yxtX6Bty7R9tXbGO9r+nra9r+37tO2wtn+tbT9q+zFt
O2mAtJ+ubXm0/SJtu1zbr9a2G7S9hLaV1vZ7tK2attfWtoe0vZG2NdP257Tt
BW3vqm19tH2wto3W9knaNlPbX9a2pdq+StvWavsmbdup7Xu17RNt/0rbjmr7
79qWY6C0n6Zt52p7Pm27TNuv0rZi2n6rtt2l7eW1raq219K2+tr+mLY9FZy4
nwd7S21rH5w4f4O9i7b11vZB2jZK2ydq24zgxPfRwT5f25Zo++va9ra2b9S2
Hdq+R9s+1vYvte0Hbf9N2/7V9lMHSds52n6htl2q7Vdq2/XaqVu0rZS2l9O2
KtpeU9se1PaG2tZU25/Vtue1vfOgePuF7SVtH6htI7V9grZNx/zDPg/jYXtV
21dq2xpt36Bt27V9t7Z9pO1faNv32v6rtv2j7acMlrazB8evH+wXaFtBbb9C
24pq+83adqe2l9W2ytp+f3Di+6Vgq6ftj2J6sD2p7S20rZ22v6htvbR9gLaN
0Pbx2jYNyw/2udq2WNtf07a3tP1dbdum7bu07RCWB+yfByfev4PtO23/Rdv+
1vZcQzLj7x+Lbbm1/fwh8fRgu0Q7VVjbrtP2m7TtDm03bauk7fdp2wPa/oi2
PaHtz2hb2+Dk963F9k7a1lPb+2vbcG0fp21TtX2Oti3S9hXa5tq+Xtu2Bif+
ngj2D4fEx2/YDmI87J9hPGxHtP1nbftL208eKm1naXveofH+E7YC2l5I267V
9hu17XZtL6NtFbW9hrbV1faHta2JtjfXtjba3lHbegw9vj9qn8beLzjx/fmw
DdP2sdo2Rdtna9tCbV+ubW9q+zpt26LtH2jbgeDE91HC/qm2favtP2nbn9qe
c5i0nant52nbxdqeoW1FtL24tpXU9ru17V5tr65tmdreQNsaa/vT2tZa2zto
W/fgxPkz7H2HxcdD2IZq+xhtS2n7LG17RduXadsb2v4Olgdsm4MTn5+B/f3g
xOd3YNuv7Ye17Rs8Ppz6MTjx+SvY/jixPgxIYz9peOb/7/cPSmM7Q9vzaFt+
bb9c267R9hu07TZtL61tFYbHyw/2atpWR9sf0rbHtb2ZtrXS9he0rZu299G2
Ido+Wtsma/tMbVug7Uu1bbW2r9W297R9p7bt0/ZPtO1rbT+qbce0PccIaTtd
28/Vtou0/bIR0f6Otqu1vZi2ldD2u7TtHm2vqm21tb2+tjUKTvw9LOxPjYiP
P7A9p+3tta2rtvfWtsHaPkrbJmn7DG17OThxPwj2Jdq2Stvf1rZN2r5D2/Zq
+8fa9pW2/6Btv2v7v9p22khpP0fb8mn7pdp2lbZfr223ansp7Yzy2l5F22pp
+4Pa9pi2N9W2ltr+vLZ10faXgpN/PxjbBmn7SG2bqO3TtW2+tr86Mt7/wPa6
tq/Rto3avl3b9mj7R9r2pbZ/r22/afs/2nbqKGk/W9suHBWvf7AX1LYrtb2o
tt2i7XdqWzltr6xtNbW9nrY11PYnte1ZbW+nbZ21vZe2DdT2Edo2Qdunads8
bV+sbSu1/S1t26Dt27Rtt7YfCk68/wPbF9r+nbb9qp36W9tOGS3tubXtguDE
/XzYL9G2K7T9Om27Wdvv0Lay2l5J2+7X9ge07VFtf0LbWmh7W217MTjxfgDs
PbVtgLYP17bxmB/Yp2rb3ODE71nCvgiPD9tr2u7a9q62b9W2Xdp+UNs+1/Yj
2vaLtv+lbbnGSPtZ2na+thfQtsLafq223TQmXn9gv13bTNsratt92l4X8w/b
I9reRNue0fY22hmdtL1HcOL9CNj6a/swbRun7VO0bY62L9S2FVh+sL+J8XDG
em3fgunB9iHmB/YDY+L9J2yfYf2D/Vtt+1nb/9S2k8dK+5nalndsvDxgv1jb
Cml7EW27UdtLYv5hK6Pt92pbDW3P1LaHtb2xtjXX9tZj4/UPto7a3j048f4l
bP20fejYeHuAbay2p7Rttra/om3LgxPn07C/oW3rtH2ztn2g7fu17VNt/0bb
ftL2P7Qt5zhpP0PbztP2/MGJ92Ngy9D2a7StuLbfpm13a3uF4MT9H9iqa3sd
bWug7Y9r29Pa3krbOmh7N23rq+1DtG2Mtk/WtlnavkDblmn76uDE/QjY3tH2
97TtfW3fp22Htf1rbftR249p20njpf10bcujnbpI2y7X9qu17QZtL6FtpbX9
nvHHj+dD09iqBSe+TxP22tr2kLY30rZm2v6ctr2g7V21rY+2D9a20do+Sdtm
avvLwYnvN4Vtqbav0ra12r5J23Zq+15t+0Tbv9K2o9r+u7blmCDtp2nbudqe
T9su0/artK2Ytt8anPg8BWx3aXt5bauq7bW0rb526jFte0rbW2pbe23vom29
sfxhH6Rto7R9orbN0Pb52rZE218PTnyeFLa3MR72jdq2Y0J8/IJ9T3D235OM
TGP7WNu/1LYfghO/Nwf7b8FZp+MF0znjX20/daK0nTMxM/q9T9gvDE78Ph5s
l2r7ldp2vbbfom2lghO/Bwh7OW2rou01te1BbW8YvOG/V7NA8YlpbE21/Vlt
e17bO2vbS9o+UNtGBmdfL05IY5+gbdOx/sE+Lzj783rj09he1faVwYnff4Rt
DeYH9g3ath3zD/vuifH+B7aPTvz7vmnsX2jb99r+q7b9o+2nTJK2s7X9Am0r
qO1XaFtRbb9Z2+7U9rLaVlk7db+21dP2R7XtSW1voW3ttP1Fbeul7QO0bYS2
j9e2ado+V9sWa/tr2vaWtr+rbdu0fZe2HdL2z7XtO23/Rdv+1vZck6Utt7af
r22XaHthbbsuOPF7yrDfFJz4/V3Y7tB207ZK2n6ftj2g7Y9o2xPBid8Thv0Z
bWur7Z20rae299e24do+TtumBifOx+HUHG1bpO0rtM21fb22bQ1O/N407B8G
J36/GraD2v6Zth3R9p+17S9tPzklbWdpe15tK6DthbTtWm2/Udtu1/Yy2lZR
22toW11tf1jbmmh78+DE71vD1iY4cT8Y9o7BifuRsPXA9GDvp23DtH1scPL3
/WLbFDx/2GcHJ37/G7aF2r5c297U9nXatkXbP9C2A9r+qbZ9q+0/aduf2p5z
irSdqe3nadvF2p6hbUW0vbi2lZwSr4+w361t92p7dW3L1PYG2tZY25/Wttba
3iE4cf0NW3eMh72vtg3V9jHaltL2Wdr2irYv07Y3tP0dbdus7e9r235tP6xt
32j7j9r2x5T4+AP7SVPj9Qe2M7Q9j7bl1/bLte0abb9B227TTpXWtgraXk3b
6mj7Q9r2uHaqmba10vYXtK2btvfRtiHaPlrbJmv7TG1boO1LtW21tq+dGh+/
YHtvarw9wr5T2/Zp+yfa9rW2H9W2Y9qeY5q0na7t52rbRdp+mbZdre3FtK2E
tt+lbfdoe1Vtq63t9bWtkbY/pW3PBSeuH2Bvr21dtb23tg0OTlx/wD4K42Gb
pO0ztO1lbV+ibau0/W1t26TtO7Rtr7Z/rG1fafsP0+L9H2y/a/u/2nba9Pjx
YT9nerw+wJZP2y8NTnz+ALartP16bbsV8w97KW0rr+1VtK2Wtj+I5QHbY9re
FNODraW2P69tXbRTL2nbIG0fqW0TtX26ts3X9le17XVtX6NtG7V9u7bt0faP
tO1Lbf9e237T9n+07dQZ8f4E9rO17UJtLxhctHe+PVt+G57GdqW2F9W2W7T9
Tm0rF5x4PwD2ytpWU9vraVtDbX8yOHE/H7Znsfxhb4fxsHXW9l7aNlDbR2jb
BLwesE/TtnnavljbVmr7W9q2Qdu34fWAbbe2H9K2L7T9O237Vdv/1rZTZkp7
bm27QNsv0bYrtP06bbt5Zrw/hP2O4MT5P2xltb2Stt2v7Q9o26Pa/oS2tdD2
ttr2YnDi/hnsPbVtgLYP17bx2j5V2+Zq+yJte03bXdve1fat2rZL2w9q2+fa
fkTbfglO3P+B/S9tyzVL2s/StvO1vYC2Fdb2a7XtJm2/XdssOPF9qrBX1Lb7
tL2utj2i7U207Rltb6NtnbS9h7b11/Zh2jZO26do2xxtX6htK7T9TW1br+1b
tO3D4MT1OOwHtO0zbf9W237W9j+17eTZ8fYE+5nallfbL9a2QsGJv5+FvYi2
3ajtJbWtjLbfi14DPRP9YfTG6M3RW6N3RO+O3g99KPpY9BT6bPRX0JcHJ77v
9Y3Ytg59M/oH6PvRP0X/Bv0n9D/Qc86J+xmx7Tz0/OgZ6NegF0e/Df1u9Aro
1dHroDdAfxz9afRW6B3Qu6H3RR8yJ359x8T2yeizghPn7wuCE+ery2KnVgcn
Pk/0Ttz9PYx/H31f/Hh2GP1r9B/nxPuTY3Pi/dlJc+P99emxLQ/6ReiXo18d
fHGuuucUWzww9Btiewn00uj3oFdDr43+EHoj9Gboz6G/gN4VvQ/6YPTR6JPQ
Z6K/jL4UfRX6WvRN6DvR96J/gv5V7IyjeP1+x/gc8+Lxp8W2c9HzoV+GfhV6
MfRb0e9CL49eFb0Wev158fbxWHDiftBTwYnPX7cMTtwfax/buwQn7r/0Dk5c
7w+KbaMwfiKmPyOeH5+P+VuC/joe/+3gxP3/jfPi/cuOefH+a09s+xjjv8Tj
/4Dn9xv6v5i/U+fHz/+c+fH+8cL58fxfGtuvRL9+fjT91C3zo/m1Uph+ufjf
W5XYXjN2xoN4/IZ4/Kbz4/33s/Pj5fv8/Gh/6p2DE9erL8X/3gfi8UeiT8D0
p8+P99/zMP1XMX5l/O9tTby8fMP8eP+9fX68/eyeH68fH8X2L9C/R/8V/R/0
U16O+9mx/QL0guhXoBdFvxn9TvSy6JXR70evh/4o+pPoLdDbob+I3gt9APoI
9PHo09Dnoi9Gfw39LfR30beh70I/hP45+nfov6D/jZ5rQdxzx/bz0S9BL4x+
HfpN6HegG3ol9PvQH0B/BP0J9GfQ26J3Qu+J3h99OPo49Knoc9AXoa9Ad/T1
6FvRP0Q/iP4Z+hH0n9H/Qj/5lbifFdvzohdAL4R+LfqN6Lejl0GviF4DvS76
w+hN0JsHJ65P2sT2jug90PuhD0Mfiz4FfTb6QvTl6G+ir0Pfgv4B+gH0T9G/
Rf8J/U/0nAvjfmZsPw/9YvQM9CLoxdFLot+Nfi96dfRM9AbojdGfRm+N3gG9
e3Di/KZvcOL6cCj6mNiWQp+F/kpw4vxiGfobGP9O/O9tM/r7GL8f/XBw4vzy
G/QfMf6P4PBg+XONCv2kRXE/Izhx/pQHPX/s1OXo1wQnzi9vQL8tOHH+Vjq2
VYj/vVfD+Dp4/IcWxa/f4xjfDONbxf8+9QJ6N4zvsyhevkPQR2P8ZDz/megL
0Jeir8b01y6K14/3YvvO+PWyffH8+ifx49nXWP5HgxPXX8cwPsfi+PmfHtvP
DU5+/nVxND2/bHH8+ly9OF6/imH6JeLp+V2Y/j3BifPzqhhfG/NXP378jEaY
/lPBieuH5xbHy7895r9rbO+9OF5/B8f2UeiT0Gegv4y+BH0V+tvom9B3oO9F
/xj9K/Qf0H9H/xf9tFfj1/ec2JYP/VL0q9CvR78VvRR6efQq6LXQH0R/DL0p
ekv059G7oL+EPgh9JPpE9Ono89FfRX89dmoN+kaM346+B/0j9C/Rv0f/Df0f
9FOXxP3s2HYhekH0K9GLot+CfmfsjHLolTG+Jno99Iba/qS2Pavt7bSts7b3
WhJvn7AN1PYR2jZB26dp2zxtX6xtK7X9LW3boO3blsT7d9h2L4mP17AfwnjY
vlgSH49h/w7jYftV2//WtlOWxsdL2HMvjecHtguWxsdj2C9ZGj8+bFdgPOzX
YX5guxnTg1N3LI33f7CVDU7c74O9UnDi+hO2+7X9AW17VNuf0LYW2t5WO+NF
be+pbQO0fbi2jdf2qdo2V9sXadtr2u7a9q62b9W2Xdp+UNs+1/Yj2vaLtv+l
bbmWSftZ2na+thfQtsLafq223aTtt2ubaXvFZfHxBM64LzjxfiPsdZfF+0/Y
HglOXK/A3iQ4cX0I2zPL4v0f7G0wPdg6LYv337D3wHjY+mM87MPw/OGMcdo+
BcsTtjnx60H7QkwPthV4PrC/GZx4/wvOWI/5h30Lpgfbh5gf2A9gPJzxGR4f
9m/xesD2s7b/qW0nL4/nH/Yzl0fHa9ryLo/XXzh18fLo+dIZheJ/T3sRbbsR
8wN7STwf2MpgPOz34vFhq4HpwZ6J8bA9jMeHvbG2Ncfjw95a2zouj7c/ONV9
ebQ/pa2ftg/VtrHBifvBsKfi9YW22Zh/2F/B8oNtOV4P2N/A/MC2Ljjx+zOw
b9a2D7R9v7Z9qp36Rtt+0vY/tC3nCmk/Q9vO0/b82pahnbpG24prp27Ttru1
vYK2Vdf2OtrWQNsf17antb2VtnXQ9m7a1lfbh2jbGG2frG2ztH2Bti3TTq3W
tne0/T1te1/b92nbYW3/Wtt+1PZj2nbSa9J+urbl0U5dpG2Xa6eu1rYbtL2E
tpXW9nu0rZq219a2h7S9kbY10/bntO0Fbe+qbX20fbC2jdb2Sdo2U9tf1ral
2r5K29Zq+yZt26nte7XtE23/StuOavvv2pZjpbSfpm3nans+bbtM26/StmLa
fqu23aXt5bWtqrbX0rb62v6Ytj2l7S21rb22d9G23sHZ3x/cK419kLaN0vaJ
2jZD2+dr2xJtf13b3tb2jdq2Q9v3aNvH2v6ltv0QnPi9Pth/C05cz8H2b3D9
xuGKuHca+6mvS9s52n6htl2q7Vdq2/Xafou2ldL2ctpWRTtVUzvjQW1vqG1N
tf1ZbXte2ztr20vaPlDbRmr7hODE7y/BNl3b52nbq9q+UtvWaPsGbduu7bu1
7SNt/0Lbvtf2X7XtH20/ZZW0na3tF2hbQW2/QtuKaqdu1rY7tb2stlXW9vu1
rZ62P6ptT2p7C21rp+0valsvbR+gbSO0fby2TdP2udq2WNtf07a3tP1dbdum
ndqlbYdWxftf2D/Xtu+0/Rdt+1vbc62Wttzafr62XaLthbXtOm2/Sdvu0HbT
tkrafp+2PaDtj2jbE9r+jLa11fZO2tZT2/tr23BtH6dtU7V9jnbGIm1foW2u
7eu1bWtw4vfqYf9Q2w5q+2fadkTbf9a2v7T95Dek7Sxtz6ttBbS9kLZdq+03
atvt2l5G2ypqew1tq6vtD2tbE21vrm1ttFMdta2HtvfTtmHaqbHaNkXbZ2vb
Qm1frm1vavs6bdui7R9o2wFt/1TbvtX2n7TtT23P+aa0nant52nbxdqeoW1F
tL24tpXU9ru17V5tr65tmdreQNsaa/vT2tZa2ztoW3dt76ttQ7V9jLaltH2W
tr2i7cu07Q1tf0fbNmv7+9q2X9sPa9s32v6jtv2h7Se5tJ2h7Xm0Lb+2X65t
12j7Ddp2m7aXDk6cf8JWQduraVsdbX9I2x7XTjXTtlba/oK2ddP2Pto2RNtH
a9tkbZ+pbQu0fam2rdb2tdr2nrbv1LZ92v6Jtn2t7Ue17Zh2Ksdb0na6tp+r
bRdp+2XadrV2qpi2ldD2u7TtHm2vqm21tb2+tjXS9qe07Tltb69tXbVTvbVt
sLaP0rZJ2j5D217W9iXatko79XZw4v4nbJswHvYd2rZX2z/Wtq+0Uz9o2+/a
/q+2nbZG2s/Rtnzafqm2XaXt12vbrdpeStvKa3sVbaul7Q9q22Pa3lTbWgYn
zr9gf17bumj7S9o2SNtHattEbZ+ubfO1/VVtex3LE/Y12rZRO7Vd2/Zo+0fa
9qW2f69tv2n7P9p26tvSfra2XaidKqhtV2p7UW27Rdvv1LZy2l5Z22pqez1t
a6jtT2rbs9reTts6a3svbRuo7SO0bYK2T9O2edq+WNtWavtb2rZB27dp225t
P6RtX2j7d9r2q7b/rW2nrJX23Np2gbZfom1XaPt12nazduoObSur7ZW07X5t
f0DbHtX2J7Sthba31bYXtb2ntg3Q9uHaGeO1faq2zQ1OnE/AvkjbXtN217Z3
tX2rtu3S9oPa9rm2H9G2X4ITn2eF/S9ty/WOtJ+lbedrpwpoW2Ftv1bbbtL2
27XNtL2itt2n7XW17RFtb6Jtz2h7G23rpO09tK2/tg/TtnHaPkXb5mj7wuDE
5/dhW6Htb2rbem3fom0favsBbftM27/Vtp+1/c/g7O+b6JHGdvI6aT9T2/Jq
+8XaVkjbi2jbjdpeUtvKrIuXH+z3rovXR9hqaKcyte1hbW+sbc21U621raO2
d9e2fto+VNvGantK22Zr+yvatlzb39C2ddq+Wds+0Pb92vaptn+jbT9p+x/a
lnO9tJ+hbedpe35ty9D2a7StuLbfpm13a3sFbauu7XW0rYG2P65tT2t7K23r
oO3dtK2vtg/RtjHaPlnbZmn7Au2MZcHZ3zfSNY19dXD236N1SGN7R9vfC86+
XmiXxva+tu/D/MB2WNu/1rYftf2Ytp30rrSfrm15tP0ibbtc26/Wthu0vYS2
lQ4OV9OjW7RKY79H26ppe21te0jbG2lbM21/Ttte0E511bY+2j5Y20ZrpyYF
Z/+9aOc0zpip7S8HZ3/fUac0tqXavurdeH8A21pt36RtO7V9r7Z9op36StuO
aqd+17YcG6T9tA3x8oTtXG3Ph+nBdhnGw36VthXbEK0vtN+K8bDdpZ0qr21V
tb2WttXX9se07Sltbxmc/XmF9mls7bW9i7b11vZB2jZK2ydq24zgxP1U2OcH
Z3/fWbc0tiUb4uMJ7K8HJ76/DLa3gxO/twj7xhPz2yeNbUdw4vwJ9j14PrB9
rO1fatsP2qnftO1fPB/YT90obecEjxsb/uubxqkLte1S7dSVwYnvT4bt+o2Z
0fcZwH7Lxszo+/dgK7UxM/r+PNjLaVsVba+pbQ9ujNc/2BtiPGxNgxPfZwn7
s9r2vLZ31raXNmbGv6cX2wfGrxdtI7V9Ap4/bNO1fZ62vYrHh32ltq3R9g3a
tl3bd2vbR9r+hbZ9r+2/ats/2n7KJmk7W9sv0LaC2n6FthXVTt2sbXdqe1lt
q6zt92tbPW1/VDvjSW1voW3ttP3FTfH2B1svbR+gbSO0U+O1bdqm+PgB+1xt
W6ztr2nbW9r+rrZt2xQfz2DfpW2HtP1zbftO23/Rtr+1Pdd70pZb288PTnwf
EmyXaHvh4BPnI7Rdh/Gw36Rtd2B6sJu2VdL2+7TtAW1/JDhx/gfbE8GJ9/Nh
fyY4cT4MW1tt7xSceD8Ktp7a3l/bhmv7OG2bqp2ao22LtH2Ftrm2r9e2rdr+
obYd1PbPtO2Itv+sbX9pp07eLG1naXte7YwC2l5I267V9hs3Z0b3A2C7XdvL
aFtFba+xOTO6/wNbXW1/WNuaaHtzbWsTnLgfAHtHbeuh7f20bZi2j9W2Kdo+
W9sWavvy4Oz7ud3T2N7U9nXatkXbP9C2A9r+KZ4PbN9q+0/a9qe259wibWdq
+3nadnFw4v4V7BnBifuhsBXZEm+/sBffEm8/sJXU9ru17V5tr65tmdreQNsa
ByfuJ8L+tLa11vYO2tZd2/tq21BtH6NtKW2fpW2vaPsybXtD29/Rts3a/r62
7Q9OvP8L+2Ft+0bbf9S2P7T9pK3Sdoa259G2/Nqpy7XtGm2/Qdtu0/bSW+Pt
F7YK2l5N2+oEJ86fYH8oOPH5N9ge1/ZmmB5srbT9ha3x8Qy2btreR9uGnFge
/dLYR2vbZG2fqW0LtH1pcOL3r2BbvTUzun6Hfa22vaftO7Vtn7Z/om1fByfe
T4JTR7XtmLbn2JYZXY/Ddrq2nxuceP8Itou0/bJtx/e3fdLYrsZ42IsFJ67n
YSuxLd5+YL9L2+7B48NeVdtqa3t9bWuk7U/h+cP2nLa317au2t5b2wZr+yht
m6TtM7Tt5W3x/hf2Jdq2Stvf1rZN2r5D2/Zq+8fa9pW2/6Btv2v7v9p22nZp
P0fb8mn7pdp2lbZfr223anspbSuv7VW0rZa2P6htj2l7U21rqe3Pa1sX7dRL
2jZI20dq20Rtn7493p/CNl/bX9W217VTa7Rto7Zv17Y92v6Rtn2p7d9r22/a
/o+2nbpD2s/Wtgu1veCO+PgB25XaXlTbbtH2O4MT5x+wldP2ytpWE48Pez1t
a6jtT2rbs9reTts6a3svbRuo7SN2xPsD2CZo+zRtm6fti7Vtpba/pW0btH2b
tu3W9kPa9oW2f6dtv2r739p2yk5pz61tF2j7Jdp2hXbqOm27WdvvCE5cv8NW
VtsrBSfu/8J2P8bD/oC2PYrpwf6EtrXQ9rZ4fNheDE7cD4e9p7YNCE7c/4Z9
uLaN1/apeHzY5gYn7t/DvgjTg+01bXdte1fbt2rbLm0/qG2fByfux8F+RNt+
0fa/tC3X+9I5cmvb+dpeQNsKa/u12naTtt+ubabtFbXtPm2vq22PaHsTbXtG
29toWydt76Ft/bV9mLaN0/Yp2jZH2xdq2wptf1Pb1mv7Fm37UNsPaNtn2v6t
tv2s7X9q28kfSPuZ2pZX2y/WtkLaXkTbbtT2ktpWRtvv1bYa2p6pbQ9re2Nt
a67trbWto7Z317Z+2j5U28YGJ94/gz2lbbO1/RVtW67tb2jbOm3fHJx9vdsm
je0Dbd+vbZ9q+zfa9pO2/6FtOT+U9jO07Txtz69tGdp+jbYV1/bbtO3u4MT5
P+wVgrPPF5unsVXHeNjraFuD4MTnAWB/HPMP29Mn5qdTGnsrbeug7d20rS+e
D+xDtG2Mdmqyts3S9gXatkzbV2vbO9r+nra9f+L17JnGvu/D4/vbfmlsh7X9
6+DE+6mw/ajtx4IT9wNgO2lXfDyA/fRdmdH7r7Dl2RU/PuwX7YqfD2yXa/vV
2naDtpfQttLafo+2VdP22lh+sD2k7Y20rdmueP2D/bngxPv5sL2A1w/2rtrW
R9sHByfup8I2GuNhn6RtM7X9ZW1bqu2rtG2ttm/Stp3avndXvP+B7RNt/2pX
vP+H7ai2/65tOXZL+2nadu4JD0hjz6dtl+2O12fYr9odb4+wFQtulCf8xevM
NPZbg5sOPdKpTIlJaWx3BZ8+v2D9xqUmp7GX17aq2l5r9/HtZUYaW/3g+weO
bpG3x8I09sfwfGB7Kviam8IjLkljbxl8UdYCXZrG1j6428jy/Zt/MS+NvYu2
9cb8wD4o+L9//Oeco1PT2EYFT29Z+sxd01Jp7BOx/sE2Q9vna9sSbX9d297e
HW+/sG/Uth3avkfbPtb2L7XtB23/LTj778knp7H9e2J5TEhjP3WPtJ0TnP15
volp7Bdq26XafmVw9vnStDS264Nvyfovnf2W4KK98/23xaSzlcL0YC+35/jx
fHoaWxVtrxl8RdYE09keDN40pcKyn/5OZ28YHP6adlvh8WlsTYPnhrcb8oxJ
Y392z/H91cg0tueDs9+PmZrG3jn4nqwNfkoa20vaPjA4+/2SdLaRwdnfJ5DO
PkHbpmv7PG17VdtXatsabd8QvLN61h41jW178PbCYYWYn8a+O/jH8HLWm5PG
9tGe49v7gjT2L4LrHJ4x/r9Fnsb2ffAPs9ZVLdl3URr7r3vi4xFs/wS//UuR
BoPXLE1jP2Xvfx7z39HQNy5KYzs7OPt8a04a+wXaVjB4w387swLFX05jvyJ4
8JowQ4vT2IoGlwub077X0thvDs6TvcNMY7sz+NSsA+ryNPay2lZ57/HtZVEa
+/17j2+Pi9PY6p1YHq+lsT8afHlYHS5bmsb25InltTqNvUVw2+H5/9sjp7O1
Cy4Uvu3jyKo09heDnwunAy1Xp7H1Cv5vX//9rHWvp7EPCP6gfTjgrEpjGxGc
dTgquDKNfTymB9s0rA+wz90bbw+wLcZ42F/be3x/sCiN7a29x/eH6ezvatu2
vfH2D/uu4P8OJu+3/2pZGmcc2nv8eLQkjf3z4K3hdH58Ott3wf+9mP+9oq+m
sf+y9/jxNp3t7+D/dgb/HfHS2XPty/z/+ebiNLbcwWVKPLKycu509vODs89X
5qexXRJ8bYPwiqWzF94XHw9hu27f8fmdlsZ+U3DifAK2O048n6lp7BacOH+D
rVJw9u58ahr7fZgf2B7YlxmdD8H+SHDOrP9jVhrbE5h/2J8Jzpv1gDPT2Nru
i48nsHcKrpW1Qs9OY+sZ/HGHcMI1N429f3DifBC24Zgf2MdhecI2Nbh11gXp
jDT2OcGJ8znYFgXPDruTsgvT2Ffsi49nsHlw4noO9vX7jh+vFqSxbcXyg/3D
4KzdfbGpaWwH9x3f30xKY/9M247sy4zOn2D/eV9mdD4J21+YH9hP3h+/frCd
tT9eH2DPG5y4/wBbgf3x84G9kLZdi+nBfuP+46/3xDS22/cfP96NS2MvE5x9
P2Z8GltFjIe9hrbV1faH9x/fn05IY2ui7c21rU1w4noI9o7a1mN/ZnQ9C3s/
bRsWnLh+hX0sXk/Ypuw/vj9dn8Y+Ozj7flQ628IT69OCNPblJ/79K2lsbwZn
ne4eW5DGvi44cf4F25b9x/cXK9PYPwjOPt98J43tAOYH9k+DV7UJW/S6NLZv
g7MOV7VfTWP/KbhS1gwtSmP7Mzj7+6oWprHnPCBtZwbnyPovnf284MT1F2wX
B88MarUijT3jQLz/h61IcPbpwNw09uLBift5sJUMzr4enZ7Gfndw4voTtnsP
xMdj2KsHZ51uV52VxpaJ6cHeIDj7/ZbZaWyNg7Pvd6SzP30gMzp/ga11cPbf
G6SzdwhulrXCzUxj667tfbVtaHDi/AP2MdqWCk6cf8E+60B8PITtlQPx8RD2
Zdr2Bh4f9ncwHrbNmB/Y3w9OnA/Ath/jYT98YntNpbF9cyDef8P+Ix4ftj+0
/aSD8fKA7YyD8fKAPU9w4voBzsgfT4/2y4MT5zOwXaPtN2jbbdpeGs8HtgrB
iesp2KtpWx0sT9gfwuPD9nhw4v0L2JsFJ84/YWuF8bC/EJy4/wlbN23vo21D
MD+wjw7+OVzuX53ONjk4+37djDT2mVh+sC04GG9/sC/F/MO2GuNhX4vnA9t7
B+P9N+w7gxPvx8G2Lzj782rL0tg/wfOH7euDx/fHy9LYj2rbseBwND9wZTp7
jkOZ0f0U2E7X9nOD14fLyYZL09guOpQZ3U+B/bJDx9eXRWlsVwenwuyems5e
LDi8G3LBguVpbCWCE/cj4f/1dd9RUhRfG8dhEVTMoph1DZgw5+w1KyrGQUy4
ZsyoqKiYBSOigCCYVowgCALmdM05YY6kJe+yIGwOvO+dOb+Zut8z5/75Oc9U
d3V1d3V3dU+3HjAt48a/YDncnIxHwXpsbDnFnLtfU8x6Rmw5b5pfn7BegvKw
XG1Oxj9g7WfOdndrTy5iud2cjH/Beg/qA8tgc2E8kNbh0/LHm8lFXPaUXx+0
Po/tAZbx5uT6A9Yp0/L96cQilndj68fT/P4Py9fmetscPilmnWpOzt9h+TO2
zogt8zF/WBebk+sPWOqn5fujSUWsy8258cIJRSwrTg+tq8eWzuZkPBzWTab7
9oely3S//LDuMN33P7DsMd1vT7Duj/KwHGZOrt9g7Yblh+Xk2Hq6ObmeheVc
czIeB2tvc3I9D5f28b+n9QZz7nx2fBHLbeYPrTdYWsw60Jwbr3iliOUhTA/W
R825+0HjilieRHlYnzMn17+wjMP0YJ0cW94xJ/cDYP0otnwVW380J+OxsPxh
zo3HFbNON2cPBxcUs8wz58azilmrzcn1OFxWZy5cL9PaOj3jrj9h6TAj484f
YV3NnDw/Bcu6sXXj2LKVORnPgLWrObn+hmX32LoflgeWQ2f49oD1GHM3O53s
PKaI5SRzcj8b1p6xpcycG28dW8R6sTm7u/YqZrnKnIz/w3q9ORl/geVWc8fs
CeeLRawD0J6wDEJ9YB2G9oPlidj6rDkZD4Pl5dg6Kba8HVs/RHvC8iXKw/qD
ORkPg+V382i7nfTzS0Ws02b4/gCWuTN8fwLrItQHllqsP1hbUB6W9jND66qx
ZZ2Zvv6wbjTT96ewbGnOHg76Tyhi3X6mP/7Csps5OX+FdV+Uh+UQc3L/Gdaj
Y8uJWB5YT5vp1z8s58TWi2b67ReWK2f69Q/rdbHlFqxPWO9GfWB5EMsP61Bs
D7A8junBOhrlYRkbW181J89zwfIW6g+rxpYvsD5g/T62/IbtCdZ/zcn5Ayxz
YmvVTH/8hqUmtjabk+cpYVlhVsbdf4d1FXNy/x2WTubkeUxYN4wtW8TW7Wb5
+sOyqzm5/wLrPubkeQxYJLYeNcsfv2E5AfWBtQeWB5Ze5uR8CNYLzcn4GSxX
xNa+5mT8G5b+5mT8Gda7UB6WB8zJeCisQzA9WEahPWB9xpzcf4JljDkZv4R1
4ix/PIflzdj6gTm5noPl81m+P4b1u1m+P4PlV3NyPQPrP7N8fwLL7NhaaU7G
T2BZNsv3Z7A2mZPzYVjaVWT+97znmCLWjhW+PCxrx9YNMD1YNq/w9Yd12wp/
PIRllwq//mDdO7YcHFuPNCfnn7B0j62Z2HJ2hT9+wHpBbLm8wu9PsF4bu/Rm
c+F6l9Y7K3z/CZfeX+H2N1ofiS0jY2t5bHkptk6ILW/E1vdjy2ex9dvY8kts
/Tu2VJiT6z9YF8aWpbG1MbaUzA6tK8eWtWb75YF1fZSHpRTlYd0mtuw82++P
sO4VWw6KrUfEluNj66mx5azYen5suSy2XjPb7/+w3GROnmeB9Q5zMv4Iy33m
ZDwH1oex/mF5bLY//sD6NJYHlhcxPVhfiS2vx9b3zMn5DCyfojys38z2x09Y
fkZ5WP8yJ9dPsMwyJ+czsC4wJ+cjsPxnTs5/YG3A/GFpO8dPD9aV5vjysKyJ
8rCuF1s2m+OXH9atzcn9EFh2Mifnk7DuienBcmBsPXyOb09YjjMn50+wnhJb
zoyt55mT8QBYLkX9Yb0a5WG5EfOH9XaUh+Xe2Do4toyIrU/Flhdi63hzcv4K
y2tzfP8F67ux5ZPY+nVs+Sm2/hm7dGZsnR9blsTW+tjSZm5oXXGu339gWWOu
Xx+wdo4tm8bWLrFlx7m+P4N1j7l+e4LlAHNy/QLrYSgPy7HmZDwO1pPNyf1o
WM4wp///9y4/d6473tFyiTl3v+r1ItY+5uT5ZVj6Yf6w3mbOvY+0mOUec/L/
E1gfmuv7f1iGm5P737A+GVueR31gHRdbpsTWd2LLx+bk+RFYv4otU2PrH7Fl
RmydF1sWY/3DWoflh2V5bO0wz2//sKweW9eNLZvE1q3Myf0UWHaIrbvHlv1j
66Hm5PkNWLqZk+c3YD0J5WE5HfOHtcyc+7/s+CKW3uZk/BvWq+Zl3P1wWG6I
rbfGloGxdVBseTS2PhFbnjPnntcsZn3ZnNyPh2VybH07tnwUW7+MLT/G1t9j
y/TYOje2VMfW2tjSak7u58Pafn5oWS22rmNOrv9g2dicnP/AumVs6WpOrr9h
3c18Q/aB3ClFLPvF1kNiyzHm5HlWWE+MLT3Nyf0sWM+JLRfP9/0HrFfO9/0x
LNfP9/0ZrLfM9/0ZXDrAXLjfTuuD5uT8AZZhmD+sj2P+sDzr50frWMwflknm
5HwI1rfMyf0LWD6MrV/Elh9i62+xZVpsnRNbFsXWmtjSYk7OP2BdYUHGnf/A
suoCvz3C2smcnM/DspE5uR6CdYvYsr05uX6HdVdzMv4Gy74oD6ugPCxHm5Pn
r2A9IbactsAfT2HtFVsuiq1XxJbrUB9Y+5uT8VRY7o6tDyzw/R8sQ2PrqNgy
OraOiS2vmpPxI1jfNCfnk7CoOXn+GtbPzcl4HCzfm5PrYVh/NSf332D5F/sD
rLPNyfU8LFXYnmFdZk7+/wVLszn9/7+3tlvoy8OyysKM+z8SrGvHlg3Nyf+R
YN3cnP7/31u2W5hx7x+EdRdzcv4Fyz7m5P1fsB68ML8/jShiOSq2djfnxiuK
WXqYk//fwXq2OXkeBZYLzcnzL7BevtD3H7D0NSfvM4H15thylzl5fgXW+83J
8yOwDMH6g3VkbHkG2w+sL2H7g2VibH0jtnwQWz8zJ8/jwPKdOfn/K6y/YHlg
+QfrA9YK1AeWStQH1qXY/2Bpiq0llRn3/A8sHSv98sO6ljl5HgiWDWJrqTl5
/w8s21b67QnWnSt9fwjL3pV+fcB6UKVvf1iONOfO58qLWI83J89TwZKJrWeh
PrBcgPaH9bLYcm1svanS91+w3Fnp+wNY78P2A8sjsfWxSt+fwlKO+cP6YmyZ
EFtfr/THT1jeR/vB+mls+Ta2/hxb/kZ9YJ2F7QmWhbH1v9jSGFvbVoWWlav8
/gjrmrFl/SrfH8C6WWzZJrbuFFv2MifvU4D1wNhyRJXvT2A9LracWuX7A1jP
RHlYzjcn40+wXmpOzgdguSa23hhb7oit95qT59FgedicPI8C6whzcv4Oy9No
P1hfMOeux8uLWF6p8v0hrK+Zk/M5WN5DeVg/iS3fmJPnl2H9CfOH5a/YOrPK
9yewLIitS6p8/wVLQ2xtsyi0rGRO7v/AuoY5Gf+AZT1zcv8U1k0X+f4Hlq3N
yfU7rDuak/N3WPY0J+P3sB5gTq5/YDkc5WE91pz8nwCWU2LrGebkfAyW82Lr
JbHl6tjaL7bcbk7On2G9x5ycT8AyOLYONyfnH7A8Zc4dDkYVsT4fW8abc+Pt
I4tYp8SWd2Prx7Hl69g61Zx7nqyY5c9F+f72sSLWGYX9YUQRy3xz8j4+WBfH
lnrsv7AuR/8By4rVfn+GdfXY0rnaHz9g3QTlYekSW3cwJ9czsOxhTq4/YN3f
nIy/wXKYObn/AWu32HKyORmPg/X0at9/wXJute+/YO1d7Y/fsPSJrTeYk/FQ
WG5DeVgHmpPnh2F5yJzcj4P10djyJNoD1uew/mAZV+37I1gnV/vtH5Z30B6w
foT1D8tX5uT+Baw/Vmfc86iw/BFbp8eWebG1OrbUxdbW2NJhcWhdLbasG1s3
ji1bxdausWX32LpfbDk0th4TW06KrT1jS1lsvTi2XBVbr48tt8bWAbFlUGwd
FlueiK3PxpaXY+uk2PJ2bP0wdtmXi11/QesP5uT+Jyy/m5P/k8NtZpoL5+O0
zF3sjz+wLoottbG1JXZZ+yWhddXYso45uf6DdaMlvv+GZcvY07ePLbvF1n3N
yfXFIebk/tjR5vT//N56GvJzkF+E/Epz8v6Z67zlFuR3m5PrwQe9dai58L6d
ssfNyfNoozH9sZj+q+bk/y5vmZP7k7rEHz+/8Nbvzcn3Ln4zZ4ePfsi+3+rf
JZn0fXVlc8zJ+8+qzLnP3WTfl1bjrc3eZe3/8/kq3tIJ+YbIt0C+HfJdke+D
XJAfhfwE5D2Q90J+IfIrzMn3Ffoi74/ydyF/APkQ5KMw/We8ZQzyicjfRP4B
8s+Rf4f8V+T/eE+fjbzS3LXwPYpl3tqE6bdb6pe/o7nwvumyTubc9XM232Bp
vj/Ivt9wc2/dFvku5uT9jXsv9fM/eGn++JH9vsuR5iOzL+zLfv+l+9J8f5B9
X3cG+dneesHSfH+U/R7K5ebc9WX2eynXmrtnB2yy76e+2dxqw9e7Zt9Pfac5
u7uVZMvfb849f6OWP+ItI8258alsXm6+wnbfqdn3g48xd8l+ICdb/wnm3PV0
tvwb5tz1Sbb8++bc9V42/8ycuz2d/V7Pt+bkey+/+Prq3+bc8w7ZvMKce/4g
2z4LfXuVLUXeWKhPtn1Klv2/s93jgdn3n6/sLWshX3+ZX/+l5uR7f9sg39lb
90J+0DK//R7hLcebk/drnuotZyE/35x8r+oyb70G078J87/Du+y+ZX7/eNic
vL/wsWUZ9/zW0+bk+vpFc/I+nVfMyfvoXvfW98zJ+/4+NefGF7LHh2/MyfsD
fzYn71v8y5ycb83y1gXL/PHrP3PyvE0D8rY1Gfc84Urm5HnENb11Pe+yzWr8
8XfrGt8+O9X49tnTnDwfeWBNxj1fc7i3HIf8lJqMO789sybj7i+cZy48r1R2
qTl5fu1qb7nRT09vNyfjCfdi+oO9ZYT/vT6F/AWUH28u/N+m7DWUf9ec/B/p
E3Ny/vh1TcaNr/5kTsYX/qzJuPsRM711fk3Gja8uqcm4+wv1fn6lbWp9/Vas
9cu3Rq1rb+1sTp4/3dScnF91MSfnXzuak/O7PWoz/v9U5uT7Y4eZk/8HHVvr
j38n1/r964xa1556rjl5v+MltRl3f6JPrdtfpJ+vj97mpyf3mJPxoIdqM+n5
dtlw5E/W+u37ebTvOHNyP2KKObl/8Y45GR/6uDbjng/5ylum1mbceOUftZl0
PLJshrfO85bFyOuQL6/NuPuxHerc/GT1Ol+/desy/vuadRn3PZKt6tz0ZAc/
Pd0d+f7eeijybn5+epI5Ga8+3Zzcjy2ry7j74b3Nyfj7VX555AbU71bkA7H8
g9A+j6L+T5iT78k8h/m/XJdx9ysm1+W3z+x4/Nve8lFdxj0v96W3/Ohd/jvy
6ebc9e1wKz8XeXVdxt1PqPWWVuTt6zP/u59t05PVvHWd+vz+MszyjZFvaU6+
F9rVW3erz/df2fL71ef7v6GWH2LOjbc+Yvkx5tz13BDLT6zP96dm6VmfP/4+
bPk59fn1Ndjyi+vzx9NsfqX/vVzvf6+3oPwAlH/QnHzPelh9xn2/+vH6/PY8
yPJnvXUsyk/y1rdQ/kNM/wtv+QH5b8in1fv+cY65cL+nbJE5OT+oKdQn2/+3
1Pvj8woN/viyaoM/vnVq8Pv3RoXfZ+9vbdHg9hfZvsHv/7s2uP5G9m3IuOcJ
pMHvP0d76wkNbn+Q07y1V4PvXy5q8Ov3iga//V/nrf0b/PZ9d0O+f7LtVR/w
05OhDfn98R7LRxWW/z7LRxfa517Lx3jLqw357f9Oy98szO8Oy7Uwv9st/9y3
R9n3Db5/+7XB73//Nrj9TWc3+P6tyq8vXeZ/L82F9h1oebvGfPsMsHyVRr/9
r93ol29Db90c+XaNvv12aXTtIft468GNvn2Paswv792Wd2/0+3cPbz0b5S80
555vu8vyyxv98vdt9PvfzVj+u7D89zf6/X8Ilm8k8mcw/Ze8yyY2+vZ/w89P
Pmj02+dnjb7/+87XV38p/D67ff3j20MrsHyVqP9Sc3L+0VT4fbb/L2ny21/H
Jl+/tZp8/7NBU8adX5Wak/vp2za59tKdzcnzDns3uf5ED/KWI5Ef3+SPnxlv
PQv1v6DJbz+XNfn+91pvvanJHz/vbPLtd1+T3/4e8dbHmvz+UY78ReQTkL+O
+r/f5I6n+mlTfnu347F82+S335+bfP/2t7fOQr4Q+X+oX6O3tm32+/fKzX7/
WxP5+sg38y7dBvlO3rKXn54eiOkfgfLHNbv9TU5t9uvvTG85v9nvX5d6yzXI
b2z2+98dyO9t9u33sLeOQP60r6++gPq/gvw15O8h/wT5N76++lOzOx7JX946
szl/PLrV8gXeugTlG8y504mbLG/T4suv5F2+Rku+P+hv+Xot+fboZ+U39Zat
W/z0d8T09/TWA5Af7uenxyI/BfkZqN95hfnfb/klLX79Xd3ij1/9/O/ldpS/
p8Vv34O9dXiLX39Ptfj+4XlvGY/pT8H830X+cYvfvr9G/aeifn+2+P1nBuo3
H/Vf3OL3z3o/P12O8iu2+nz1Vje/0s6tfvqbtPryXVp9++zgy8serX7/27/V
1+8wb+2G/GTkpyM/t9VvP729pQ/yG7xLb0M+EOUfQv4o8ie9y59DPg7lJyN/
B/lHyL9C/qNfH/IH2mc62mdeYX1db3m1t9Qhb0XeYbnPV/OWdZFvvNz3T1st
9/Xvutz1J7L78nx9r7F8v+Wufyg91FuPwfRPWu77157eUob8YpS/CtO/3ltu
RT4A0x+E6Q9D/gTyZzH9l319dBLa922074fL8/1FX8u/9NYfkP9eaP/LLZ/m
LXORL8L8a7F+WrylfZseLl/VnEx/HW/dCPmWyLdHvhvyfZEfYk6W/2hvORH5
acjPQX4R8iu9y6/zyyu3YPnvRv0eRP2HIn8c+WjkY5G/ak6Oz28hV3Oy/r5A
/b5H/X/zv9d/kc9BXoX61WD6zWi/Fdr69l3FWzoh3xD5Fubc/tHH8u28S3dF
vo+3SNt8e/W2/ChvOaEwvwss7+EtvZBfiPwK7/K+yPsX6lNm5e/ylgcw/SEo
P8r/vvwZlB+DfCLyNzH/D5B/jvw75L+iff9B+85GXtnWbx/L2vrto8lb2pX4
7bdjic/XLvHrb4MSP//N/e912xK//ezirXuX+P3jYHPSvx9ZmH72+NDd/14z
KH92oX7Z8+cLSvz6u7zEt++13nIz8juR34/lfwTTH+mt5chfQvkJvr3lDd+e
+j7a/zPk36L9f0H+t5+fVGD5FmL5liJvLJTvaXlJO2dd2VvWQr4+8lLk27Tz
89/ZW/dC+YNQ/gjkxxfKi+WnFnyi5Wd56/nIL0N+DaZ/E+Z/B/L72vn1+3A7
v/4fQ/2eRv6it76C/HXk7yH/FPk3aN+fMf+/vGUW8gXI/0PegLztCj5fyVvW
RL6ed+lmyLdG+Z2Q74n8QOSHIz8O+SnIz0R+HvJLkV+N/EbktyO/F/lg5COQ
P4X8BeTjkb+G/F3knyD/GvlPyP9EPhP5fORLkNcjb9Pe5yt6yxrIOyPfFHkX
5Dsi3wP5AcgPQ34s8pORn4H8XOSXIO+DvB/y25Dfg/wh5MORP4n8eeTjkE9B
/g7yj5F/hXwq8j+Qz0A+D/li5HXIlyPv0MHnq3vrusg3Qb4V8h2Q7458f+SH
Iu+G/CTkpyMvQ94b+VXIb0B+K/KByAchfxT5E8ifQ/4y8snI30b+EfIvkf+I
/Hfk05HPRV6NvBZ5K/L2K/p8NW9dB/nGyLdE3hX5bsj3Q34I8mOQn4i8J/Jz
kF+M/Erk1yO/BfkA5A8iH4b8ceTPIh+LfBLyt5B/iPwL5D94l/+GfBrKz0G+
CHkN8hbkK6zk81W9tRPyjZBvgXx75Lsi3xe5ID8a+QnIT0PeC/lFyK9Afh3y
/sjvRv4A8qHIRyEfjXwM8leRv4lckX+O/HvkvyL/F/ls5FXIlyFvRt5uZZ+v
4q1rI98Q+ebIt0O+C/J9kB+M/Cjk3ZH3QH428guRX468L/Kbkd+F/H7kQ5CP
RP4M8peQT0T+BvIPkH+G/DvkvyD/B3kF8krkS5E3IS/p6POO3roW8g2QlyLf
FvnOqf8PtO2MDA==
          "]]}, Annotation[#, "Charting`Private`Tag#5"]& ], 
       TagBox[{
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         PointBox[CompressedData["
1:eJx83XWUVeX7v3Fsxe7WsbsTBLlpEAUBB0VQaekuQUElxASxsY4CCoqEgIDU
DUh3p6Td3X78/Z6Z9YV9X2vW239cr3XNs/vsvc8+Z4YzGrWr1XTvYsWKdTy/
WLH0/2LFGqy4Jv/bst/UnHxav69XlilWzNdH2zb0z9C/Q/8V/V/0fa+N/ZBo
Pxr9ZPQz0S9EvwK9RHKVHT2OGV25oFu0VUGvgX47+t3ozdDbJP92fv2Bs39d
kXqXaL8f4/ti/OPoz2D8EEz/TfSR6OPQJ6M7+nz05ejr0Leif4r+LfovyT3/
/9rt6PFR6v8kF6zujkWp73Nd7AdfF/tRyUNeSv8tTP2k5KVLCv5L/YzkDqWL
rx/afmnqFyQXTO6YZalfHm3Xo5dBr4xeHdOvg/nfFW1N0VtjfOdo74neB/0x
9MHoL6G/gT4CfSz6JPSZ6PPQl6GvRf8Y/RP0b9B/Rv8bfe/rYy8e7Uein4ie
h34++mXo16HfiF4J/Rb0fPT66E3QW6F3Qu+B/jD6o+hPo7+InkN/G30M+gfo
M9Dnoi9FX4O+BX1XdN7X6D9dH19ff0X7XiViPyjaj0A/Af109PPQL0W/Fr00
esXo3M3ot2F8PfTG6C3RO6Lfh/4Q+gD0QckXpNPz+QX9BfTXMf4t9NHoE5Nr
pctvzYLz//TkAk4uOH9+lHxVwX+rU1+SXLB7S69KfXW0bS4Rr+87S+w+/xdc
H7+K9h/jz+f9ifHFSgbbgSXj/A+PtuPjz+dOw/hzo/0S9GvQSyWfnjbHaWtT
r1By9/Zbk3q1aKtdcvf1sKDfid4I41vEn7cOJXfv34LePTmtXfH1Bdv/wWh/
BH0g+vPoryUXrE6/gj68ZNy/76FPiMtj07B8c9AXo69C34S+A/1L9B/Q/0D/
D/2AG2I/LNqOSy68P1iX+qnJc35NNzwF+/cc9Iuj7er4835DdF559JswvlZ0
ri56Q/Tm6O2xfN3Qe6P3R38K/bkb4vH96g3x+BwWbaPQx6NPRZ+Nvgh9JfpG
9O3oX6B/j/47+v/Q9y8V+6HRdiz6Kehnl4qv74ui7Sr0kqXi8Vcu2quWiq/P
mtF+B3oDTP9ezL8delf0Xuj90J9Efxb9FfSh6O+iv4/+Ifos9IXoK9A3oG9D
/xz9O/Tf0P9F36907IdE2zHoJ6OfVTru3wuj7crScf+WKB3Ot1Y2ufD9U8H1
rQrG34rp345+D3oz9LboXdAfQO+L/gT6M+gvo7+J/g7Wf1y0TUF39AXoy6Pz
1qNvxfjP0L9F/zXuD/8H+2ffG8P10g+OtqNvjPvvpGg7E/0C9CvQr0e35LQ1
6w8s6JWTM/c/NaK9Dvrd6E3R26B3Rr8fvQ/64+iD0Yegv4E+En0s+mT0mdg+
87F9lkXbOmzfjzH9TzH9b5Iz94e/JGfuX/+OztunTOzFo+0o9BOTM8+PzkjO
PH85P9ouR78O0y+D6VdCr46ej34Xpt8E82+N3gm9Z1yf3MPoj2H802Xi/nmp
THx95aJtBMaPSc68f5kU7TPQ56EvRV+LvgX9E/Sv0X9G/wt9b4v9oGg7Ev0E
9LzkgkfBxQr6edF2GcZfi/E3oldEvwX9NvT66I3RW1nY/94x2nqgP4T+KPqg
5ILLR/3lqb8Y7a+jv23x9Ts62j5An27x+Job7UuwfmssXh822+7jcUPquyxe
/75KLnweUnB//VNy4fvrran/mVy88AKU+l5lg/3AaDsC/Xj009HPLbt7+xT0
S6P9mrK7j5+C5S8d7RXQb0avjV6vbNge3gi9JcZ3QL8P/cGyu7d/QR+APhDj
X0B/LblZwX8F73/eQn8vueDt0OiC7TMx2qehf4S+GH01+ib0ndj+X2L//Ij+
B3qxcnH6B0Tb4ejHoZ+Gfg76JehXo5cqF/dv+Wirhl4L/U70hugt0Nujd08e
lo7uoQW9N/ojGP8U+vPor8bp2XBMfxT6BPSp6HPK7T4/bE59Ubnd55NkWxXt
G8vF43tHtH+B/gP67+j/Ref2Lx/332Hl4/F/bLSdin52dN7F6Fdh/A1xfl4O
878JvSZ63eTM84kG0dYcvR16N/Re6P3Lh/OBPxltz6G/gj4M/V1Mfzzm/2H5
eP6fnVx4P7kx9YXRthJ9Q/l4fG0vH/f/59h+32P+v2H+/0ve87zH96sQrld2
aHLm/dExyZnnH6dUiOPPQr8oOfP++EpMv2S0l43zs6qY/63od1SI1+d7kjP3
//dGe1v0rugPoPdLzrx/eCI5c//wbIX88Hz45Wgbmpy5v34n2t5Hn4I+q0J+
uL9dUGH3/i+4/1gR7evRt6F/hv4dpv9r3J72b1xf37di/v/drxQc34dE+9EV
4/Y5OdrPrBi2p10Y7Vegl0A3zL9Kxbh+NaLtdvS7K4b1tWbR3iY5c//ZJdrv
R++L/njFuP+eqRiPjyHR9mb8eR+JPg7LPxnr5+jzMf/lmP66ivnh/nVrtH+K
/i2m/wv6P+j7VIrLd3CluH2PqhS330nRfkaluP4XVIrLf3m0XY9eBuMrR3t1
9DqY/11xea0plr91pfzw+VnnSvnh882e6H0q7T6/FXy+9li0DU4uvD9YnPpL
6G9g/Ij48zYWfRLGz0Sfh76sUn74fsbaSrtfr8n2cVwf/wTr9w36z+h/Y/32
rrz7+FmQevFoP7JyXL4Toz2vcpz++dF+Gfp1GH8jpl8J/Rb0fPT66E3QW1WO
+6dTtPdAfxj9UfSnMf0XsX459LexfGPQP0CfgT4XfSn6GizflsrhePFdlcPx
ZF+j/1R59+upYP//Fe17VYnHx0FVYj8i2k5APx39PPRL0a9FL10lrl/FKnH9
b46229DroTdGb4neMc7P78P8H0rOPN8YEG2DqsTz7wvR9jr6W1XC+cpGV4mv
n4lYvulY/o/iz9sSjF+N6W+O9p0Y/xXG/4j5/4n5F6sa+4HR2w9HPz7aT0M/
F/0S9GvQS6FXQK+GXhv9TvRG6C3QO6B3rxqPjwej/RH0gVXj+f35qvH8/hr6
8Gh7D30C+jT0OeiL0Vehb8Ly76gaj58vo3M/oP8R7f+hH3BT7IdF23Hop6Kf
g34x+tXJme/H3BBt5dFvSs58P7FWtNdFb4jePDqvPXo3jO+N3h/9KfTn0F/F
8g/D+o1CH4/xUzH92eiLonMrMf2NN8Xz3/Zo+wLz/x7jf8f8/4e+f7U4/tBq
cf8eG+2noJ+NfhH6VdXi/EtGWzn0qug10e9Ab4B+L3o79K7ovbD8/bD8T6I/
i/4K+lD0d9HfR/8QfRb6QvQV6BuqxevHtmj7HOv/Hdb/N0z/X0x/v5tjPyTa
jkE/Gf0s9AvRr0QvgV4WvQr6rei3o9+D3gy9LXoX9AfQ+6I/gf4M+svob6K/
gz4OfQq63xz334LkzOdfy2+Or+/10b4V4z+L9m/Rf0X/B33fW2I/ONqOQT8J
/Uz0C9CvQL8e3dAro9dAr4N+N3pT9DbondHvR++D/jj64Fvi/h0S7W+gj0Qf
iz4ZfSb6fPRl6OvQP0b/FP0b9F/Q/0bfp3rsxaPtKPQT0c+oHrff+dF2Ofp1
6GXQK6FXR89Hvwu9CXpr9E7oPdEfrh6v349Vj6/Pp6PtJfQcpj8CfQzGT4rz
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
1zD/4Vi+99AnoE9Dn4O+GH0V+ib0Hehfov+A/kdy5v3xf9F2QP/YD4u249BP
RT8H/WL0q9FvQC+PfhN6LfS66A3Rm6O3R++G3hu9f/+4/Z6K9ucw/tX+8fU1
LNpG9Y+vj/GY/lTMfzamvwh9JfpG9O3oX6B/H5fHfsfy/Q/j938kjj802o5F
PwX9bPSL0K9CL4leDr0qek30Ox6J54cG0X4vejv0rui90PuhP4n+LPor6EPR
30V/H/1D9FnoC9FXoG9A34b+Ofp36L+h/4u+34DYD4m2Y9BPRj8L/cLoB69E
L4HxZdGroN+Kfjv6PejN0Nuid0F/YEB8/fdNznx/+Ylof2ZAvL6+PCBcz/3N
aHsHfRz6FHRHX4C+HH19cub+bGu0fYb+Lfqv6P+g7/to7AdH29HJmfubk6Lt
TPQL0K9Avx7d0Cuj10jOvH+vg+W7G8vfNDnz/qJNtHdGvx+9D/rj6IPRh2D5
3ng0Hl8jo3Nj0SdH+0z0+ejL0Ndh+T5Ozry/+DTav0H/Bf1v9H0ei734Y3H+
R0X7iehnROfOR79c26/TtjLaXknbqmt7vrbdpe1NtK21tnfStp7a/rC2Pabt
T2vbS9qeeywen7CN0PYx2jZJOzdD2+Zp+1Ic/7Ct1fYt2vaJtn+tbT9r+1/a
tvfj8XwL+0HadqS2n6Btedp+XnLm/he2y7T92uTs34+Ithu1vaK23aLtt2lb
fW1vrG2ttL2jtvXQ9oe07VFtH6RtL2r769r2traP1rYPtH26dt5cbV+ibWu0
fbO27dL2r7TtJ23/U9v2ekLaD9S2I7T9eG07XdvP1bZLtf0abSut7RW07WZt
r61t9bS9kba11PYO2naftj+obQO0faC2vaDtr2nbW9r+nrZN1PZp2vaRti/W
ttXavknbdmr7l9r2o7b/oW3FnpT2A7TtcG0/TttO0/ZztO0Sbb9a20ppe3lt
q6bttbTtTm1vqG0ttL29tnXX9t7a9oi2P6Vtz2v7q9o2XNtHaduE5MzzHtin
JmeeX8E2R9sXJWeej8O2Sts3atsObf8C6wPbD9r+O6YH23/avv9T0naYth+r
bac+Ffcn7Gdr28Xauau07QZtL6dtNyVnnnfCXlPb6iZnv+8Y7Q20rbm2t9O2
btreS9v6a/uT2vactr+ibcO0/V1tG6/tH2rbbG1fqG0rtX2Dtm3X9s+17Xtt
/03b/qft+w2UtkO1/RhtO0Xbz9K2i7T9Sm0rqe1lta2qtt86MF6PYLtD2+8Z
GM8/sN2r7W21rau2P5CceR4IW7/kzPM02J/Qtme1/eWB8XoI29DkzPMz2N/B
9oTtfW2fom2ztH2Btq3Q9vXatg37D/bPtO077E/Yf9W2f7V930Fxf8J2iLYf
rW0na+fO1LYLtf0KbSuh7aZtVQbF4xn2Gtp2u7bfrW3NtL2NtnXR9vu1ra+2
P65tz2j7EG17E/sD9pHaNm5QPP/APlnbXNvna9tybV+nbVu1/VOsP2zfavsv
g+L5ALZ/tH2fp6Xt4OTM991hPyo583kcbCdp+xnadoG2X65t12t7GW2rrO3V
ta2Ott+lbU21vbW2dX46Hj+w98T+h60PxsP+mLYN1vaXtO2Np+PrB/YR2jZW
2ydp20xtn6dty7R9rbZ9rO2faNs32v6ztv2dnP17hdG+92BpK67tR2rbidqe
p23na/tl2nadtt84OG4/2CoNjq8n2G/B9GDL1/b62tZE21sNjq8/2DphPOw9
tO1hbX9U257W9he1Laftb2vbGG3/QNtmaPtcbVuq7Wu0bYu279K2r7VzP2nb
X9q+1zPSdpC2H/FMvP7BdoK2n65t52n7pdp2rbaX1raK2n6ztt2m7fWSM/dz
sDXW9pba1lHb70vO/P4ebA9p+wBtG6TtL2jb69r+lraNTi78fZKi7BO1bbq2
f4TtCduS5MzvQ8K+Wts2a/tObfsK2wP2H5Mzv98J25/aXuxZaTtQ2w/XtuO1
/TRtO1fbL9G2a7S9lLZV0PZq2lZb2+/Utkba3kLbOmh7d217UNsf0baB2v68
tr2m7cO17T1tn6Bt07R9jrYt1vZV2rZJ23do25fa/oO2/aHt/2nbAc9J+2Ha
dpy2n6pt52j7xdp2tbbfoJ1XXttv0rZa2l5X2xpqe3Nta6/t3bStt7b317an
tP05bXtV24dp2yhtH69tU7V9trYt0vaV2rZR27cn99vz9/Vg+0Lbv9e237X9
f9q2//PSfqi2Havtp2jb2dp+kbZdpe0lta2ctlfVtprafoe2NdD2e7WtnbZ3
1bZe2t5P257U9me17RVtH6pt72r7+9r2obbP0raF2r5C2zZo+zZt+1zbv9O2
37Rz/ybv+XuntO33grQfom3HaPvJ2naWtl+obVdqewltK6vtVbTtVm2/Xdvu
0fZm2tZW27to2wPa3lfbntD2Z7Tt5eTC7/OtKcL+pra9k5z5e8Kwj9O2KVge
2F3bFmj7cm1br+1bte0zbf9W237V9n+0bd8Xpf1gbTta20/StjO1/QJtu0Lb
r9c20/bKL8bjD7Ya2l5H2+7W9qbJmX8/CLY22t45OfPvg8B59yfv+fdBaO+j
bY9r+2BtG6Ltb2jbyLg+tI/VtsnJmX8vCfaZ2nnztX2Ztq3T9o+17VNt/0bb
ftH2v7Vtn5ekvbi2HaXtJ2rbGdp+vrZdru3XaVsZba+kbdW1PV/b7tL2JtrW
Wts7aVtPbX9Y2x7T9qe17SVtz2nbCG0f81I8/8A2SdtnaNs8bV+qbWu1fYu2
faLtX2vbz9r+V3Lm/g+2vYdI+0HaduSQeP2D/YTkwu+DF2XLw3jYz8N42C7T
9mu17cYhcfvBXjG5Z8GANUXYbtH225Iz9xOw1df2xtrWSts7alsPbX9I2x7V
9kHa9qK2v65tb2v7aG37QNuna9tcbV+ibWu0fTNef7Dt0vavtO0nbf9T2/Z6
WdoP1LYjtHPHa9vp2n6utl2q7ddoW2ltr6BtN2t7bW2r93I8f8HeCONha6nt
HbTtPm1/UNsGaPtAbXtB21/Ttre0/T1tm6jt07TtI21frG2rtX2Ttu3U9i+1
7Udt/0Pbir0i7Qdo2+Hafpy2nabt52jbJdp+tbaV0vby2lZN22tp253auYba
1kLb22tbd23vrW2PaPtT2va8tr+qbcO1fVRy5n4QtgnaPlXb5mj7olfi9QC2
VVh+2Ddq2w5t/0LbftD237H8cN5/2r7/q/nh+RNsh2n7sdp2qrafrW0Xa/tV
2naDtpfTtpuSM++/Ya+pbXW1vYG2Ndf2dtrWTdt7aVt/bX9S257T9le0bZi2
v6tt47X9w+TM+1/YZmv7Qm1bifnDvkHbtr8aX/+wf65t32v7b9r2P23f7zVp
O1Tbj9G2U7T9LG27SNuv1LaS2l5W26pq527Vtju0/R5tu1fb22pbV21/QNv6
afsT2vastr+sbUO1/R1tez858/wB9inaNkvbF2jbCm1fn5z5PBC2bdr+mbZ9
l5z5/hrsv2rbv9q+7+vSdoi2H61tJ2v7mdp2obZfkZz5/gxsJbTdtK2KttfQ
ttux/LDfrW3NtL2NtnXR9vu1ra+2P65tz2j7EG17Uzs3UtvGaftkbXNtn4/9
D9tybV+nbVu1/VNt+/b1eD6B/Rdt+0fb98lJ28HafpS2naTtZ2jbBdp+ubZd
r+1ltK2ytlfXtjrafpe2NdX21trWORevf7D31LY+2v6Ytg3W9pe07Y1cfD3A
PkLbxmr7JGw/2GZq+zxtW6bta7XtY23/RNu+0fafte1vbd/7DWkrru1HatuJ
2p6nbedr+2VvxOMBtuuSM/ezsN+obZW0/RZty9f2+trWRNtbaVsnbe+hbQ9j
+8P+qLY9re0valtO29/WtjHa/oG2zdD2udq2VNvXaNuW5Mzv38K+C8c/bF9r
+0/a9pe27/WmtB2UnHmeCPsR2nZCcuZ5NOynJ2e+DwLbedp+qbZdq50rrW0V
tf1mrD9st70ZX4+w19O2xpgenGsZtydtHbX9Pm17KLngdqD++iLsA5ILHheO
Lso2CONhfyG5eOELpgjb69r+VnLBn3uZvK4I22htn4jpwTZd2z/C+sC2RNtX
Y/vBtjk58zwW9p1YH9i+0vYfsTyw/YnxsBcbGsfDdqC2H65tx2v7adp27tC4
/2C/RNuuGRr3B+yltK2CtlfTttrafqe2NcL2gL0F1h+2Dpge7N2HxuMBtgcx
PdgfwfRgG4jpwf58cuHfO9xQhO01bR+O5YHtPWw/2Cdo2zRtn5Nc+PeqNhRh
W4zxsK/Stk3avkPbvtT2H7TtD23/T9sOGCbth2nbcdp+6rB4/YPtnGHxegz7
xdp29bB4/ob9Bm0rn5y5/4D9Jm2rpe11ta2htjfXtvba3k3bemvn+mvbU9r+
nLa9qu3DtG2Uto/XtqnaPlvbFmn7Sm3bqO3bte0Lbf9e234fFs/HsP9P2/Yf
Lu2HDo/zh+1YbT9F287W9ou07SptL6lt5bS9qrbV1PY7tK2Btt+bnHn/BFu7
4fF8DHtXbeul7f207Ultf3Z4PP/D9oq2D8X0YHtX29/Xtg+1fZa2LdT2Fdq2
Qdu3advn2H6wf4fxsP2G4w/2f7Vtv7fyw/dZYD9E2455K17PYT9Z287S9gvf
iq8f2K7U9hLaVjY58/1D2KskZz4/gO1Wbb9d2+7R9mba1lbbu2jbA9reV9ue
0PZntO3l5MzzONjfTM48T4TtneTM56+wj9O2KdruOH5gW4D1gX05lh+29Tj+
YN+K6cH2GcbD/q22/Zpces/ff4T9H23b921pP1jbjtb2k7TtTG2/QNuu0Pbr
tc20vbK21dD2Otp2t7Y31bY22t5Z2+7X9j7a9ri2D9a2Idr+hraN1Paxb8fX
L2yTtX2mts1PLni7PrAo+zJtW6ftH2P+sH2q7d9o2y/a/re27TNC2ouPiOsD
21EYD/uJGA/bGdp+vrZdru3XjYjXE9jKaHsl9Oro+eh3oTfB8rXG9umE3hPL
/zD6Y+hPo7+EnkMfgT4GfdKIeP2fgT4P45eir8X6bcHx8Qn61+g/o/+FvvfI
OP+Dou3I5Mzfvz5hZByfF+3noV+Gfi36jegV0W9Bv21kPD7qR3vjkWF7Wyv0
jhjfA9N/CPN/FH0Q+ovor6O/jT46OfN58wfJmc8Hpydn3o/MTc48P18SbWvQ
N6PvitP3r6LtJ/Q/0fd6J/YDo+0I9OPRT0c/F/1S9GvQS6NXQL8ZvTZ6PfRG
6C3RO6Dfh/4g+gD0gegvoL+G/hb6e+gT0aehf5SceX+5GH11cub98qZo24n+
ZfKez3PyfkzOfN7xR3Lm85li74af9wOi7XD049BPQz8nufDfKyiY/iXRfjV6
KfTy6NXQa6Hf+W58/TTE8rVIznz+0B69+7the3jvaHsE6/cU+vMY/2qcnw3H
/EehT0Cfij4HfVFcX1uF9d+IvgP9C/Qf0H9H/w99/1GxHxbtx6Kfin72qHj8
Xhyduwrjb0jOPD8uF203odeM4/Pqjor7p0G0NY/OtUPvhvG90PujPxmd9xz6
Kxg/DP1d9PHoH6LPxvZdiO23En0D+nb0z9G/R/9t1O7r867U/7dneT5Jfb/3
du+Pgn7oe7uvnztTPya58H5kR+qnJBc+X9ye+lnJmeeJF0X7legl0cuiV0W/
Ff2OPfMv/H2oaLsXvS16V/QH0PuhP4H+LPrL6EPR30F/H30K+iz0Begr0Nej
b9uzvdL+8s/e2/163Zr6d8mF9zsfp/5rcuHznC2p/5tceD+6KfV9R+f/3/Oi
gn7I6N3TLxh/9Ojdx8fG1E8eHc//Z6JfGO1XoJdAt+TCf4+qoFcZHa+PNeL8
7Hb0u6OtGZavDXoXjL9/dHz99sXyPY75P5Nc+O9TFYwfEm1voo9EHxfn55Mx
f8fyz8f8l2P66zD9rcmF//5KwfJ/iu3/LdbvF/R/0PcZE/vBY+L0jxoT999J
0X4G+gXol6NfPyauX5loq4xeHb0O+l3oTdFbo3ceE7d/z2jrg/4Y+mBM/yVM
/w30Eehj0Sehz0Sfh74MfS36x+ifoH+D/jP63+h7j429eLQfiX4ieh76+eiX
oV+HfiN6JfRb0PPR66M3QW81Nu7fTmPj+aNHtD2M8Y+Oja/vpzH+RYzPob+d
nLn/HDM2vj4/GJsf7t9mJGfuD+Zi+ZdG+xr0Lei70L/G8v2E9fsr2vcaF5fv
oGg/Av2E6Nzp6Odh/KXo16KXHpcf3v9XjPab0W+LztVDb4zxLdE7Yvx9yZn7
44cwfkBy5v3loGh/Af11jH8LffS4/HB/NTHapqN/hL4EfTX6ZvSd6F+h/4j+
J3qx92M/MNoPRz8e/TT0c9EvQb/m/bh9S6FXwPhq6LXR74zOa5ScuX9rkZx5
PtUh2rujP4j+CPpA9OeTM8/nXkvOPJ8bHm3voU9Izjxfmxbtc9AXo69C34S+
A/1L9B/Q/0D/D/2A8bEfFm3HoZ+Kfs74sL384mi7enx8fd0wPr6+yo+P55eb
xsfzc63kzPOJutHWEL05xreP9m7j4/mjd3Lm+VT/uDz2VFxefw7L/+r4ePwO
i7ZR6OOTM58nT43OzUZfFO0r0Teib0f/Av179N/Hx+P/f1i//SfE9T90Qthe
dmy0n4J+NvpF6Fehl4zOKzchHj9VMb4m+h3R1mBCOH/Qfm9y5vN62Nppe1dt
66Xt/SbE/QPbkxgP+7MT4v6D7RVMD/ah2vYutifs70+Irz/YPsR42Gdhf8C2
UNtXaNuGCfH1CPs2bftc27/Ttt+0/V9t22+itB+ibcdo+8nadpa2X6htV06M
+wPOldC2stpeRdtu1fbbte0ebW+mbW21vYt23gPa3lfbnpgYzx+wP6NtL2v7
m9r2DpYH9nET4/UFtina7tq2QNuXa9t6bd+qbZ9p+7fa9qu2/zMxnk9h2/cD
aT9Y247W9pO07Uxtv0DbrtD265Mz9w+wWXLmfg/2ytp5NZIzn3fAXic58/4d
truTM/eTsDfVtjbJmc8rYO+M9Yftfmw/2PtgPGyPYzzsgzEezhsSf572NzAe
tpFxe9M+NjnzfAW2ycmZ+xHYZyZnnp/CefOT9zx/on2Ztq3D/GH/GMcfnPep
tn+D4wG2X7T9b23bZ5K0F9e2o5ILv9+3qQjnTtTOOyN5z/Nx2s/Xtsu1/Tpt
K6PtlZL3fN5HW/VJu8/XRdnzte0ubW8yaffxtr0IW+tJu6/HRdk7Tdp9vO8o
wtZzUn74vBPOPTxp9/lqZxG2x7T96T37uyjbS9qew/aAbQS2B+xjkjOfz8I2
CdsP9hmTdp/vi7LNSy58P1WUfSnGw7YW42Hfom2faOe+1raftf0vbdt7srQf
NDmuP2xHYjzsJ2hbnnbuPG27TDt3rbbdODkef7BXnBzPH7DdMjkez7DfNnn3
9W57Ebb62J6wN9a2VtreUdt6aPtD2vaotg/Sthe1/fU92/PjImxv79mfW4qw
j9a2D7Rz07VtrrYvSS48XW8qwrZG2zcnFz6/3lyEbRfGw/7V5Hg9hO0nbf9T
2/aaIu0HatsR2rnjte107dy5U/Kz3weh7dIpcf/Bfk1y5vshsJXW9gpT4vEL
283aXlvb6mH+sDfStpba3kHb7puy+3q8pQj7g1Pi8QvbAG0fiP0B2wvJhbfb
m4uwv6Ztb2n7e9o2UdunadtH2r5Y21Yn7/l+E+2bkvfcr9O2E9sT9i8xf9h+
1PY/tK3Yh3F5YD/gw3j+gO1wbT9O207T9nO07RJtv1rbSml7eW2rlpz5PhHs
tbTtTm1vqG0tkjPvp2Fvr23dk7Pfh4723tr2iLY/pW3Pa/ur2jY8OfN5Juyj
tG2Ctk/VtjnavkjbViVnnr/BvlHbdmj7F5g/bD9o++/a9p+27z9V2g7T9mO1
7VRtP1vbLtb2q7TtBm0vp203aedqaufV1fYG2tZ8ajx+YG+nbd20vZe29U8u
vN/YVYT9yeTM82PYnkvOPP+E/ZXkzPML2IZNjddv2N+dGq+HsI2fGq8HsH+o
bbOTM993hX2htq3U9g1YH9i2a/vn2va9tv+mbf/bsz12FGHfb1p+eP8O26HT
dl8PthVhPyY58/102E5Jzrx/g/2saXH/wXaRdu5KbSup7WWnxes/bFW1/VZt
u0Pb79G2e5Mz9xOwt9W2rtr+gLb10/Yn9hwvRdme1faXtW2otr8zLZ6/YHtf
26do2yxtX6BtK7Rz67Vtm7Z/pm3fafuv2vavtu87XdoOmR73H+xHYzxsJ2v7
mdp2obZfoW0ltN20rYq219C227X9bm1rpu1tpsfzD2xdsP9gv1/b+mr749r2
jLYP0bY3tX2kdt645Mz9H+yTtc21fT72B2zLsfywr9O2rdr+qbZ9q+2/aNs/
0+P1A/Z9ZsTxsB2s7UfNiNOD7SRtP0PbLtD2y7Xtem0vo22Vsf6wV9e2Otp+
l7Y11fbW2tZZO9dT2/po+2PaNlg795K2vaHtI7RtrLZP0raZ2j4vec/zftqW
JWeeR8K+NjnzPBq2j5Mz98+wf6Jt32j7zzPi9Qe2v5Mz779g33umtBWfGacH
+5HadqK252nb+dp+mbZdp+03zozHA2yVtP0WbcvX9vra1kTbW82M5z/YOml7
D0wPtoe1/VFtexrzh/1Fbctp+9vaNkbbP9C2GTh+YJ+rbUu1fY22bdH2Xdr2
tbb/hNc/bH9hPOx7ubQd5HF6sB+hbSdo++nadp62X+rx/A3btR6vB7CX9ng9
gK0ipgf7zdp2W3LmeRTs9bStcXLmeSCca6ltHbX9Pm17SNsHeLyewTZI21/Q
tte1/S1sP9hGa/tErA9s07X9I21bou2rtW2ztu/E+sD2lbb/qG1/aueKzZK2
A7X9cG07XttP07ZztXOXaNs1s+LrGfZS2lZB26tpW21tv1PbGs2K5zPYWyRn
vg8AWweMh727tj2onXtE2wZq+/Pa9pq2D0/OPI+H7b1Z8fUH+wRtm6adm6Nt
i3E8wr5K2zbNiudP2Hdo25dYHjj3A14/sP2h7f9p2wGzpf0wbTtO20/VtnO0
/WJtu1rbb0gu+LpVv81F2MrPjscv7DdpW63Z8fUMe11ta6jtzTF/2Nprezdt
663t/bXtKW1/Ttte1fZh2jZK28dr21Rtn61ti7RzK+PxRttGbd+ubV9o+/fa
9ru2/0/b9p8j7Ydq27HauVO07Wxtv0jbrtL2knPi/oetHMbDXlXbamr7HdrW
QNvv1bZ22t5V23ppez9te1Lbn9W2V7R9qLa9q+3va9uH2j5L2xYmZ+4nYV8x
J14PYNug7du07XNt/07bftP2f7Vtv4+k/RBtO0bbT9a2sz6Kr2fYL9S2K7Vz
JbStrLZX0bZbtf12bbtH25tpW9vkwt9n3VqEvUty5vtAsD2QnPk+F+x9kwtu
hwt+H4+2JzA92J/B9OC8l5P3/L4S7W9q2zvaPk7bpmi7J+/Y8/dXYVuQXHi/
W5R9+Z79UZRtfXLm97Fg35qc+f1J2D5L3vP3RWn/Vtt+1fZ/tG3fudJ+8Ny4
PWE7Wjt3kradOTduD9gvSM78PhtsV2D5Yb9e20zbK2P9Yauh7XXmxtcPbHcn
Z77PB3vT5Mzvk8LWZu7u83FR9s7adj+mB3sfbXtc2wcnZ36fDrYh2v4Glh+2
kRgP+1htm4z9D/vMufH1D9t8HI+wL8PxDNs6jIf947nxfAzbp8mFzzt2FmH/
BtOD7Ze58fwF+9/Jhd8XLcq2zzxpL65tR2n7ifPi+sB2RnLm98dhP39ePJ/D
dvm8+PqF/TptK6PtlebF1z9s1eflh9+ng3P5yXu+z0vbXcmF3/feXoS9yZ7t
sbUIW2vMH851mpcffn8Rtp7z8sP9IOwP79nem4qwPabtT8f50fZScuZ+CvYc
xsM2QtvHaNskbZ+B5YFtXnLmeS7sS7Vt7Z7XQ1H2Ldr2CaYH+9fJmfdTsP2M
8bD/hf0J297zpf2g5ML71fVF2I6cnx++jwf7CfPzw+9DwJan7edherBdpu3X
zs8P31+A7UZtr6htt8zPD58/w36bttXX9sba1mp+fngeD3vH+fH4h63H/Hj+
gf2hPft7WxG2RzEe9kF7jqedRdheTC7YXZO3FmF/fX48f8L29vz88PsUsI9O
zryfg/M+SN7z+8y0T9e2udq+RNvW4PUH+2Zt2zU/ng9g/0rbfkrO3A/B/uf8
/HD/B9teC+L+g/3ABXH/wXYExsN+/IJ4PMF2+oJ4/of9XG27NDnz++uwX6Nt
pRfE7QF7Baw/bDcvCMcj7bW1rR62H+yNtK0lpgd7Byw/bPdp5x7UtgHYnrAP
xP6D7QWMh3OvLQivNzrvLW1/T9smLojnH9inYTxsH2F9YF+853gqyrYa6w/7
JkwPtp1YHjj3JbYnbD9q5/7A9GArtjCOh/0AbTt8YVwf2I9bGLc/bKdherCf
g+nBdgnGw371wnj+hq2Udq68tlXD8sBeC/OH7c7kzP0D7A21rYW2t9e27tre
Oznz/U3YHtH2p7Tt+eTM/Rzsry7MD99/hG14cuZ+DPZRWB/YJmj7VG2bo+2L
sDywrcJ42DdiPGw7tP2L5Mz7H9h+wPaEc7/H5aHtP0wP9v0XxfWB7TDt3LHa
duqiOH84d3bynvst2i5Ozrx/g/2qOD3absB42Mtp201YHthrLornD9jqansD
LD9szbW9nbZ1w/xh76Vt/bH+sD+pbc9p+yvaNiw5834M9ncxHrbx2v4h9j9s
s7V9obat1PYN2rZd2z/Xtu+1/Tdt+5+277c4bk/YDtX2Y7TtFG0/a3FcHtgu
0s5dqW0lMX/Yy2L+sFVdHF9PsN+qbXcsjudT2O9ZHK8ncN692t4W84et6+J4
PoH9AW3rl5x5fgX7E8mZ51GwPZuc/f3/6NzL2jZU29/Rtve1fYq2zdL2Bdq2
QtvX43iAbZu2f6Zt3+F4gP3X5Mz7L9j+XRzP37Dvu0TaDlkSX3+wH61tJy+J
r0fYz9S2C5fE9Yf9CoyHrYS2m7ZV0fYaS+LrD7bbtf1urA9szbS9jbZ1wf6E
/f7kzPenYOur7Y9r2zPaPkTb3tTOjdS2cdo+Wdtc2+fj+Idtubav07at2J+w
f4rjCbZvtf0XbftnSTwfwbl9lkrbwdp+lHbeSUvD8tB+hrZdoO2XL43nc9iu
1/Yyydnf/4+2ykvj9RT26smZvycBW53kzL/fAftdyZl/DwW2ptreOjnz76/A
1hnjYe+pbX20/TFtG4zlgf2lpbuvd0XZ3tD2EZg/bGOTM/8eEeyTtG1mcuHz
6nVF2OclZ/49C9iWYTzsa5Mz//4HbB/j+IH9E237BvOH/Wdt+1vb914Wlx+2
4tp+ZHLm81/YTlwWX7+w5yVn7sdhO39ZPH/Aflly9vf/o+06TA/2G7Wtkrbf
gvnDlr8sno9gr4/pwdZE21tpWydt76FtD2N9YH8U42F7Gvsf9heXxfMxbDlt
f1vbxmj7B1ge2GZo+9zk0Xv+/itsS5Mz7/9gX5Nc+HnbuiJsW/B6gn3Xsnj9
gu1rbf8J04PtL4yHfa/lcf1hO2h5HA/7Edp2gnbudG07D8sD+6WYP2zXanvp
5XH7wVZR22/WttuWx+MB9nra1ljbWy6P53PYOmr7fdr2kLYP0LZB2v6Ctr2u
7W9p22jsD9gnYnvCNl3bP9K2Jdq+Wts2a/tObfsK6w/nftS2P7W92Ir4eoTt
wBXx9Qf74Svi9GA7HuNhP03bzsX0YL9E267R9lLaVkHbq2lb7RXx+gf7nSvi
9Qi2RtreQts6YHvC3l3bHtT2R7RtoLY/j+0H22vaPlzb3sP8YZ+gbdO0fY62
LcbrCfZV2H+wbdL2HZg/bF9iPOw/YHlg+0Pb/8PxDNsBK/PD7w/Aflhy5vvf
sB23cvf+3FaE/dSV+eH7T7Cdk5x5Hgz7xcmZ+2fYrtb2G5Iz96Owldf2m7St
lrbX1baGWH7Ymydn3g/B1j458/wK9m7a1ls711/bntL257A+sL2anHn/BPsw
bD/YRmn7eG2bivnDudnatkjbV2rbRm3frm1fYH1g/17bfsfxBPv/MB62/VdJ
+6Gr4vRgO1bbT9G2s7X9Im27CssPe0ltK6ftVbWtprbfoW0NtP3eVfH8D1s7
be+qbb0wf9j7aduT2v7sqng9hO0VbR+qbe9q+/va9iGOJ9hnadtCrD/sK7Rt
g7Zv07bPtf07LD9sv2n7v9q232ppP0TbjtH2k7XtLO3chavD9qDtSm0vsTq+
fmArq+1VtO1Wbb9d2+7R9mba1nZ1vB7B3kXbHsD2g72vtj2h7c9o28va/qa2
vaPt47Rtira7ti3A8Qv7coyHbb22b9W2z7A/Yf9W237F9GD/JzlzPwnbvmvi
+sPFDtG2o7X9JG07U9svWBPXB7Yr1sTXE+zXa5tpe+XkzPtP2Gpoex1tuxvz
h73pmnj9hK2NtndOzryfhe1+LA/sfbTtcW0fjPnDNkTb38D0YBuJ8bCP1bbJ
2j4T2xO2+dq+TNvWafvH2vaptn+jbb9ge8L+t7bts1bai2vbUcmZ51mwn6ht
Z2j7+dp2OZYH9uswHrYy2l4J04Ot+tp4/MGej/Gw3aXtTTA92FqvjccD7J0w
Hrae2v6wtj2m7U9r20vansP2gG2Eto/B9GCbpO0ztG2eti/F/oBtrbZv0bZP
tP1rbftZ2//Str3XSftByZn7H9iO1PYTtC1P289Lztx/wHaZtl+rbTdqe8Xk
zP0AbLdg+8F+m7bV1/bG2tZqXTx+Ye+obT3Wxdcf7A9p26PaPkjbXtTOva5t
b2v7aG37QNuna9tcbV+ibWu0fTP2H2y7tP0rHD+w/aTtf2rbXuul/UBtO0Lb
j9e207X93PXx9Qvbpdp+zfp4PoCttLZX0Labtb22ttXT9kba1lLbO2B7wnYf
th/sD2rbAG0fiOWB7QVtf03b3tL297RtIpYf9mna9pG2L9a21dq+Sdt2avuX
2vajtv+hbcU2SPsB2na4th+3IR6/sJ22IZ5/YT9nQzyfwnaJtl+tbaW0vTyW
H7Zq2l5L2+7U9oba1kLb22N9YOuu7b2xP2F7RNuf0rbntf1VrA9sw7V9lLZN
0Pap2jZH2xdp2ypt36htO7T9C237Qdt/17b/tH3/jdJ2mLYfq22nbozHD+xn
b4zXD9gu1varkjPfP4DtBm0vh+WH7abkzPsv2GtqW93kzN9jgr1Bcub3+WBr
npz5+zmwt0vO/P4WbN2SB+75/S3YeyUXLE7pomz9sTywP5mceX4P23MYD/sr
GA/bMG1/V9vGa/uH2H6wzdb2hdq2Mjnz+4+wb0jOfB8Ktu3YH7B/rm3fY/1h
/03b/qft+22K6w/boZvieNiP2RRfj7Cdou1nbYqvP9guwnjYr8TywFZS28tq
W1XMH/Zbte0OTA/2e7TtXmwP2NtqW1dtf0Db+m2KxzPsT+D4ge3Z5Mzfb4L9
5U3x9QTb0OTM9xFhf2dTPJ/C9r62T0kuvuf7kLDNSs78/V3YF+zZHkXZVmA8
7OuTC7+vvrMI523blJ/9e8q0f6Zt3+05Houy/7pnfxdl+xfTg33fzdJ2yOY4
PdiP1raTkzPff4X9zOTC3wfcWYTtws27j5ei7Fdg+WEroe2G5YGtyua4/WGv
sTkeD7DdjvnDfjemB1szbW+zeff1fGcRti6bw/FI+/3Y/rD13bz7elaU/fHN
+eHvccP2DNYf9iFYH9je3Lz7fFqUfSTWH7Zx2j45ufB+rCiba/t8bE/YlicX
vl/fVYR9HcbDthXHP+yfYjxs327efT7cVYT9F4yH7R9t32dL3B6wHbwlLj/s
R2nbSdp+xpa4PLBdgPGwX74lHs+wXY/xsJfRtsraXn1LPB5hq6Ptd2lb0y1x
/8PeGuNh66ztPbX/X193HqZT+YcBnBljS1oUKdWkTUn7JpW7UEm7XmnTVNq0
S9qkJAltlHYZlaRUUiGJWwtSSUoSZsa+DAaD2czM7/ec97reOd/7eq/vn5/u
9/uc5zznnOc853jfCQNl+2IOlXoxRvjmWzKeYoyR80HMj31jom9OWWbnTzFm
LrPzl5izg2PrDzHmL0vNF/lpzEW+sTw4+b4qnblati/GJt8s9o0K38xY7hoN
fXMf32jum9nL7fiJ0Wp5wqxfxTxhecL8PWIxzvDNc5cnzHpWjAt889LlCfM+
Q4xEcOzvyYp5Q3Ds78GK0TM4tv4X827feEj6I+bj0h8xnvHNIb4x3Dff9I1c
GQ8xx/nGF7452Tdm+ObPMv5i/C71Yv7tG8ukPTFXSb0YhTKeYm73jXI5/8Ws
nZcwv58To0GevR+IuXeenQ/E2QcE1/z/gNQ8NC91P8hLYxydZ+dfMY/3jdPz
EuZ5VsxzavYnL43RKTj5PrUgjXmJb1wt2xfzeum/GLf6Zi/f6C3bF/Mx3xiQ
Z+dzMZ/3jVekP2K+4RujZTzF/EjqxfjcN7/xje+DY8+jYv4k148Yv8l4ivmX
byz1zZXByfdN69IYG/NS883qNOa2mv1JZ5QFx9ZfYtbKt/Vi1M9PmPWrmHsF
x9ajYjQLjj1PiHlIvp2PxDgqOLaeFLONb5zmm2fL9sXo6JtdgmPvf8Tomp8w
7wPEvM43bgmOvT8Q8658ezzFeNA3H/WNp2X7Yg4Ojr2/EONl33xdxk+c815+
6n6Yzhybn7oeCtIYn+Xb61nMr31jum/+mG/vn2L86psLpf9i/OebK3xjQ3Dy
3yvTmVulXoxS36zOt/cPMeoV2PlYzMa+0dQ3D/aNI33zuALbfzFOLbD7L2a7
AjueYnTwzYt946oCc76reW2BvZ+JcbNv3llgz2dx9gMFZj5S85ECez2L8ZRv
PiftifGSb44ssPOXGKN888MCez8QY0Jwcr27Oo35Vc35tCqN8Z1v/lBzvqUz
5vnmn8HJ9UI6Y4lvFvjGeum/mEXB0ek4KJ1zSmx/1awKjq0fxKi7wjX39I39
g2Pvr8Rs4RtH+Gbr4Nj7XzFO8c2zfON83+zsG1f6ZnffyPHNO3zjft/s6xv9
fXOQb7wYHFu/ifmab7zrmx/4xqe+Ock3pgXH1s9izvKNX1bY+UzMBSvsfCjG
v76Z7xvrfHNLcGw9KcauFXb+F7Nyhb2fiJG10jUb+cZ+K+32xTzINw73zWNl
+2KcvNKOh5htfeM837zIN67wzWuCY+sRMW7yzdt9477g2PpbzIeDY+snMZ6U
ejGf9Y0XfPPV4Nh6Sox3fPN93/hEti/mlzJ+Ynwr9WLSN+b65h++sdg384Jj
62kx1vrmZt/YKeeDmLtl/MSos8r2X8w9fKPJKns8xTxQ6sVo6ZvH+MZJvnmm
b8A3L5T9EeNy3+zmGz2CY+9TxLzNN+71zT6+0c83B/rGsFV2/hRzhG+8vcre
D8Qc4xvjfXOib0z1zZmr7PUjxhypF3O+7L8Y//jmct9YI8dDzE1SL8YO36yQ
9sTIXO2aDX1jX99svtr2R4zDfLPVans8xDjRN8+Q9sRo75sX+MZlvpnwjRt9
s6eMpxj3yP6L+ZC0J85+wn5ezWekXpw9VOrFHC71Yrzlm7nSnhgf++YXvjHF
N2f4xmzf/N03FvnmMt9Y7ZuFvlHsm+W+kbHGNRv4xj6+eYBvZK+x54+YRwfH
nl/FOCE49vwj5unBsedXMc4Njj0/itlJ2hPjUt+82jdukP6Ieatv3B0ce/4W
s7dvPC77L+aA4Nj7DzGGBMfe34n5imxfjDeDY+8fxRwt+y/GON/8XM4fMSZL
vZjf+8bPvvmb7L8Yf/vmUjkeYqyS80nMjVIvxnbZvphlvlF7rWvW942919r+
iNnMNw71zaN843jfPG2tPZ5inOObHdfa80+MS6RezK6+cb1v3uIbvXzzQd94
TI6nmE9LvRjP++bLvvGGjKeY70m9GB9J/8X8bK2d/8T4RrYv5nTf+Mk3f/WN
v3zzP9/ZK+3+qLnBN7b5Zmlw7N8zxKi1zjXrrbPtibHXOrv/YjaVejEOke2L
eWRw7N9/xGjjm6f6xtm+2cE3uqyz908xrwpOfh9gdRrjOt+5N68z93M17pJ6
MR+wn1fj0eDo6z6L05lP+cbg4Nj3l8R8yTdeD479+6uYo4KT7/PSGWODk++r
0pkTpF6Mr33zO+mPGD/65jzfWOibS3xjhW+u942tvlniG9W+WXe9azT2zf19
42DfPMI3jgtOvs9ak8Y8JTj5viCd0U7qxTx/vT2fxLhY2hPzSt+41jdzpD9i
3Omb96+3168Yj8j+iNk/OPb9QzGe880XfWOk9F/Md33jQxk/MT/1ja98c5pv
/BCcfN5OZ/7iG38GJ5/n05n/+kaBb67zjSLf3OUbVcHJ9X46M2uDa+zpm/v5
RgvfPNw3Wgcn17Nr05gn+8ZZvnmeb3QOTq6X05lX+EZ337zJN+7wzfuCk8/D
a9IYfX3zSd/Zg3zzBd94zTff2WDPXzE+8M1PfGOSb367wV7/YszaYOczMef6
xgLfXOwb+b651je2+OZO36j0zTobXaORbzbZaOdvMQ7yzZa+caxsX8yTfKOt
b8I3Ltpo76diXu4b10h7Yvbwjdt9817feNg3+/nGs745TPZfjFeDY88fYr7t
G+/75njf+DI4tv4Sc6pv0DfnBMfWf2L84Zv/SHti5AXH1uNirgmOPc+KsVnG
Q8wdsn0xdvtmZqFr7OGb+/rGgb55mG8cU2jPXzFPLLTzjxhn+mb7Qnv+i3Fh
oT1+Yl7mG91880bfuK3QHn8x75HxE6NPoT1/xXzCNwb65lDfGFFoz2cx35L+
izHGNz/2jYlyPMWc4hszfXO2b8z3zUW+sVyOv5irfWOTbxbL8ROjQurFzNhk
68Vo6Jv7+EZz38zeZK8fMVr55gm+cYZvnusbF/jmpb6R8M0bZDzE6Ombd2+y
16MYD/nm49IfMZ4JTv5eNp05xDeG++abvpHrm+Ok/2J84ZuTZTzEmCH1Yv7s
G7/75t++scw3V/lGoW9u941yGQ8xa292jQa+ubdvHLDZ9kfMQ33jaGlPzON9
43TfPMc3Om2256+Yl/jG1cGxfw8R83rfuDV4UOr3UGr28o3evvmYbF+MAcGx
f38S83lpT4xXfPMN3xjtmx/5xue++Y1vfC/jIeZPvvGbb/7lG0ulP2Ku9I2N
vrnNN8p8s9YW16jvm3sFx9aPYjTbYq8nMQ/xjaO22PlEzDZb7PUvxmnBsX+P
FPNs2b4YHX2zi2909c3rfOMW37zLNx70zUd942kZfzEHy/EX42XffN033vPN
sb7xWXBs/S3m174x3Td/DI49T4vxq9SLuTA4+X2BtWmM/4Kj4Z6azlwRHHv/
K8aG4Njzu5hbg2PPT2KUyniKWe0b9Ypcs7FvNC2y4yfmwb5xpLQn5nG+cWqR
HQ8x2/lGB9+8WPovxlW+eW2RvR7FuLnIXs9i3in1Yjzgm4/4xlO++ZxvvFRk
53MxR8r+iDHKNz8Mjj3PiTFB+iPmV9KeGN/55g/Snhjz5HwU80+pF2OJbxb4
xnrfLPKNEt+s8o26W11zT9/Y3zdb+MYRvtnaN07xzbN843zf7OwbV/pmd9/I
8c07fON+3+zrG/19c5BvvOibr/nGu775gW986puTfGOab87ynfPLVjNfqrlA
6sX4Nzi2nhDXWhlcs55QY91We/8Sc4tsX4xdvlnpOydrm2s22mbnUzH2882D
fONw3wXH+sbJvtlW8vOCY99HuSg49v2LK4Jj3xe5xho3SX675PdJ/rDkT0r+
rOQvSP6qdc47tr98X+o/kfovJf9Wcko+V/I/JF8s28+T/q2V+s1Sv1Py3ba9
nKzttv09gpPfh47qm0h+4HbbfktrHhMcsWH09wJPsuaZwbHnCUj9hdvN+YLL
t9vrs9t2M1+gR3Bs/XKbNe6VvI/k/SQfuN1e38OsOULytyUfI/l4ySdKPlXy
mZLPkXx+cOz9wT/Bsfc9y60L1ki+KTj2/mSHNSskzyy2eUPrnCaSNy8228Nh
1mwl+YlSf0axPT7ti83+8gJrXCZ5wraHG4Nj3+fvWZyan6Lf899TnDq/ot/7
P1ScML8vfKI4YX7f80xxwvx+YKg1hwcnn4ej/C2pz7Xtc3xw7O9FfBEc+3sD
UySfYY3ZxanrIcp/t8ai4tT5E+XL7P5itbRfaJ1TLPXl1sjYYfrLBjvs+O6z
I2F+z3xAcOz3+NnWPNp+HidI/emSnyt5J8kvlfxqyW+Q/FbJ795hj19vazwe
HPu96oDgmt/T5Qyx5ivWeFPy0ZKPk/zzHQnz+6PJO+z59701fpb8N8n/lnyp
5Ksk3yj5dsnLdtjzv/ZOe/3VD469/9/bms12JuJ/zzXnUGseZdvD8Tvt9k+z
xjmSd5T8kp2mv+xqjeslv0X610v696A1HpP8aWn/eRmfl2X/3pD8Pck/kvwz
237ONzsT5vdA02X7P0n+qzX+kvw/yVdKvkHybZKXBtf8Pb/sWruMWW+Xnb/3
smbTXfb8OUTqj5S8jTVPlfzsXfb+0UHyLrvM/YhXSX6dtH+z5HdJ/QN2e3hU
tv/UroRZ3wy25ku7Eub54XXJR0n9WMknSP619O872z5+tOY8yRdKvsS2n7NC
tr9e6rdKfYnk1ZLXLbF5Y2vuX5Iwzx8HlyTM+/AjShLm+fE4a55SkjDfb25X
kjDPL+eXJMz69eKS1PUXrV+vlPprSxLm+9k5tj3cKfn91nhE8v6SPyf5iyUJ
s34fWZIw6+93SxLm/f2Hdn/4qezfV5JPk/wHaf8Xaf9P69x/S1LXc/R8UBCc
XA9G9etKUtdDlBeVJMzfI99lt4cq2X5Wqfk89rTmfpK3KDX94eGlqfNpfchb
l6bO32CebI2zSlPXT5SfV2r2B51Lzf7zilJzvqB7qR3fm2x/cIdtj/dJ+31L
U/NNlD9pjUGyfy9I/WvS/ju2P/hAxu+TUjv+k6z5rYzvLKmfK/u3QLa/uNQe
/3wZ/7X2+ORskXynHJ9KyeuUmeOFRtZsIvlBkreU/Ngy2/5J1mhbZvaHsMZF
Un95WWr+iuqvCU6ux6O8hzVuLzPjwXslf1jyfpI/K+0Pk/xV2x++HZxc70f5
+9YcX5aabzeE/Muy1HwYzKllqfkqyhmcXM9uDPmcstT8FZzzhzX/KUtdT8HI
k3yNNTZLvkPy3bY9Zpanzv8o36Pc5vta40DJD5P6Y8pT10dhyE+U/Eypby/t
Xyj5ZeW2/92seWO5GU/cJvk9sv0+0r8nrDHQfp5DpX6E1L8l9WOk/mO7PzkT
y1PXf1Q/pTx1fUT1MyWfbY355anzdVPIFwUnn2+DsTw4+Ty3OeSry1Pnc5Rv
sp9nseQV1syoSJ3vUd6wwtbvU2Hrm1ekrr8oz5a8VYXt/wn28zjDfp7n2s/j
gorU/BHll1ojIdu/QdrvWZGaz6L8bskfkv49Ltt/RtofIvs3XPI3pT5X2h8n
2/9C6ifb/mKG7P/Psv+/y/79LfXLJF8leaHk2ytS97Po/CuvSN1vo/Oz9m57
/jew5t67bf0B1jzUOvvo3bb9461xurR/zm47f3Sy5iWSXy359ZLfKnkvyXsH
J9czUf7Ybjs/DZD8eWu8Ivkbko+27fEjaf9zyb+R/HvJf5L2f5P9+0vql0r9
yuDk++oo37jb3r+27bb3tzLJa1Xa+bm+de5ewcnng6i+WXDy+SS6fx5Sae+v
R0neptJu/7TK1PwX5Wfbz6OjbY9dKs39Gl2l/etse7hF6u+S/MHK1PwYrQ8e
rUyY9cPTlQmz/hlcmTDr75et+brk70k+VvLPpP2vrTFd6n+U+l8rE2Z9tFDy
/yoTZn20QtrfINvfKnmpbL/abg/1qmz7jatMnt20ytYfbI0jqxJmfX1cVcKs
z0+tSpjnk3ZVCfP82qEqYb8PVJUwz89XVSXM+4tra9qP3m/cXJWw3++pSpjv
oz1gzUfs9rOfqkqY74c9V5Uw/374UlUi/rzLkdYYZZ37oeQTqhLm+f0ra3wn
+Q+Sz5P8z+DY89MSO94sCI49/6yvGb8oL7LHGyU14x8d36qa8Yqur7rVdn7Z
0xr7VyfM+qtFdWr70f3jCGu2tp/HKdV2fj6r2syH2edL+53t53Gl/Ty7V9v5
M8ead9jP4/5qOz/3lby/1A+S9l+U/DWpf1f694Hkn0o+SfZvmvRvljV+kXyB
5P9W2/t3vrS/Tuq3SP0uOT6VUp9Vq5vJG1ljP8kPkvzw4Nj+Hxsc2/7JwbH1
SVupP89+nhdJ/RWSXyP5TbL9261xn3Xuw5I/KfXPSv6C5K9K/9+R8Xlf8k8k
/1La/1b2j5LPDY6dn39YY7HkeVK/Vvq/WfKdwbH5YXdwbH1Rp3Y383y+R22b
NwmuWU/wQGu0rG3bP6a22d/sk6x5Zm3bP0j9hbXt/l9uP89u9vPoYT/P26T9
e2ub45PbR/J+Uj/Qfh7DZPsjpH9v2/7kjpF8vHXuRGl/quz/TKmfI/2bL/k/
ki+X8Vkj7W+SfIftDyuk/cwMmzfMsOO3b4Ztv7k1DrOfZ6sM2/6J1jxD8vbS
/gXS/mXSv4Q1bpT2e0r9PZI/JNt/Qvr/jORDpX645G9Jfa6M38cZ9vr4Ijj2
/Dglw86vM4Jj70dmB8feD/wenFwfhPcdWBRc876Cy6yx2n6ehVJfLHl5cM37
FGRkpuaPKG8QHHv+3ifTfJ4H2M8jOzN1PLaE/OjM1PgE44TM1HwU1Z+emRrf
KD83M3W8o/pO1rhU8qtte7jBtsdbZft3S/96W+PxTDv+A6T9IdL+K8HJ9VJU
/6Y1R2emjn9RyMcFJ9ePwfw8M3U8onyy/Ty/D/56bt8Zow+M8p/t5/lbcI9p
nRtltI7yv6X9pcFLy/r3mt4nylcFz+lyxpDzcqJ8Y/DP2RN73zk8yrcHb+nX
/rQe06K8zBq16/zfb96370DOi/L6wW0mjSoaNzvK966Tup9EeTObZx9qzaPs
53F8cPe2YY+j/DTJz5H6jsEZrQc3XTI/yi+R/nWV+uul/Vus0UvyB4Ob1+nW
uM2kKH/Mmk/XsePzvOQvBy+ZX9J11dgofyO447B71lWMj/L3JP9I8s+Ck897
Uf6NNadL/pPU/2qNv6R//wX/f7DGdJoc5StlfDcE3/v/6m0Lo3xbndR8FeWl
wefnrFnQcmmU18qyeb0sm+8ledMs2/4hWeZ48khrtMmyx+fULHv+nW3NDpJ3
kfyqLHv8rsuy5+/N1rhLtv+ANR6V/CnJB0v+kvTvddn/UbL/Y6X/E6T+6yx7
/n8n9T9K+/MkXyj1SyRfYY8X18vx2yrHt0TyaqmvW9fmjeva+Wd/axxc1/bv
iLp2/4+z5imSt5P8fMkvlvxKya+VPEfyOyW/X/JHJO8v+XOSvyj5SMnfrWvP
zw+t+anUfyX5NKn/QfJfJP9T8n8lL5D+ratrz58iOX67rFEleVY9m+8Z3Cya
MKN8v3r2/GlRz55/h1ujdT0zH/Fka5wl+XmSdw6e0OK6nu3yo/wKa3SX/Cap
v0Py+6S+r+RPSj5I8hckf03ydyT/QPJP7HhiUvCscDsojvJvg5PrnyifZc25
weFuMqooyhfY9nMX2/aQL+2vlXyL5Dslr5S8Tv3/+/UO4QYX5Y2s2UTyg+qb
/rJlfdv+scHR6VoS5SdJfVtpH/bzuEjqL5f8Gsl7SH675PdK/rDk/aR/z0r/
hkn+quRvS/6+5OMl/1LyqZJT8jmS/yH5P5LnSb5G8s2S75B8t+SZDWy+R/CA
keE/RPm+1jhQ8sMkP6aBPf9PbGDPnzOt2V7yCyW/TPJukt8o+W2S3yN5nwb2
/HjCGgMlHyr5CMnfkvbHyPY/lnyi5FMknyn5bMnnS75I+rdc+rda8k2SF0te
Yc8HZjS050dDa+4jeXPJsyVvJfkJcf8Pt/WhQQ==
          "]]}, Annotation[#, "Charting`Private`Tag#6"]& ]}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {
       FormBox[
        TagBox["\"Time (UTC)\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Price (USD)\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {3.936988803*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[
        Automatic, 
         DateTicksFormat -> {
          "MonthNameShort", " ", "DayShort", " ", "Hour", ":", "Minute"}], 
        Charting`DateTicksFunction[
        Automatic, 
         DateTicksFormat -> {
          "MonthNameShort", " ", "DayShort", " ", "Hour", ":", "Minute"}, 
         "TickLabels" -> None]}}, GridLines -> {Charting`ScaledTickValues[
        (Part[
         Select[
          Charting`DateTicksFunction[
          Automatic, 
           DateTicksFormat -> {
            "MonthNameShort", " ", "DayShort", " ", "Hour", ":", "Minute"}][
           SlotSequence[1]], And[
           FreeQ[#, 
            Alternatives["", 
             Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "NoShowPlotTheme" -> "Detailed", "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.95, 0.627, 0.1425], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.455, 0.7, 0.21], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.578, 0.51, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.4, 0.64, 1.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1., 0.75, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.8, 0.4, 0.76], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.637, 0.65, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
        "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (DateString[
            Identity[#], "DateShort"]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (DateString[
            Identity[#], "DateShort"]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Prices Over Time\"", TraditionalForm], 
     PlotRange -> {{3.936988803*^9, 3.937423742*^9}, {0, 0.9995}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Len Sassaman\"", "\"Hal Finney\"", "\"Adam Back\"", "\"Nick Szabo\"",
        "\"David Kleiman\"", "\"Other/Multiple \""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.578, 0.51, 0.85], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.578, 0.51, 0.85], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.95, 0.627, 0.1425]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.455, 0.7, 0.21]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.578, 0.51, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.964180151453239*^9, 3.964180174749734*^9}, 
   3.964180286650791*^9, 3.964180343245142*^9, 3.964180380660839*^9, {
   3.964180461128666*^9, 3.9641804821157293`*^9}, 3.964180646609146*^9, 
   3.96418081682968*^9, 3.9641808703516083`*^9, 3.964183876996944*^9, 
   3.964186950337043*^9},
 CellLabel->
  "Out[450]=",ExpressionUUID->"93aa45a1-276a-429d-89f5-2dbb6c0bc27d"],

Cell[BoxData["\<\"/Users/jeremyclark/Documents/Academia/Deliverables/\
Publications/01 Drafts/2024-PredictionMarkets/2024 HBO Money \
Electric/Data/graph.png\"\>"], "Output",
 CellChangeTimes->{{3.964180151453239*^9, 3.964180174749734*^9}, 
   3.964180286650791*^9, 3.964180343245142*^9, 3.964180380660839*^9, {
   3.964180461128666*^9, 3.9641804821157293`*^9}, 3.964180646609146*^9, 
   3.96418081682968*^9, 3.9641808703516083`*^9, 3.964183876996944*^9, 
   3.96418695053722*^9},
 CellLabel->
  "Out[451]=",ExpressionUUID->"fa22ec0e-99a4-49a7-a986-0382e01e2e07"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Price Movements", "Section",
 CellChangeTimes->{{3.964187190757567*^9, 
  3.9641872140168943`*^9}},ExpressionUUID->"33b12cc9-e125-435f-92fb-\
5e453d2e6e4c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"threshold", "=", "0.02"}], ";"}], "        ", 
  RowBox[{"(*", 
   RowBox[{"2", "%", " ", "change"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lookahead", "=", 
    RowBox[{"Quantity", "[", 
     RowBox[{"30", ",", "\"\<Minutes\>\""}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
   "How", " ", "far", " ", "to", " ", "look", " ", "ahead", " ", "for", " ", 
    "persistence"}], "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"timeSeries", "=", 
  RowBox[{"ds", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Timestamp (UTC)\>\"", ",", "\"\<Len Sassaman\>\""}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"times", "=", 
  RowBox[{"timeSeries", "[", 
   RowBox[{"All", ",", "\"\<Timestamp (UTC)\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"prices", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"timeSeries", "[", 
     RowBox[{"All", ",", "\"\<Len Sassaman\>\""}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"returns", "=", 
   RowBox[{"Differences", "[", 
    RowBox[{"Log", "[", "prices", "]"}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"jumpIndices", "=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "returns", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"returns", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "]"}], ">", "threshold"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.96418722930818*^9, 3.964187336084414*^9}, {
  3.964187541202381*^9, 3.964187602425414*^9}},
 CellLabel->
  "In[535]:=",ExpressionUUID->"504bcb0d-a5c5-4181-bdff-55c5a3e31760"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          8678865204587541924742667935523975772301083480000097189928], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Timestamp (UTC)"} -> 
            1, {All, "Len Sassaman"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Timestamp (UTC)" -> TypeSystem`PackageScope`AtomShape[75], 
                "Len Sassaman" -> TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 2, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Timestamp (UTC)", "Len Sassaman"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Real]}], 10354], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "Timestamp (UTC)"} -> 
            1, {All, "Len Sassaman"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Timestamp (UTC)" -> TypeSystem`PackageScope`AtomShape[75], 
                "Len Sassaman" -> TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 2, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Timestamp (UTC)", "Len Sassaman"}, {
             TypeSystem`Atom[DateObject], 
             TypeSystem`Atom[Real]}], 10354], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 2, 
         "DataRowCount" -> 10354, "DataColumnCount" -> 2, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Timestamp (UTC)", 
                    Style[
                    "Timestamp (UTC)", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Timestamp (UTC)"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Timestamp (UTC)"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Len Sassaman", 
                    Style[
                    "Len Sassaman", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Len Sassaman"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Len Sassaman"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:00:03\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:01:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:02:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:03:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:04:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:05:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:06:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.41"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:07:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:08:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:09:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:10:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:11:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:12:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:13:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:14:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.415"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:15:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:16:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:17:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:18:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:19:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Timestamp (UTC)"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.42"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Len Sassaman"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 10354, 1], {1, 10354 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 10354, 1], {1, 10354 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[10354, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[10354, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 10354, 1], {1, 10354 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 10354, 1], {1, 10354 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
         Replace[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
            Except[
             Alternatives[
              Blank[Spacer], ""]]] :> 
          TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
           TypeSystem`NestedGrid`PackagePrivate`bar]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
        "7217dd8e-01e4-43d2-80fa-ee6b5e2b9aab"][{99}, "Item", False]}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {
         249.186, {298.25030114746096`, 303.98223474121096`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {
        249.186, {298.25030114746096`, 303.98223474121096`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 8678865204587541924742667935523975772301083480000097189928,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9641873201678267`*^9, 3.964187327859621*^9}, {
  3.964187555567696*^9, 3.964187602802472*^9}},
 CellLabel->
  "Out[537]=",ExpressionUUID->"c499353a-1e2c-427e-9c38-124bf407be9c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          8678865204587541924742667935523975772319530224073806938152], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MulticolumnShape[1726, 6, 10354, 75], 120, 
           6, {All}], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Atom[DateObject], 10354], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MulticolumnShape[1726, 6, 10354, 75], 120, 
           6, {All}], "Type" -> TypeSystem`Vector[
           TypeSystem`Atom[DateObject], 10354], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 6, 
         "DataRowCount" -> 1726, "DataColumnCount" -> 6, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:00:03\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:01:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:02:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:03:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:04:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:05:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:06:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:07:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:08:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:09:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:10:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:11:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:12:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:13:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:14:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:15:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:16:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:17:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:18:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:19:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:20:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:21:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:22:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{23}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:23:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{24}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:24:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{25}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:25:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{26}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:26:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{27}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:27:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{28}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:28:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{29}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:29:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{30}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:30:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{31}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:31:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{32}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:32:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{33}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:33:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{34}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:34:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{35}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:35:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{36}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:36:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{37}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:37:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{38}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:38:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{39}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:39:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{40}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:40:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{41}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:41:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{42}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:42:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{43}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:43:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{44}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:44:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{45}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:45:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{46}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:46:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{47}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:47:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{48}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:48:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{49}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:49:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{50}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:50:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{51}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:51:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{52}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:52:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{53}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:53:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{54}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:54:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{55}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:55:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{56}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:56:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{57}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:57:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{58}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:58:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{59}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 04:59:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{60}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:00:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{61}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:01:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{62}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:02:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{63}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:03:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{64}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:04:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{65}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:05:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{66}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:06:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{67}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:07:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{68}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:08:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{69}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:09:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{70}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:10:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{71}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:11:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{72}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:12:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{73}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:13:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{74}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:14:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{75}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:15:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{76}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:16:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{77}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:17:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{78}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:18:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{79}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:19:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{80}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:20:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{81}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:21:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{82}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:22:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{83}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:23:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{84}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:24:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{85}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:25:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{86}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:26:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{87}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:27:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{88}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:28:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{89}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:29:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{90}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:30:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{91}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:31:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{92}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:32:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{93}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:33:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{94}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:34:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{95}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:35:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{96}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:36:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{97}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:37:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{98}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:38:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{99}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:39:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{100}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:40:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{101}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:41:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{102}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:42:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{103}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:43:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{104}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:44:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{105}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:45:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{106}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:46:01\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{107}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:47:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{108}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:48:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{109}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:49:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{110}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:50:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{111}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:51:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{112}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:52:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{113}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:53:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{114}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:54:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{115}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    GrayLevel[0.7490196078431373], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:55:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{116}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:56:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{117}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:57:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{118}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:58:02\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{119}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Fri 4 Oct 2024 05:59:01\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{120}, 
                    "Item", False], "Mouse"], 
                  ImageSize -> {{75, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}, Frame -> {{
                    Directive[
                    Dashing[{0, Small}], 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    GrayLevel[0.7490196078431373]}, Inherited}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1726, 1], {1, 1726 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1726, 1], {1, 1726 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"elements ", 1, "\[Dash]", 120, " of ", 
                    Style[10354, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"elements ", 1, "\[Dash]", 120, " of ", 
                    Style[10354, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {All}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1726, 1], {1, 1726 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1726, 1], {1, 1726 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
         Replace[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
            Except[
             Alternatives[
              Blank[Spacer], ""]]] :> 
          TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
           TypeSystem`NestedGrid`PackagePrivate`bar]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {
         849.0400000000001, {284.9513814697266, 290.6833150634766}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {
        849.0400000000001, {284.9513814697266, 290.6833150634766}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 8678865204587541924742667935523975772319530224073806938152,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9641873201678267`*^9, 3.964187327859621*^9}, {
  3.964187555567696*^9, 3.964187602963485*^9}},
 CellLabel->
  "Out[538]=",ExpressionUUID->"336aa79a-e7e0-40a8-8a2b-e1d30240ed9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.54`", ",", "0.54`", ",", "0.55`", ",", "0.56`", ",", "0.56`", ",", 
   "0.575`", ",", "0.575`", ",", "0.575`", ",", "0.575`", ",", "0.575`", ",", 
   "0.575`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", 
   "0.58`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", 
   "0.58`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", 
   "0.58`", ",", "0.58`", ",", "0.59`", ",", "0.59`", ",", "0.595`", ",", 
   "0.595`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", 
   "0.595`", ",", "0.595`", ",", "0.6`", ",", "0.6`", ",", "0.605`", ",", 
   "0.605`", ",", "0.6`", ",", "0.615`", ",", "0.635`", ",", "0.64`", ",", 
   "0.645`", ",", "0.645`", ",", "0.645`", ",", "0.65`", ",", "0.645`", ",", 
   "0.645`", ",", "0.645`", ",", "0.645`", ",", "0.645`", ",", "0.645`", ",", 
   "0.645`", ",", "0.645`", ",", "0.645`", ",", "0.645`", ",", "0.645`", ",", 
   "0.645`", ",", "0.645`", ",", "0.645`", ",", "0.645`", ",", "0.625`", ",", 
   "0.625`", ",", "0.625`", ",", "0.625`", ",", "0.625`", ",", "0.625`", ",", 
   "0.625`", ",", "0.625`", ",", "0.625`", ",", "0.625`", ",", "0.625`", ",", 
   "0.63`", ",", "0.63`", ",", "0.63`", ",", "0.63`", ",", "0.63`", ",", 
   "0.63`", ",", "0.63`", ",", "0.63`", ",", "0.63`", ",", "0.63`", ",", 
   "0.63`", ",", "0.63`", ",", "0.63`", ",", "0.63`", ",", "0.63`", ",", 
   "0.63`", ",", "0.63`", ",", "0.63`", ",", "0.62`", ",", "0.62`", ",", 
   "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", 
   "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", 
   "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", 
   "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", 
   "0.615`", ",", "0.61`", ",", "0.605`", ",", "0.605`", ",", "0.605`", ",", 
   "0.605`", ",", "0.605`", ",", "0.605`", ",", "0.605`", ",", "0.605`", ",", 
   "0.605`", ",", "0.605`", ",", "0.605`", ",", "0.605`", ",", "0.605`", ",", 
   "0.605`", ",", "0.6`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", 
   "0.595`", ",", "0.6`", ",", "0.6`", ",", "0.6`", ",", "0.6`", ",", "0.6`", 
   ",", "0.6`", ",", "0.6`", ",", "0.6`", ",", "0.6`", ",", "0.6`", ",", 
   "0.6`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", 
   "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", 
   "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.595`", ",", 
   "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", 
   "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", 
   "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", 
   "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", 
   "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", 
   "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", 
   "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", "0.59`", ",", 
   "0.585`", ",", "0.59`", ",", "0.585`", ",", "0.58`", ",", "0.57`", ",", 
   "0.57`", ",", "0.57`", ",", "0.57`", ",", "0.57`", ",", "0.57`", ",", 
   "0.57`", ",", "0.57`", ",", "0.57`", ",", "0.57`", ",", "0.57`", ",", 
   "0.57`", ",", "0.57`", ",", "0.57`", ",", "0.575`", ",", "0.575`", ",", 
   "0.575`", ",", "0.57`", ",", "0.575`", ",", "0.575`", ",", "0.575`", ",", 
   "0.575`", ",", "0.575`", ",", "0.57`", ",", "0.57`", ",", "0.57`", ",", 
   "0.575`", ",", "0.575`", ",", "0.575`", ",", "0.575`", ",", "0.57`", ",", 
   "0.57`", ",", "0.57`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", 
   "0.565`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", 
   "0.565`", ",", "0.565`", ",", "0.565`", ",", "0.58`", ",", "0.58`", ",", 
   "0.585`", ",", "0.58`", ",", "0.58`", ",", "0.575`", ",", "0.575`", ",", 
   "0.58`", ",", "0.58`", ",", "0.585`", ",", "0.585`", ",", "0.585`", ",", 
   "0.585`", ",", "0.58`", ",", "0.58`", ",", "0.585`", ",", "0.585`", ",", 
   "0.585`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", 
   "0.595`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", "0.59`", ",", 
   "0.59`", ",", "0.585`", ",", "0.585`", ",", "0.58`", ",", "0.58`", ",", 
   "0.575`", ",", "0.575`", ",", "0.575`", ",", "0.58`", ",", "0.58`", ",", 
   "0.58`", ",", "0.585`", ",", "0.585`", ",", "0.585`", ",", "0.585`", ",", 
   "0.585`", ",", "0.585`", ",", "0.585`", ",", "0.58`", ",", "0.58`", ",", 
   "0.58`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", "0.575`", ",", 
   "0.575`", ",", "0.485`", ",", "0.48`", ",", "0.475`", ",", "0.475`", ",", 
   "0.55`", ",", "0.49`", ",", "0.485`", ",", "0.485`", ",", "0.49`", ",", 
   "0.49`", ",", "0.49`", ",", "0.505`", ",", "0.505`", ",", "0.505`", ",", 
   "0.505`", ",", "0.505`", ",", "0.505`", ",", "0.5`", ",", "0.5`", ",", 
   "0.535`", ",", "0.495`", ",", "0.495`", ",", "0.49`", ",", "0.49`", ",", 
   "0.49`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.48`", ",", "0.485`", ",", "0.485`", ",", "0.475`", ",", "0.475`", ",", 
   "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.47`", ",", "0.465`", ",", "0.47`", ",", 
   "0.475`", ",", "0.46`", ",", "0.46`", ",", "0.45`", ",", "0.4`", ",", 
   "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",",
    "0.39`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.375`", ",", "0.38`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.38`", ",", "0.38`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.385`", ",", "0.38`", ",", 
   "0.365`", ",", "0.355`", ",", "0.385`", ",", "0.375`", ",", "0.365`", ",", 
   "0.365`", ",", "0.375`", ",", "0.37`", ",", "0.37`", ",", "0.375`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.375`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.355`", ",", "0.355`", ",", "0.35`", ",", "0.35`", ",", "0.34`", ",", 
   "0.34`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", 
   "0.38`", ",", "0.38`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.365`", ",", 
   "0.465`", ",", "0.465`", ",", "0.46`", ",", "0.455`", ",", "0.46`", ",", 
   "0.475`", ",", "0.47`", ",", "0.465`", ",", "0.47`", ",", "0.465`", ",", 
   "0.465`", ",", "0.46`", ",", "0.47`", ",", "0.42`", ",", "0.41`", ",", 
   "0.435`", ",", "0.435`", ",", "0.405`", ",", "0.395`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.38`", ",", "0.375`", ",", "0.415`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.475`", ",", "0.47`", ",", "0.385`", ",", "0.38`", ",", 
   "0.365`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", 
   "0.355`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.375`", ",", 
   "0.42`", ",", "0.445`", ",", "0.44`", ",", "0.445`", ",", "0.455`", ",", 
   "0.455`", ",", "0.45`", ",", "0.45`", ",", "0.45`", ",", "0.45`", ",", 
   "0.45`", ",", "0.445`", ",", "0.44`", ",", "0.45`", ",", "0.45`", ",", 
   "0.45`", ",", "0.46`", ",", "0.455`", ",", "0.505`", ",", "0.465`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.445`", ",", "0.405`", ",", "0.405`", ",", "0.43`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.495`", ",", 
   "0.53`", ",", "0.525`", ",", "0.52`", ",", "0.46`", ",", "0.475`", ",", 
   "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", 
   "0.49`", ",", "0.475`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", 
   "0.46`", ",", "0.455`", ",", "0.455`", ",", "0.485`", ",", "0.495`", ",", 
   "0.485`", ",", "0.475`", ",", "0.455`", ",", "0.475`", ",", "0.49`", ",", 
   "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.475`", ",", "0.48`", ",", 
   "0.48`", ",", "0.48`", ",", "0.505`", ",", "0.49`", ",", "0.49`", ",", 
   "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.495`", ",", "0.495`", ",", 
   "0.49`", ",", "0.48`", ",", "0.48`", ",", "0.5`", ",", "0.48`", ",", 
   "0.475`", ",", "0.49`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.485`", ",", "0.47`", ",", "0.47`", ",", "0.485`", ",", "0.475`", ",", 
   "0.47`", ",", "0.48`", ",", "0.475`", ",", "0.475`", ",", "0.46`", ",", 
   "0.47`", ",", "0.47`", ",", "0.48`", ",", "0.475`", ",", "0.47`", ",", 
   "0.47`", ",", "0.47`", ",", "0.455`", ",", "0.455`", ",", "0.46`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.46`", ",", "0.44`", ",", "0.44`", ",", "0.67`", ",", "0.43`", ",", 
   "0.435`", ",", "0.47`", ",", "0.48`", ",", "0.48`", ",", "0.475`", ",", 
   "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", 
   "0.47`", ",", "0.495`", ",", "0.48`", ",", "0.47`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.48`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.48`", ",", "0.465`", ",", "0.48`", ",", 
   "0.475`", ",", "0.475`", ",", "0.47`", ",", "0.485`", ",", "0.485`", ",", 
   "0.485`", ",", "0.485`", ",", "0.49`", ",", "0.485`", ",", "0.48`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.465`", ",", "0.465`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.48`", ",", "0.475`", ",", 
   "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", 
   "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.475`", ",", 
   "0.485`", ",", "0.49`", ",", "0.52`", ",", "0.52`", ",", "0.51`", ",", 
   "0.51`", ",", "0.485`", ",", "0.49`", ",", "0.455`", ",", "0.455`", ",", 
   "0.46`", ",", "0.465`", ",", "0.51`", ",", "0.5`", ",", "0.5`", ",", 
   "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", 
   "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.495`", ",", 
   "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.485`", ",", "0.485`", ",", "0.51`", ",", "0.505`", ",", "0.485`", ",", 
   "0.5`", ",", "0.5`", ",", "0.505`", ",", "0.505`", ",", "0.5`", ",", 
   "0.5`", ",", "0.505`", ",", "0.505`", ",", "0.505`", ",", "0.505`", ",", 
   "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",",
    "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",",
    "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.505`", ",", "0.5`",
    ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.49`", ",", 
   "0.48`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.485`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", 
   "0.475`", ",", "0.49`", ",", "0.485`", ",", "0.485`", ",", "0.48`", ",", 
   "0.485`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", 
   "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", 
   "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.495`", ",", "0.495`", ",", 
   "0.495`", ",", "0.495`", ",", "0.495`", ",", "0.495`", ",", "0.495`", ",", 
   "0.495`", ",", "0.495`", ",", "0.495`", ",", "0.495`", ",", "0.495`", ",", 
   "0.495`", ",", "0.495`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.48`", ",", "0.48`", ",", 
   "0.48`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", 
   "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.465`", ",", "0.46`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.45`", ",", "0.45`", ",", "0.45`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.45`", ",", "0.45`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.44`", ",", "0.44`", ",", 
   "0.42`", ",", "0.45`", ",", "0.45`", ",", "0.45`", ",", "0.45`", ",", 
   "0.45`", ",", "0.45`", ",", "0.445`", ",", "0.45`", ",", "0.45`", ",", 
   "0.45`", ",", "0.455`", ",", "0.45`", ",", "0.445`", ",", "0.445`", ",", 
   "0.45`", ",", "0.47`", ",", "0.465`", ",", "0.49`", ",", "0.48`", ",", 
   "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", 
   "0.47`", ",", "0.46`", ",", "0.46`", ",", "0.48`", ",", "0.48`", ",", 
   "0.48`", ",", "0.48`", ",", "0.5`", ",", "0.49`", ",", "0.49`", ",", 
   "0.45`", ",", "0.45`", ",", "0.45`", ",", "0.45`", ",", "0.455`", ",", 
   "0.455`", ",", "0.46`", ",", "0.47`", ",", "0.48`", ",", "0.54`", ",", 
   "0.475`", ",", "0.47`", ",", "0.485`", ",", "0.56`", ",", "0.49`", ",", 
   "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.48`", ",", "0.47`", ",", 
   "0.47`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", 
   "0.465`", ",", "0.465`", ",", "0.47`", ",", "0.46`", ",", "0.46`", ",", 
   "0.46`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.49`", ",", "0.495`", ",", "0.495`", ",", "0.495`", ",", 
   "0.495`", ",", "0.515`", ",", "0.505`", ",", "0.5`", ",", "0.5`", ",", 
   "0.5`", ",", "0.5`", ",", "0.52`", ",", "0.525`", ",", "0.525`", ",", 
   "0.515`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", 
   "0.53`", ",", "0.52`", ",", "0.515`", ",", "0.52`", ",", "0.52`", ",", 
   "0.52`", ",", "0.52`", ",", "0.605`", ",", "0.6`", ",", "0.59`", ",", 
   "0.595`", ",", "0.585`", ",", "0.565`", ",", "0.55`", ",", "0.555`", ",", 
   "0.54`", ",", "0.54`", ",", "0.55`", ",", "0.54`", ",", "0.535`", ",", 
   "0.54`", ",", "0.51`", ",", "0.51`", ",", "0.515`", ",", "0.515`", ",", 
   "0.515`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", 
   "0.515`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", 
   "0.515`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", 
   "0.51`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", 
   "0.515`", ",", "0.515`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", 
   "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", 
   "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", 
   "0.51`", ",", "0.51`", ",", "0.515`", ",", "0.515`", ",", "0.51`", ",", 
   "0.51`", ",", "0.51`", ",", "0.515`", ",", "0.515`", ",", "0.51`", ",", 
   "0.51`", ",", "0.515`", ",", "0.515`", ",", "0.51`", ",", "0.505`", ",", 
   "0.505`", ",", "0.505`", ",", "0.505`", ",", "0.515`", ",", "0.515`", ",", 
   "0.515`", ",", "0.51`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", 
   "0.52`", ",", "0.535`", ",", "0.535`", ",", "0.54`", ",", "0.54`", ",", 
   "0.54`", ",", "0.54`", ",", "0.54`", ",", "0.54`", ",", "0.545`", ",", 
   "0.545`", ",", "0.545`", ",", "0.545`", ",", "0.53`", ",", "0.53`", ",", 
   "0.53`", ",", "0.53`", ",", "0.53`", ",", "0.53`", ",", "0.53`", ",", 
   "0.53`", ",", "0.53`", ",", "0.53`", ",", "0.53`", ",", "0.535`", ",", 
   "0.535`", ",", "0.55`", ",", "0.555`", ",", "0.555`", ",", "0.555`", ",", 
   "0.55`", ",", "0.555`", ",", "0.555`", ",", "0.555`", ",", "0.555`", ",", 
   "0.55`", ",", "0.55`", ",", "0.54`", ",", "0.54`", ",", "0.535`", ",", 
   "0.55`", ",", "0.53`", ",", "0.53`", ",", "0.535`", ",", "0.535`", ",", 
   "0.535`", ",", "0.53`", ",", "0.53`", ",", "0.535`", ",", "0.53`", ",", 
   "0.53`", ",", "0.525`", ",", "0.535`", ",", "0.53`", ",", "0.53`", ",", 
   "0.525`", ",", "0.525`", ",", "0.525`", ",", "0.525`", ",", "0.525`", ",", 
   "0.525`", ",", "0.53`", ",", "0.53`", ",", "0.53`", ",", "0.535`", ",", 
   "0.52`", ",", "0.52`", ",", "0.52`", ",", "0.52`", ",", "0.525`", ",", 
   "0.525`", ",", "0.525`", ",", "0.52`", ",", "0.52`", ",", "0.52`", ",", 
   "0.525`", ",", "0.525`", ",", "0.525`", ",", "0.525`", ",", "0.525`", ",", 
   "0.525`", ",", "0.52`", ",", "0.52`", ",", "0.52`", ",", "0.53`", ",", 
   "0.53`", ",", "0.53`", ",", "0.535`", ",", "0.525`", ",", "0.525`", ",", 
   "0.53`", ",", "0.525`", ",", "0.525`", ",", "0.525`", ",", "0.525`", ",", 
   "0.525`", ",", "0.525`", ",", "0.52`", ",", "0.525`", ",", "0.525`", ",", 
   "0.525`", ",", "0.515`", ",", "0.52`", ",", "0.52`", ",", "0.52`", ",", 
   "0.52`", ",", "0.52`", ",", "0.52`", ",", "0.52`", ",", "0.52`", ",", 
   "0.52`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", 
   "0.515`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", 
   "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.505`", ",", 
   "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", 
   "0.51`", ",", "0.505`", ",", "0.505`", ",", "0.505`", ",", "0.505`", ",", 
   "0.505`", ",", "0.505`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", 
   "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", 
   "0.51`", ",", "0.505`", ",", "0.505`", ",", "0.505`", ",", "0.505`", ",", 
   "0.505`", ",", "0.505`", ",", "0.53`", ",", "0.525`", ",", "0.53`", ",", 
   "0.525`", ",", "0.555`", ",", "0.67`", ",", "0.635`", ",", "0.64`", ",", 
   "0.64`", ",", "0.64`", ",", "0.64`", ",", "0.64`", ",", "0.64`", ",", 
   "0.64`", ",", "0.53`", ",", "0.515`", ",", "0.515`", ",", "0.53`", ",", 
   "0.525`", ",", "0.515`", ",", "0.52`", ",", "0.525`", ",", "0.525`", ",", 
   "0.525`", ",", "0.525`", ",", "0.525`", ",", "0.525`", ",", "0.515`", ",", 
   "0.525`", ",", "0.525`", ",", "0.525`", ",", "0.525`", ",", "0.525`", ",", 
   "0.525`", ",", "0.535`", ",", "0.535`", ",", "0.545`", ",", "0.545`", ",", 
   "0.545`", ",", "0.545`", ",", "0.545`", ",", "0.545`", ",", "0.545`", ",", 
   "0.545`", ",", "0.545`", ",", "0.545`", ",", "0.545`", ",", "0.545`", ",", 
   "0.545`", ",", "0.565`", ",", "0.575`", ",", "0.57`", ",", "0.57`", ",", 
   "0.565`", ",", "0.55`", ",", "0.555`", ",", "0.56`", ",", "0.55`", ",", 
   "0.56`", ",", "0.565`", ",", "0.56`", ",", "0.56`", ",", "0.52`", ",", 
   "0.515`", ",", "0.525`", ",", "0.525`", ",", "0.525`", ",", "0.52`", ",", 
   "0.5`", ",", "0.495`", ",", "0.495`", ",", "0.5`", ",", "0.525`", ",", 
   "0.67`", ",", "0.575`", ",", "0.565`", ",", "0.57`", ",", "0.57`", ",", 
   "0.585`", ",", "0.59`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", 
   "0.58`", ",", "0.575`", ",", "0.575`", ",", "0.57`", ",", "0.555`", ",", 
   "0.555`", ",", "0.555`", ",", "0.555`", ",", "0.555`", ",", "0.555`", ",", 
   "0.56`", ",", "0.56`", ",", "0.575`", ",", "0.56`", ",", "0.56`", ",", 
   "0.695`", ",", "0.695`", ",", "0.665`", ",", "0.635`", ",", "0.615`", ",", 
   "0.57`", ",", "0.56`", ",", "0.56`", ",", "0.68`", ",", "0.68`", ",", 
   "0.67`", ",", "0.69`", ",", "0.66`", ",", "0.645`", ",", "0.615`", ",", 
   "0.59`", ",", "0.575`", ",", "0.61`", ",", "0.61`", ",", "0.595`", ",", 
   "0.62`", ",", "0.62`", ",", "0.62`", ",", "0.62`", ",", "0.63`", ",", 
   "0.615`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", 
   "0.595`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", 
   "0.595`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", "0.585`", ",", 
   "0.585`", ",", "0.585`", ",", "0.585`", ",", "0.585`", ",", "0.585`", ",", 
   "0.575`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", "0.585`", ",", 
   "0.59`", ",", "0.59`", ",", "0.585`", ",", "0.575`", ",", "0.575`", ",", 
   "0.575`", ",", "0.575`", ",", "0.575`", ",", "0.575`", ",", "0.58`", ",", 
   "0.58`", ",", "0.57`", ",", "0.58`", ",", "0.58`", ",", "0.605`", ",", 
   "0.595`", ",", "0.6`", ",", "0.6`", ",", "0.59`", ",", "0.595`", ",", 
   "0.585`", ",", "0.59`", ",", "0.595`", ",", "0.595`", ",", "0.595`", ",", 
   "0.595`", ",", "0.685`", ",", "0.65`", ",", "0.61`", ",", "0.585`", ",", 
   "0.615`", ",", "0.725`", ",", "0.695`", ",", "0.69`", ",", "0.67`", ",", 
   "0.68`", ",", "0.69`", ",", "0.67`", ",", "0.63`", ",", "0.635`", ",", 
   "0.625`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", 
   "0.575`", ",", "0.57`", ",", "0.56`", ",", "0.565`", ",", "0.56`", ",", 
   "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", 
   "0.715`", ",", "0.69`", ",", "0.635`", ",", "0.64`", ",", "0.67`", ",", 
   "0.63`", ",", "0.625`", ",", "0.625`", ",", "0.625`", ",", "0.63`", ",", 
   "0.63`", ",", "0.63`", ",", "0.63`", ",", "0.645`", ",", "0.635`", ",", 
   "0.635`", ",", "0.64`", ",", "0.65`", ",", "0.64`", ",", "0.615`", ",", 
   "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", "0.615`", ",", 
   "0.615`", ",", "0.605`", ",", "0.605`", ",", "0.605`", ",", "0.605`", ",", 
   "0.585`", ",", "0.585`", ",", "0.585`", ",", "0.58`", ",", "0.58`", ",", 
   "0.58`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", "0.58`", ",", 
   "0.58`", ",", "0.565`", ",", "0.57`", ",", "0.57`", ",", "0.57`", ",", 
   "0.57`", ",", "0.57`", ",", "0.57`", ",", "0.57`", ",", "0.57`", ",", 
   "0.57`", ",", "0.57`", ",", "0.58`", ",", "0.57`", ",", "0.57`", ",", 
   "0.57`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", 
   "0.565`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", 
   "0.57`", ",", "0.57`", ",", "0.57`", ",", "0.57`", ",", "0.57`", ",", 
   "0.565`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", "0.565`", ",", 
   "0.56`", ",", "0.535`", ",", "0.535`", ",", "0.535`", ",", "0.515`", ",", 
   "0.53`", ",", "0.53`", ",", "0.525`", ",", "0.525`", ",", "0.53`", ",", 
   "0.53`", ",", "0.54`", ",", "0.54`", ",", "0.45`", ",", "0.445`", ",", 
   "0.45`", ",", "0.45`", ",", "0.45`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.445`", ",", "0.445`", ",", 
   "0.435`", ",", "0.435`", ",", "0.455`", ",", "0.44`", ",", "0.445`", ",", 
   "0.445`", ",", "0.44`", ",", "0.435`", ",", "0.45`", ",", "0.425`", ",", 
   "0.415`", ",", "0.415`", ",", "0.455`", ",", "0.45`", ",", "0.44`", ",", 
   "0.45`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.47`", ",", 
   "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.49`", ",", 
   "0.475`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", 
   "0.48`", ",", "0.48`", ",", "0.46`", ",", "0.44`", ",", "0.44`", ",", 
   "0.455`", ",", "0.47`", ",", "0.46`", ",", "0.455`", ",", "0.47`", ",", 
   "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.465`", ",", "0.465`", ",", 
   "0.465`", ",", "0.465`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", 
   "0.465`", ",", "0.455`", ",", "0.47`", ",", "0.47`", ",", "0.48`", ",", 
   "0.505`", ",", "0.535`", ",", "0.53`", ",", "0.53`", ",", "0.53`", ",", 
   "0.53`", ",", "0.53`", ",", "0.505`", ",", "0.495`", ",", "0.495`", ",", 
   "0.53`", ",", "0.495`", ",", "0.495`", ",", "0.495`", ",", "0.55`", ",", 
   "0.55`", ",", "0.545`", ",", "0.55`", ",", "0.525`", ",", "0.525`", ",", 
   "0.525`", ",", "0.525`", ",", "0.515`", ",", "0.52`", ",", "0.51`", ",", 
   "0.51`", ",", "0.505`", ",", "0.505`", ",", "0.495`", ",", "0.495`", ",", 
   "0.495`", ",", "0.495`", ",", "0.495`", ",", "0.49`", ",", "0.495`", ",", 
   "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.49`", ",", 
   "0.495`", ",", "0.495`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.445`", ",", "0.445`", ",", 
   "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", 
   "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", 
   "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", 
   "0.445`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.445`", ",", 
   "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", 
   "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.425`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.42`", ",", 
   "0.415`", ",", "0.425`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.44`", ",", 
   "0.42`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.43`", ",", "0.425`", ",", "0.415`", ",", "0.415`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.425`", ",", "0.425`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.41`", ",", "0.415`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.43`", ",", "0.44`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.43`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.415`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.41`", ",", "0.41`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.425`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.435`", ",", "0.425`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.44`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.425`", ",", "0.425`", ",", "0.42`", ",", "0.45`", ",", "0.43`", ",", 
   "0.435`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.43`", ",", 
   "0.425`", ",", "0.455`", ",", "0.425`", ",", "0.44`", ",", "0.435`", ",", 
   "0.465`", ",", "0.45`", ",", "0.445`", ",", "0.435`", ",", "0.47`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.465`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.45`", ",", "0.445`", ",", 
   "0.445`", ",", "0.46`", ",", "0.46`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.45`", ",", "0.45`", ",", 
   "0.45`", ",", "0.45`", ",", "0.45`", ",", "0.47`", ",", "0.46`", ",", 
   "0.45`", ",", "0.45`", ",", "0.45`", ",", "0.45`", ",", "0.45`", ",", 
   "0.495`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", 
   "0.465`", ",", "0.455`", ",", "0.475`", ",", "0.475`", ",", "0.49`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.47`", ",", "0.47`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.485`", ",", "0.475`", ",", "0.465`", ",", 
   "0.5`", ",", "0.485`", ",", "0.53`", ",", "0.485`", ",", "0.485`", ",", 
   "0.485`", ",", "0.475`", ",", "0.48`", ",", "0.475`", ",", "0.485`", ",", 
   "0.48`", ",", "0.505`", ",", "0.495`", ",", "0.49`", ",", "0.485`", ",", 
   "0.485`", ",", "0.485`", ",", "0.49`", ",", "0.495`", ",", "0.495`", ",", 
   "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", 
   "0.485`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.475`", ",", 
   "0.455`", ",", "0.455`", ",", "0.45`", ",", "0.43`", ",", "0.42`", ",", 
   "0.425`", ",", "0.43`", ",", "0.465`", ",", "0.465`", ",", "0.46`", ",", 
   "0.445`", ",", "0.455`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.47`", ",", 
   "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.465`", ",", 
   "0.465`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.49`", ",", 
   "0.49`", ",", "0.49`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.485`", ",", "0.485`", ",", "0.48`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", 
   "0.455`", ",", "0.445`", ",", "0.445`", ",", "0.47`", ",", "0.46`", ",", 
   "0.475`", ",", "0.455`", ",", "0.45`", ",", "0.45`", ",", "0.455`", ",", 
   "0.44`", ",", "0.445`", ",", "0.445`", ",", "0.465`", ",", "0.46`", ",", 
   "0.465`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", 
   "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.47`", ",", "0.465`", ",", "0.465`", ",", 
   "0.47`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.465`", ",", "0.47`", ",", "0.47`", ",", 
   "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.465`", ",", 
   "0.465`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", 
   "0.475`", ",", "0.47`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", 
   "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.495`", ",", 
   "0.475`", ",", "0.475`", ",", "0.485`", ",", "0.485`", ",", "0.48`", ",", 
   "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.475`", ",", "0.455`", ",", 
   "0.465`", ",", "0.47`", ",", "0.465`", ",", "0.455`", ",", "0.47`", ",", 
   "0.465`", ",", "0.435`", ",", "0.43`", ",", "0.43`", ",", "0.435`", ",", 
   "0.425`", ",", "0.415`", ",", "0.415`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.415`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.395`", ",", "0.415`", ",", "0.415`", ",", "0.405`", ",", 
   "0.4`", ",", "0.41`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.375`", ",", "0.38`", ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.365`", ",", "0.375`", ",", 
   "0.375`", ",", "0.38`", ",", "0.38`", ",", "0.395`", ",", "0.405`", ",", 
   "0.395`", ",", "0.395`", ",", "0.4`", ",", "0.405`", ",", "0.4`", ",", 
   "0.41`", ",", "0.405`", ",", "0.41`", ",", "0.415`", ",", "0.425`", ",", 
   "0.415`", ",", "0.42`", ",", "0.42`", ",", "0.425`", ",", "0.415`", ",", 
   "0.43`", ",", "0.415`", ",", "0.41`", ",", "0.42`", ",", "0.415`", ",", 
   "0.425`", ",", "0.425`", ",", "0.43`", ",", "0.425`", ",", "0.415`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.425`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.435`", ",", "0.435`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.435`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.4`", ",", "0.395`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.4`", ",", "0.37`", ",", "0.375`", ",", "0.395`", ",", "0.375`", ",", 
   "0.31`", ",", "0.33`", ",", "0.34`", ",", "0.365`", ",", "0.355`", ",", 
   "0.35`", ",", "0.415`", ",", "0.395`", ",", "0.39`", ",", "0.395`", ",", 
   "0.41`", ",", "0.375`", ",", "0.375`", ",", "0.37`", ",", "0.38`", ",", 
   "0.385`", ",", "0.385`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.355`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", 
   "0.355`", ",", "0.335`", ",", "0.315`", ",", "0.21`", ",", "0.205`", ",", 
   "0.205`", ",", "0.255`", ",", "0.185`", ",", "0.205`", ",", "0.235`", ",", 
   "0.235`", ",", "0.21`", ",", "0.225`", ",", "0.225`", ",", "0.225`", ",", 
   "0.225`", ",", "0.305`", ",", "0.31`", ",", "0.305`", ",", "0.3`", ",", 
   "0.295`", ",", "0.3`", ",", "0.3`", ",", "0.285`", ",", "0.285`", ",", 
   "0.29`", ",", "0.29`", ",", "0.29`", ",", "0.285`", ",", "0.285`", ",", 
   "0.285`", ",", "0.285`", ",", "0.28`", ",", "0.275`", ",", "0.275`", ",", 
   "0.285`", ",", "0.305`", ",", "0.305`", ",", "0.305`", ",", "0.295`", ",", 
   "0.295`", ",", "0.295`", ",", "0.295`", ",", "0.305`", ",", "0.305`", ",", 
   "0.305`", ",", "0.305`", ",", "0.305`", ",", "0.31`", ",", "0.31`", ",", 
   "0.31`", ",", "0.3`", ",", "0.3`", ",", "0.31`", ",", "0.32`", ",", 
   "0.31`", ",", "0.305`", ",", "0.31`", ",", "0.295`", ",", "0.295`", ",", 
   "0.295`", ",", "0.31`", ",", "0.3`", ",", "0.3`", ",", "0.3`", ",", "0.3`",
    ",", "0.295`", ",", "0.295`", ",", "0.295`", ",", "0.295`", ",", "0.3`", ",",
    "0.3`", ",", "0.3`", ",", "0.3`", ",", "0.3`", ",", "0.3`", ",", "0.305`",
    ",", "0.305`", ",", "0.305`", ",", "0.305`", ",", "0.305`", ",", "0.305`",
    ",", "0.305`", ",", "0.31`", ",", "0.315`", ",", "0.295`", ",", "0.315`", 
   ",", "0.3`", ",", "0.295`", ",", "0.295`", ",", "0.295`", ",", "0.3`", ",",
    "0.305`", ",", "0.315`", ",", "0.315`", ",", "0.32`", ",", "0.335`", ",", 
   "0.32`", ",", "0.305`", ",", "0.295`", ",", "0.305`", ",", "0.325`", ",", 
   "0.31`", ",", "0.3`", ",", "0.3`", ",", "0.3`", ",", "0.3`", ",", "0.3`", ",",
    "0.3`", ",", "0.3`", ",", "0.3`", ",", "0.295`", ",", "0.3`", ",", 
   "0.305`", ",", "0.305`", ",", "0.305`", ",", "0.305`", ",", "0.305`", ",", 
   "0.305`", ",", "0.295`", ",", "0.295`", ",", "0.305`", ",", "0.305`", ",", 
   "0.3`", ",", "0.3`", ",", "0.32`", ",", "0.31`", ",", "0.3`", ",", "0.29`",
    ",", "0.285`", ",", "0.285`", ",", "0.285`", ",", "0.31`", ",", "0.305`", 
   ",", "0.305`", ",", "0.305`", ",", "0.295`", ",", "0.295`", ",", "0.3`", ",",
    "0.3`", ",", "0.325`", ",", "0.325`", ",", "0.32`", ",", "0.32`", ",", 
   "0.315`", ",", "0.315`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", 
   "0.335`", ",", "0.34`", ",", "0.34`", ",", "0.345`", ",", "0.345`", ",", 
   "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.38`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.39`", ",", "0.39`", ",", 
   "0.41`", ",", "0.415`", ",", "0.405`", ",", "0.42`", ",", "0.42`", ",", 
   "0.43`", ",", "0.415`", ",", "0.41`", ",", "0.41`", ",", "0.435`", ",", 
   "0.435`", ",", "0.36`", ",", "0.37`", ",", "0.375`", ",", "0.355`", ",", 
   "0.405`", ",", "0.425`", ",", "0.45`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.46`", ",", "0.445`", ",", "0.44`", ",", "0.445`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.435`", ",", 
   "0.45`", ",", "0.465`", ",", "0.47`", ",", "0.465`", ",", "0.45`", ",", 
   "0.455`", ",", "0.455`", ",", "0.52`", ",", "0.5`", ",", "0.49`", ",", 
   "0.485`", ",", "0.475`", ",", "0.47`", ",", "0.47`", ",", "0.47`", ",", 
   "0.475`", ",", "0.46`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", 
   "0.475`", ",", "0.48`", ",", "0.48`", ",", "0.48`", ",", "0.46`", ",", 
   "0.49`", ",", "0.485`", ",", "0.5`", ",", "0.495`", ",", "0.495`", ",", 
   "0.49`", ",", "0.475`", ",", "0.47`", ",", "0.485`", ",", "0.475`", ",", 
   "0.485`", ",", "0.485`", ",", "0.475`", ",", "0.48`", ",", "0.475`", ",", 
   "0.475`", ",", "0.495`", ",", "0.495`", ",", "0.495`", ",", "0.495`", ",", 
   "0.5`", ",", "0.5`", ",", "0.505`", ",", "0.505`", ",", "0.5`", ",", 
   "0.495`", ",", "0.515`", ",", "0.515`", ",", "0.515`", ",", "0.51`", ",", 
   "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.51`", ",", "0.505`", ",", 
   "0.505`", ",", "0.505`", ",", "0.5`", ",", "0.5`", ",", "0.505`", ",", 
   "0.51`", ",", "0.51`", ",", "0.465`", ",", "0.49`", ",", "0.495`", ",", 
   "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", 
   "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", 
   "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", "0.49`", ",", 
   "0.485`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.45`", ",", "0.435`", ",", "0.44`", ",", 
   "0.45`", ",", "0.445`", ",", "0.445`", ",", "0.45`", ",", "0.455`", ",", 
   "0.455`", ",", "0.445`", ",", "0.44`", ",", "0.45`", ",", "0.45`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.43`", ",", 
   "0.425`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.425`", ",", "0.425`", ",", "0.37`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.37`", ",", "0.365`", ",", "0.37`", ",", 
   "0.37`", ",", "0.37`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.42`", ",", "0.41`", ",", 
   "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.39`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.415`", ",", "0.42`", ",", "0.415`", ",", "0.41`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.36`", ",", "0.365`", ",", 
   "0.375`", ",", "0.375`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", 
   "0.37`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.385`", ",", 
   "0.375`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.39`", ",", "0.4`", ",", "0.4`", ",", "0.4`",
    ",", "0.405`", ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.38`", ",",
    "0.38`", ",", "0.38`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.38`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.39`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.435`", ",", "0.43`", ",", "0.425`", ",", "0.395`", ",", "0.395`", ",", 
   "0.435`", ",", "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.43`", ",", "0.435`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.4`", ",", "0.405`", ",", "0.415`", ",", "0.415`", ",", "0.455`", ",", 
   "0.45`", ",", "0.455`", ",", "0.45`", ",", "0.45`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.46`", ",", "0.46`", ",", 
   "0.455`", ",", "0.42`", ",", "0.425`", ",", "0.415`", ",", "0.42`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.43`", ",", 
   "0.435`", ",", "0.435`", ",", "0.425`", ",", "0.425`", ",", "0.445`", ",", 
   "0.445`", ",", "0.445`", ",", "0.445`", ",", "0.43`", ",", "0.43`", ",", 
   "0.435`", ",", "0.43`", ",", "0.445`", ",", "0.445`", ",", "0.45`", ",", 
   "0.445`", ",", "0.45`", ",", "0.445`", ",", "0.445`", ",", "0.4`", ",", 
   "0.4`", ",", "0.4`", ",", "0.42`", ",", "0.405`", ",", "0.4`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.38`", ",", 
   "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.375`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.395`", ",", "0.395`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.41`", ",", "0.415`", ",", "0.41`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.415`", ",", "0.415`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.425`", ",", "0.43`", ",", 
   "0.43`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.405`", ",", "0.405`", ",", "0.4`", ",", "0.395`", ",", "0.405`", ",", 
   "0.405`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", 
   ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", 
   "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",",
    "0.4`", ",", "0.4`", ",", "0.405`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.42`", ",", "0.425`", ",", "0.425`", ",", "0.43`", ",", 
   "0.435`", ",", "0.445`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.445`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.455`", ",", "0.455`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.46`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", 
   "0.465`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.45`", ",", "0.455`", ",", "0.46`", ",", "0.455`", ",", 
   "0.46`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.45`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", 
   "0.445`", ",", "0.44`", ",", "0.445`", ",", "0.445`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.445`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.445`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.425`", ",", "0.425`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.415`", ",", "0.415`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.425`", ",", 
   "0.425`", ",", "0.415`", ",", "0.415`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.435`", ",", "0.435`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.445`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.43`", ",", 
   "0.425`", ",", "0.425`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.425`", ",", "0.425`", ",", "0.435`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.425`", ",", "0.42`", ",", "0.415`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.425`", ",", "0.425`", ",", 
   "0.415`", ",", "0.415`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.39`", ",", "0.38`", ",", "0.39`", ",", "0.38`", ",", "0.39`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.375`", ",", "0.38`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", 
   "0.4`", ",", "0.4`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.385`", ",", "0.385`", ",", "0.4`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.4`", ",", "0.405`", ",", "0.395`", ",", "0.395`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.395`", ",", 
   "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.39`", ",", 
   "0.42`", ",", "0.4`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.41`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.395`", ",", "0.405`", ",", "0.395`", ",", "0.405`", ",", 
   "0.4`", ",", "0.4`", ",", "0.395`", ",", "0.395`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.4`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.365`", ",", "0.37`", ",", "0.37`", ",", "0.36`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", 
   "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", 
   "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.395`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.435`", ",", "0.43`", ",", "0.42`", ",", 
   "0.42`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.385`", ",", "0.375`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.385`", ",", "0.385`", ",", "0.395`", ",", "0.395`", ",", "0.4`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.405`", ",", "0.425`", ",", 
   "0.44`", ",", "0.435`", ",", "0.445`", ",", "0.44`", ",", "0.435`", ",", 
   "0.43`", ",", "0.43`", ",", "0.425`", ",", "0.425`", ",", "0.43`", ",", 
   "0.435`", ",", "0.435`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.425`", ",", "0.425`", ",", "0.43`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.43`", ",", "0.435`", ",", "0.435`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.425`", ",", "0.425`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.44`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.415`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.425`", ",", "0.445`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.425`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.42`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.385`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.395`", ",", "0.4`", ",", "0.395`", ",", 
   "0.4`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.395`", ",", "0.41`", ",", "0.41`", ",", "0.405`", ",", "0.4`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.405`", ",", "0.405`", ",", "0.395`", ",", "0.39`", ",", "0.395`", ",", 
   "0.4`", ",", "0.4`", ",", "0.405`", ",", "0.415`", ",", "0.42`", ",", 
   "0.425`", ",", "0.425`", ",", "0.415`", ",", "0.415`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.395`", ",", "0.395`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", 
   "0.4`", ",", "0.4`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.4`", ",", "0.395`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.395`", ",", "0.39`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.385`", ",", "0.385`", ",", "0.39`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.405`", ",", "0.4`", ",", 
   "0.405`", ",", "0.4`", ",", "0.395`", ",", "0.39`", ",", "0.395`", ",", 
   "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.395`", ",", "0.395`", ",", 
   "0.4`", ",", "0.415`", ",", "0.41`", ",", "0.405`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.405`", ",", "0.405`", ",", "0.4`", ",", 
   "0.42`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.45`", ",", "0.445`", ",", "0.45`", ",", "0.445`", ",", 
   "0.445`", ",", "0.445`", ",", "0.45`", ",", "0.435`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.455`", ",", 
   "0.455`", ",", "0.465`", ",", "0.46`", ",", "0.465`", ",", "0.465`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.495`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.41`", ",", "0.415`", ",", "0.41`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.415`", ",", "0.415`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.425`", ",", "0.43`", ",", 
   "0.43`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.405`", ",", "0.405`", ",", "0.4`", ",", "0.395`", ",", "0.405`", ",", 
   "0.405`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", 
   ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", 
   "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",",
    "0.4`", ",", "0.4`", ",", "0.405`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.42`", ",", "0.425`", ",", "0.425`", ",", "0.43`", ",", 
   "0.435`", ",", "0.445`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.445`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.455`", ",", "0.455`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.46`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", "0.465`", ",", 
   "0.465`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.45`", ",", "0.455`", ",", "0.46`", ",", "0.455`", ",", 
   "0.46`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", "0.455`", ",", 
   "0.455`", ",", "0.45`", ",", "0.445`", ",", "0.445`", ",", "0.445`", ",", 
   "0.445`", ",", "0.44`", ",", "0.445`", ",", "0.445`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.445`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.445`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.425`", ",", "0.425`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.415`", ",", "0.415`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.425`", ",", 
   "0.425`", ",", "0.415`", ",", "0.415`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.435`", ",", "0.435`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.445`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.43`", ",", 
   "0.425`", ",", "0.425`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.425`", ",", "0.425`", ",", "0.435`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.425`", ",", "0.42`", ",", "0.415`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.425`", ",", "0.425`", ",", 
   "0.415`", ",", "0.415`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.39`", ",", "0.38`", ",", "0.39`", ",", "0.38`", ",", "0.39`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.375`", ",", "0.38`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", 
   "0.4`", ",", "0.4`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.385`", ",", "0.385`", ",", "0.4`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.4`", ",", "0.405`", ",", "0.395`", ",", "0.395`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.395`", ",", 
   "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.39`", ",", 
   "0.42`", ",", "0.4`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.41`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.395`", ",", "0.405`", ",", "0.395`", ",", "0.405`", ",", 
   "0.4`", ",", "0.4`", ",", "0.395`", ",", "0.395`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.4`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.365`", ",", "0.37`", ",", "0.37`", ",", "0.36`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", 
   "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", 
   "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.395`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.435`", ",", "0.43`", ",", "0.42`", ",", 
   "0.42`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.385`", ",", "0.375`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.385`", ",", "0.385`", ",", "0.395`", ",", "0.395`", ",", "0.4`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.405`", ",", "0.425`", ",", 
   "0.44`", ",", "0.435`", ",", "0.445`", ",", "0.44`", ",", "0.435`", ",", 
   "0.43`", ",", "0.43`", ",", "0.425`", ",", "0.425`", ",", "0.43`", ",", 
   "0.435`", ",", "0.435`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.425`", ",", "0.425`", ",", "0.43`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.43`", ",", "0.435`", ",", "0.435`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.425`", ",", "0.425`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", 
   "0.44`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.415`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.425`", ",", "0.445`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.425`", ",", "0.42`", ",", "0.42`", ",", "0.42`", ",", 
   "0.42`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.42`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.385`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.395`", ",", "0.4`", ",", "0.395`", ",", 
   "0.4`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.395`", ",", "0.41`", ",", "0.41`", ",", "0.405`", ",", "0.4`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.405`", ",", "0.405`", ",", "0.395`", ",", "0.39`", ",", "0.395`", ",", 
   "0.4`", ",", "0.4`", ",", "0.405`", ",", "0.415`", ",", "0.42`", ",", 
   "0.425`", ",", "0.425`", ",", "0.415`", ",", "0.415`", ",", "0.42`", ",", 
   "0.42`", ",", "0.42`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.395`", ",", "0.395`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", 
   "0.4`", ",", "0.4`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.4`", ",", "0.395`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.395`", ",", "0.39`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.385`", ",", "0.385`", ",", "0.39`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.405`", ",", "0.4`", ",", 
   "0.405`", ",", "0.4`", ",", "0.395`", ",", "0.39`", ",", "0.395`", ",", 
   "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.395`", ",", "0.395`", ",", 
   "0.4`", ",", "0.415`", ",", "0.41`", ",", "0.405`", ",", "0.415`", ",", 
   "0.415`", ",", "0.415`", ",", "0.405`", ",", "0.405`", ",", "0.4`", ",", 
   "0.42`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", 
   "0.44`", ",", "0.45`", ",", "0.445`", ",", "0.45`", ",", "0.445`", ",", 
   "0.445`", ",", "0.445`", ",", "0.45`", ",", "0.435`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.455`", ",", 
   "0.455`", ",", "0.465`", ",", "0.46`", ",", "0.465`", ",", "0.465`", ",", 
   "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", "0.46`", ",", 
   "0.495`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", 
   "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.485`", ",", "0.495`", ",", 
   "0.485`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", 
   "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", "0.475`", ",", 
   "0.465`", ",", "0.465`", ",", "0.465`", ",", "0.48`", ",", "0.48`", ",", 
   "0.48`", ",", "0.48`", ",", "0.475`", ",", "0.485`", ",", "0.475`", ",", 
   "0.44`", ",", "0.455`", ",", "0.46`", ",", "0.46`", ",", "0.455`", ",", 
   "0.45`", ",", "0.45`", ",", "0.455`", ",", "0.45`", ",", "0.45`", ",", 
   "0.45`", ",", "0.47`", ",", "0.46`", ",", "0.475`", ",", "0.445`", ",", 
   "0.445`", ",", "0.44`", ",", "0.435`", ",", "0.435`", ",", "0.425`", ",", 
   "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", "0.425`", ",", 
   "0.42`", ",", "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.38`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.39`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.37`", ",", "0.37`", ",", "0.375`", ",", "0.395`", ",", "0.395`", ",", 
   "0.4`", ",", "0.4`", ",", "0.4`", ",", "0.39`", ",", "0.39`", ",", "0.39`",
    ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.375`", 
   ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.375`", ",", "0.375`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.395`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.37`", ",", "0.365`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.365`", ",", 
   "0.365`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.375`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", 
   "0.375`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.41`", ",", "0.42`", ",", "0.4`", ",", 
   "0.4`", ",", "0.385`", ",", "0.39`", ",", "0.39`", ",", "0.385`", ",", 
   "0.385`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.4`", ",", "0.4`", ",", 
   "0.395`", ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.415`", ",", "0.41`", ",", "0.41`", ",", "0.395`", ",", 
   "0.405`", ",", "0.405`", ",", "0.4`", ",", "0.395`", ",", "0.4`", ",", 
   "0.4`", ",", "0.395`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.445`", ",", "0.43`", ",", "0.44`", ",", 
   "0.435`", ",", "0.46`", ",", "0.455`", ",", "0.455`", ",", "0.465`", ",", 
   "0.465`", ",", "0.455`", ",", "0.455`", ",", "0.46`", ",", "0.46`", ",", 
   "0.46`", ",", "0.455`", ",", "0.455`", ",", "0.45`", ",", "0.445`", ",", 
   "0.44`", ",", "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.42`", ",", 
   "0.415`", ",", "0.435`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.415`", ",", "0.405`", ",", "0.4`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.4`", ",", "0.4`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.39`", ",", "0.4`", ",", "0.43`", ",", 
   "0.405`", ",", "0.41`", ",", "0.41`", ",", "0.405`", ",", "0.405`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.445`", ",", 
   "0.435`", ",", "0.44`", ",", "0.44`", ",", "0.41`", ",", "0.405`", ",", 
   "0.41`", ",", "0.415`", ",", "0.41`", ",", "0.41`", ",", "0.415`", ",", 
   "0.415`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.435`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.42`", ",", "0.425`", ",", "0.425`", ",", 
   "0.415`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.4`", ",", 
   "0.405`", ",", "0.365`", ",", "0.4`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.38`", ",", "0.375`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.39`", ",", 
   "0.355`", ",", "0.36`", ",", "0.36`", ",", "0.355`", ",", "0.355`", ",", 
   "0.36`", ",", "0.375`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.4`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.36`", ",", "0.355`", ",", 
   "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.34`", ",", 
   "0.34`", ",", "0.34`", ",", "0.34`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.34`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.34`", ",", "0.34`", ",", "0.34`", ",", 
   "0.34`", ",", "0.34`", ",", "0.34`", ",", "0.34`", ",", "0.34`", ",", 
   "0.34`", ",", "0.34`", ",", "0.355`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", 
   "0.36`", ",", "0.365`", ",", "0.36`", ",", "0.36`", ",", "0.355`", ",", 
   "0.355`", ",", "0.355`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.36`", ",", 
   "0.365`", ",", "0.37`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.375`", ",", "0.375`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.4`", ",", "0.4`", ",", "0.395`", ",", 
   "0.395`", ",", "0.375`", ",", "0.36`", ",", "0.36`", ",", "0.365`", ",", 
   "0.37`", ",", "0.38`", ",", "0.38`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.4`", ",", "0.4`", ",", "0.395`", ",", "0.395`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.385`", ",", "0.38`", ",", "0.38`", ",", 
   "0.375`", ",", "0.375`", ",", "0.385`", ",", "0.375`", ",", "0.39`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", 
   "0.38`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.385`", ",", "0.395`", ",", "0.395`", ",", 
   "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.395`", ",", 
   "0.385`", ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", 
   "0.38`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.38`", ",", 
   "0.38`", ",", "0.365`", ",", "0.37`", ",", "0.375`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.39`", ",", 
   "0.405`", ",", "0.4`", ",", "0.405`", ",", "0.41`", ",", "0.4`", ",", 
   "0.4`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.37`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.37`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.365`", ",", 
   "0.365`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.365`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.355`", ",", "0.36`", ",", "0.35`", ",", "0.35`", ",", "0.335`", ",", 
   "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", 
   "0.345`", ",", "0.34`", ",", "0.34`", ",", "0.335`", ",", "0.335`", ",", 
   "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", 
   "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", 
   "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.325`", ",", "0.325`", ",", 
   "0.325`", ",", "0.315`", ",", "0.31`", ",", "0.305`", ",", "0.295`", ",", 
   "0.29`", ",", "0.295`", ",", "0.295`", ",", "0.295`", ",", "0.275`", ",", 
   "0.29`", ",", "0.29`", ",", "0.29`", ",", "0.29`", ",", "0.29`", ",", 
   "0.29`", ",", "0.265`", ",", "0.25`", ",", "0.25`", ",", "0.26`", ",", 
   "0.24`", ",", "0.235`", ",", "0.235`", ",", "0.25`", ",", "0.275`", ",", 
   "0.245`", ",", "0.245`", ",", "0.245`", ",", "0.27`", ",", "0.27`", ",", 
   "0.275`", ",", "0.265`", ",", "0.26`", ",", "0.27`", ",", "0.285`", ",", 
   "0.275`", ",", "0.27`", ",", "0.27`", ",", "0.28`", ",", "0.31`", ",", 
   "0.315`", ",", "0.305`", ",", "0.3`", ",", "0.285`", ",", "0.29`", ",", 
   "0.28`", ",", "0.275`", ",", "0.275`", ",", "0.275`", ",", "0.27`", ",", 
   "0.26`", ",", "0.26`", ",", "0.255`", ",", "0.235`", ",", "0.25`", ",", 
   "0.25`", ",", "0.23`", ",", "0.225`", ",", "0.21`", ",", "0.205`", ",", 
   "0.2`", ",", "0.115`", ",", "0.06`", ",", "0.075`", ",", "0.09`", ",", 
   "0.065`", ",", "0.075`", ",", "0.065`", ",", "0.075`", ",", "0.085`", ",", 
   "0.085`", ",", "0.1`", ",", "0.09`", ",", "0.095`", ",", "0.095`", ",", 
   "0.105`", ",", "0.1`", ",", "0.105`", ",", "0.105`", ",", "0.095`", ",", 
   "0.105`", ",", "0.17`", ",", "0.135`", ",", "0.145`", ",", "0.18`", ",", 
   "0.165`", ",", "0.175`", ",", "0.18`", ",", "0.21`", ",", "0.22`", ",", 
   "0.22`", ",", "0.215`", ",", "0.205`", ",", "0.205`", ",", "0.23`", ",", 
   "0.23`", ",", "0.24`", ",", "0.225`", ",", "0.195`", ",", "0.195`", ",", 
   "0.195`", ",", "0.195`", ",", "0.19`", ",", "0.18`", ",", "0.23`", ",", 
   "0.215`", ",", "0.245`", ",", "0.245`", ",", "0.215`", ",", "0.225`", ",", 
   "0.22`", ",", "0.23`", ",", "0.235`", ",", "0.245`", ",", "0.245`", ",", 
   "0.24`", ",", "0.245`", ",", "0.25`", ",", "0.25`", ",", "0.25`", ",", 
   "0.25`", ",", "0.25`", ",", "0.25`", ",", "0.255`", ",", "0.255`", ",", 
   "0.25`", ",", "0.25`", ",", "0.245`", ",", "0.235`", ",", "0.235`", ",", 
   "0.2`", ",", "0.19`", ",", "0.18`", ",", "0.195`", ",", "0.2`", ",", 
   "0.19`", ",", "0.2`", ",", "0.2`", ",", "0.195`", ",", "0.195`", ",", 
   "0.195`", ",", "0.185`", ",", "0.18`", ",", "0.2`", ",", "0.19`", ",", 
   "0.185`", ",", "0.215`", ",", "0.225`", ",", "0.225`", ",", "0.225`", ",", 
   "0.215`", ",", "0.215`", ",", "0.205`", ",", "0.215`", ",", "0.205`", ",", 
   "0.21`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", 
   "0.215`", ",", "0.22`", ",", "0.215`", ",", "0.255`", ",", "0.225`", ",", 
   "0.225`", ",", "0.235`", ",", "0.235`", ",", "0.235`", ",", "0.235`", ",", 
   "0.24`", ",", "0.245`", ",", "0.25`", ",", "0.235`", ",", "0.235`", ",", 
   "0.275`", ",", "0.255`", ",", "0.24`", ",", "0.23`", ",", "0.23`", ",", 
   "0.235`", ",", "0.23`", ",", "0.23`", ",", "0.24`", ",", "0.24`", ",", 
   "0.225`", ",", "0.22`", ",", "0.225`", ",", "0.235`", ",", "0.24`", ",", 
   "0.235`", ",", "0.23`", ",", "0.235`", ",", "0.235`", ",", "0.23`", ",", 
   "0.23`", ",", "0.235`", ",", "0.245`", ",", "0.245`", ",", "0.245`", ",", 
   "0.25`", ",", "0.25`", ",", "0.25`", ",", "0.245`", ",", "0.245`", ",", 
   "0.235`", ",", "0.23`", ",", "0.23`", ",", "0.225`", ",", "0.225`", ",", 
   "0.225`", ",", "0.225`", ",", "0.225`", ",", "0.225`", ",", "0.225`", ",", 
   "0.225`", ",", "0.225`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", 
   "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", 
   "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.23`", ",", 
   "0.225`", ",", "0.225`", ",", "0.225`", ",", "0.225`", ",", "0.215`", ",", 
   "0.215`", ",", "0.215`", ",", "0.225`", ",", "0.225`", ",", "0.215`", ",", 
   "0.215`", ",", "0.32`", ",", "0.235`", ",", "0.235`", ",", "0.235`", ",", 
   "0.22`", ",", "0.22`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", 
   "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.21`", ",", 
   "0.21`", ",", "0.205`", ",", "0.21`", ",", "0.21`", ",", "0.21`", ",", 
   "0.21`", ",", "0.205`", ",", "0.205`", ",", "0.205`", ",", "0.205`", ",", 
   "0.21`", ",", "0.21`", ",", "0.21`", ",", "0.21`", ",", "0.21`", ",", 
   "0.21`", ",", "0.21`", ",", "0.205`", ",", "0.205`", ",", "0.205`", ",", 
   "0.205`", ",", "0.205`", ",", "0.205`", ",", "0.195`", ",", "0.195`", ",", 
   "0.195`", ",", "0.205`", ",", "0.2`", ",", "0.195`", ",", "0.195`", ",", 
   "0.19`", ",", "0.185`", ",", "0.175`", ",", "0.175`", ",", "0.16`", ",", 
   "0.155`", ",", "0.15`", ",", "0.145`", ",", "0.14`", ",", "0.14`", ",", 
   "0.16`", ",", "0.165`", ",", "0.155`", ",", "0.16`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.135`", ",", "0.22`", ",", 
   "0.205`", ",", "0.175`", ",", "0.16`", ",", "0.165`", ",", "0.19`", ",", 
   "0.19`", ",", "0.19`", ",", "0.235`", ",", "0.21`", ",", "0.21`", ",", 
   "0.21`", ",", "0.21`", ",", "0.21`", ",", "0.24`", ",", "0.225`", ",", 
   "0.22`", ",", "0.23`", ",", "0.23`", ",", "0.235`", ",", "0.24`", ",", 
   "0.24`", ",", "0.24`", ",", "0.235`", ",", "0.23`", ",", "0.235`", ",", 
   "0.215`", ",", "0.215`", ",", "0.195`", ",", "0.195`", ",", "0.2`", ",", 
   "0.2`", ",", "0.19`", ",", "0.18`", ",", "0.16`", ",", "0.16`", ",", 
   "0.165`", ",", "0.15`", ",", "0.15`", ",", "0.145`", ",", "0.15`", ",", 
   "0.15`", ",", "0.15`", ",", "0.155`", ",", "0.155`", ",", "0.155`", ",", 
   "0.155`", ",", "0.145`", ",", "0.14`", ",", "0.14`", ",", "0.135`", ",", 
   "0.135`", ",", "0.235`", ",", "0.2`", ",", "0.185`", ",", "0.195`", ",", 
   "0.21`", ",", "0.205`", ",", "0.205`", ",", "0.205`", ",", "0.205`", ",", 
   "0.205`", ",", "0.195`", ",", "0.195`", ",", "0.195`", ",", "0.195`", ",", 
   "0.195`", ",", "0.195`", ",", "0.195`", ",", "0.195`", ",", "0.195`", ",", 
   "0.175`", ",", "0.18`", ",", "0.185`", ",", "0.185`", ",", "0.185`", ",", 
   "0.185`", ",", "0.17`", ",", "0.165`", ",", "0.17`", ",", "0.175`", ",", 
   "0.175`", ",", "0.175`", ",", "0.17`", ",", "0.185`", ",", "0.185`", ",", 
   "0.185`", ",", "0.18`", ",", "0.18`", ",", "0.185`", ",", "0.175`", ",", 
   "0.175`", ",", "0.175`", ",", "0.17`", ",", "0.175`", ",", "0.17`", ",", 
   "0.18`", ",", "0.18`", ",", "0.18`", ",", "0.175`", ",", "0.165`", ",", 
   "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", 
   "0.165`", ",", "0.165`", ",", "0.16`", ",", "0.16`", ",", "0.16`", ",", 
   "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", 
   "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", 
   "0.18`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", 
   "0.17`", ",", "0.145`", ",", "0.155`", ",", "0.165`", ",", "0.155`", ",", 
   "0.15`", ",", "0.14`", ",", "0.145`", ",", "0.15`", ",", "0.15`", ",", 
   "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.155`", ",", 
   "0.155`", ",", "0.155`", ",", "0.15`", ",", "0.15`", ",", "0.155`", ",", 
   "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.155`", ",", "0.155`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", 
   "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", 
   "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", 
   "0.145`", ",", "0.145`", ",", "0.135`", ",", "0.135`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.135`", ",", "0.135`", ",", 
   "0.13`", ",", "0.135`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.14`", ",", 
   "0.14`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.135`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.125`", ",", "0.125`", ",", "0.12`", ",", "0.12`", ",", "0.125`", ",", 
   "0.125`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.145`", ",", 
   "0.165`", ",", "0.155`", ",", "0.135`", ",", "0.16`", ",", "0.145`", ",", 
   "0.145`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.15`", ",", 
   "0.155`", ",", "0.15`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.155`", ",", "0.155`", ",", "0.16`", ",", "0.16`", ",", "0.145`", ",", 
   "0.145`", ",", "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.135`", ",", 
   "0.14`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.135`", ",", "0.125`", ",", "0.12`", ",", "0.12`", ",", "0.12`", ",", 
   "0.125`", ",", "0.135`", ",", "0.135`", ",", "0.145`", ",", "0.15`", ",", 
   "0.16`", ",", "0.165`", ",", "0.145`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.145`", ",", "0.15`", ",", "0.145`", ",", "0.15`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.135`", ",", "0.135`", ",", "0.145`", ",", "0.16`", ",", "0.16`", ",", 
   "0.145`", ",", "0.14`", ",", "0.14`", ",", "0.16`", ",", "0.16`", ",", 
   "0.155`", ",", "0.16`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", 
   "0.17`", ",", "0.175`", ",", "0.175`", ",", "0.175`", ",", "0.165`", ",", 
   "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.175`", ",", "0.175`", ",", 
   "0.18`", ",", "0.185`", ",", "0.18`", ",", "0.175`", ",", "0.18`", ",", 
   "0.18`", ",", "0.18`", ",", "0.175`", ",", "0.18`", ",", "0.185`", ",", 
   "0.185`", ",", "0.19`", ",", "0.185`", ",", "0.175`", ",", "0.18`", ",", 
   "0.175`", ",", "0.17`", ",", "0.17`", ",", "0.175`", ",", "0.175`", ",", 
   "0.185`", ",", "0.185`", ",", "0.185`", ",", "0.185`", ",", "0.185`", ",", 
   "0.19`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.185`", ",", 
   "0.185`", ",", "0.185`", ",", "0.185`", ",", "0.165`", ",", "0.17`", ",", 
   "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", 
   "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.165`", ",", 
   "0.16`", ",", "0.16`", ",", "0.16`", ",", "0.155`", ",", "0.155`", ",", 
   "0.155`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", 
   "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.15`", ",", "0.155`", ",", 
   "0.155`", ",", "0.16`", ",", "0.16`", ",", "0.16`", ",", "0.155`", ",", 
   "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.16`", ",", "0.145`", ",", 
   "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.165`", ",", "0.16`", ",", 
   "0.16`", ",", "0.16`", ",", "0.155`", ",", "0.16`", ",", "0.16`", ",", 
   "0.155`", ",", "0.155`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.125`", ",", "0.125`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.11`", ",", 
   "0.11`", ",", "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.125`", ",", 
   "0.125`", ",", "0.125`", ",", "0.12`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.105`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.11`", ",", "0.105`", ",", "0.105`", ",", 
   "0.105`", ",", "0.105`", ",", "0.105`", ",", "0.105`", ",", "0.105`", ",", 
   "0.105`", ",", "0.095`", ",", "0.09`", ",", "0.09`", ",", "0.085`", ",", 
   "0.085`", ",", "0.07`", ",", "0.07`", ",", "0.07`", ",", "0.055`", ",", 
   "0.065`", ",", "0.115`", ",", "0.065`", ",", "0.075`", ",", "0.07`", ",", 
   "0.065`", ",", "0.09`", ",", "0.09`", ",", "0.085`", ",", "0.065`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.075`", ",", "0.075`", ",", 
   "0.08`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.08`", ",", 
   "0.085`", ",", "0.1`", ",", "0.08`", ",", "0.09`", ",", "0.08`", ",", 
   "0.07`", ",", "0.08`", ",", "0.08`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.08`", ",", "0.075`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.09`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.09`", ",", "0.085`", ",", "0.09`", ",", "0.09`", ",", 
   "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", 
   "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.085`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.075`", ",", "0.075`", ",", 
   "0.08`", ",", "0.08`", ",", "0.085`", ",", "0.08`", ",", "0.08`", ",", 
   "0.085`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.095`", ",", "0.095`", ",", 
   "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", 
   "0.08`", ",", "0.08`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.09`", ",", "0.085`", ",", "0.085`", ",", "0.095`", ",", "0.095`", ",", 
   "0.095`", ",", "0.1`", ",", "0.09`", ",", "0.1`", ",", "0.095`", ",", 
   "0.095`", ",", "0.095`", ",", "0.09`", ",", "0.095`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.095`", ",", "0.1`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.08`", ",", "0.075`", ",", "0.09`", ",", "0.09`", ",", "0.095`", ",", 
   "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.08`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.075`", ",", "0.075`", ",", "0.12`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.12`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.12`", ",", "0.12`", ",", 
   "0.12`", ",", "0.12`", ",", "0.12`", ",", "0.12`", ",", "0.125`", ",", 
   "0.13`", ",", "0.125`", ",", "0.125`", ",", "0.13`", ",", "0.125`", ",", 
   "0.125`", ",", "0.125`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.145`", ",", "0.15`", ",", 
   "0.14`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.14`", ",", 
   "0.14`", ",", "0.145`", ",", "0.145`", ",", "0.15`", ",", "0.15`", ",", 
   "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", 
   "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.145`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.145`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.145`", ",", "0.145`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.125`", ",", "0.125`", ",", 
   "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.125`", ",", 
   "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.125`", ",", "0.125`", ",", "0.125`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.125`", ",", 
   "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.11`", ",", "0.11`", ",", "0.1`", ",", "0.1`", ",", "0.1`", ",", "0.08`",
    ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",",
    "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",",
    "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",",
    "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",",
    "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.08`", ",", "0.085`", ",", 
   "0.08`", ",", "0.085`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.07`", ",", "0.065`", ",", "0.065`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.07`", ",", 
   "0.065`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.09`", ",", "0.095`", ",", "0.085`", ",", 
   "0.08`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.085`", ",", "0.1`", ",", "0.085`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.085`", ",", 
   "0.1`", ",", "0.09`", ",", "0.105`", ",", "0.1`", ",", "0.1`", ",", "0.1`",
    ",", "0.1`", ",", "0.1`", ",", "0.1`", ",", "0.105`", ",", "0.105`", ",", 
   "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.09`", ",", 
   "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.095`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.08`", ",", "0.085`", ",", "0.08`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.08`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.085`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.08`", ",", "0.075`", ",", "0.08`", ",", 
   "0.075`", ",", "0.075`", ",", "0.08`", ",", "0.08`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.07`", ",", "0.075`", ",", 
   "0.07`", ",", "0.07`", ",", "0.07`", ",", "0.075`", ",", "0.08`", ",", 
   "0.07`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.07`", ",", 
   "0.08`", ",", "0.08`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.41`", ",", "0.405`", ",", "0.405`", ",", 
   "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.43`", ",", "0.445`", ",", 
   "0.435`", ",", "0.44`", ",", "0.44`", ",", "0.41`", ",", "0.405`", ",", 
   "0.41`", ",", "0.415`", ",", "0.41`", ",", "0.41`", ",", "0.415`", ",", 
   "0.415`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", "0.41`", ",", 
   "0.41`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", "0.415`", ",", 
   "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.435`", ",", "0.44`", ",", 
   "0.44`", ",", "0.44`", ",", "0.435`", ",", "0.435`", ",", "0.435`", ",", 
   "0.435`", ",", "0.435`", ",", "0.42`", ",", "0.425`", ",", "0.425`", ",", 
   "0.415`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.4`", ",", 
   "0.405`", ",", "0.365`", ",", "0.4`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.38`", ",", "0.375`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.39`", ",", 
   "0.355`", ",", "0.36`", ",", "0.36`", ",", "0.355`", ",", "0.355`", ",", 
   "0.36`", ",", "0.375`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.4`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.36`", ",", "0.355`", ",", 
   "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.34`", ",", 
   "0.34`", ",", "0.34`", ",", "0.34`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.34`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", "0.345`", ",", 
   "0.345`", ",", "0.345`", ",", "0.34`", ",", "0.34`", ",", "0.34`", ",", 
   "0.34`", ",", "0.34`", ",", "0.34`", ",", "0.34`", ",", "0.34`", ",", 
   "0.34`", ",", "0.34`", ",", "0.355`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.355`", ",", "0.355`", ",", "0.355`", ",", 
   "0.36`", ",", "0.365`", ",", "0.36`", ",", "0.36`", ",", "0.355`", ",", 
   "0.355`", ",", "0.355`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.36`", ",", 
   "0.365`", ",", "0.37`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", 
   "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.36`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.375`", ",", "0.375`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.4`", ",", "0.4`", ",", "0.395`", ",", 
   "0.395`", ",", "0.375`", ",", "0.36`", ",", "0.36`", ",", "0.365`", ",", 
   "0.37`", ",", "0.38`", ",", "0.38`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.4`", ",", "0.4`", ",", "0.395`", ",", "0.395`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", "0.405`", ",", 
   "0.405`", ",", "0.405`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.385`", ",", "0.38`", ",", "0.38`", ",", 
   "0.375`", ",", "0.375`", ",", "0.385`", ",", "0.375`", ",", "0.39`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", 
   "0.38`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.385`", ",", "0.395`", ",", "0.395`", ",", 
   "0.39`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", 
   "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.39`", ",", "0.395`", ",", 
   "0.385`", ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", "0.385`", ",", 
   "0.385`", ",", "0.385`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.39`", ",", "0.39`", ",", "0.385`", ",", "0.385`", ",", 
   "0.38`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.38`", ",", 
   "0.38`", ",", "0.365`", ",", "0.37`", ",", "0.375`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.39`", ",", 
   "0.405`", ",", "0.4`", ",", "0.405`", ",", "0.41`", ",", "0.4`", ",", 
   "0.4`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", "0.395`", ",", 
   "0.395`", ",", "0.395`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.37`", ",", "0.365`", ",", "0.365`", ",", 
   "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.365`", ",", "0.37`", ",", 
   "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.365`", ",", 
   "0.365`", ",", "0.37`", ",", "0.37`", ",", "0.37`", ",", "0.365`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", "0.38`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", "0.375`", ",", 
   "0.355`", ",", "0.36`", ",", "0.35`", ",", "0.35`", ",", "0.335`", ",", 
   "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", 
   "0.345`", ",", "0.34`", ",", "0.34`", ",", "0.335`", ",", "0.335`", ",", 
   "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", 
   "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.335`", ",", 
   "0.335`", ",", "0.335`", ",", "0.335`", ",", "0.325`", ",", "0.325`", ",", 
   "0.325`", ",", "0.315`", ",", "0.31`", ",", "0.305`", ",", "0.295`", ",", 
   "0.29`", ",", "0.295`", ",", "0.295`", ",", "0.295`", ",", "0.275`", ",", 
   "0.29`", ",", "0.29`", ",", "0.29`", ",", "0.29`", ",", "0.29`", ",", 
   "0.29`", ",", "0.265`", ",", "0.25`", ",", "0.25`", ",", "0.26`", ",", 
   "0.24`", ",", "0.235`", ",", "0.235`", ",", "0.25`", ",", "0.275`", ",", 
   "0.245`", ",", "0.245`", ",", "0.245`", ",", "0.27`", ",", "0.27`", ",", 
   "0.275`", ",", "0.265`", ",", "0.26`", ",", "0.27`", ",", "0.285`", ",", 
   "0.275`", ",", "0.27`", ",", "0.27`", ",", "0.28`", ",", "0.31`", ",", 
   "0.315`", ",", "0.305`", ",", "0.3`", ",", "0.285`", ",", "0.29`", ",", 
   "0.28`", ",", "0.275`", ",", "0.275`", ",", "0.275`", ",", "0.27`", ",", 
   "0.26`", ",", "0.26`", ",", "0.255`", ",", "0.235`", ",", "0.25`", ",", 
   "0.25`", ",", "0.23`", ",", "0.225`", ",", "0.21`", ",", "0.205`", ",", 
   "0.2`", ",", "0.115`", ",", "0.06`", ",", "0.075`", ",", "0.09`", ",", 
   "0.065`", ",", "0.075`", ",", "0.065`", ",", "0.075`", ",", "0.085`", ",", 
   "0.085`", ",", "0.1`", ",", "0.09`", ",", "0.095`", ",", "0.095`", ",", 
   "0.105`", ",", "0.1`", ",", "0.105`", ",", "0.105`", ",", "0.095`", ",", 
   "0.105`", ",", "0.17`", ",", "0.135`", ",", "0.145`", ",", "0.18`", ",", 
   "0.165`", ",", "0.175`", ",", "0.18`", ",", "0.21`", ",", "0.22`", ",", 
   "0.22`", ",", "0.215`", ",", "0.205`", ",", "0.205`", ",", "0.23`", ",", 
   "0.23`", ",", "0.24`", ",", "0.225`", ",", "0.195`", ",", "0.195`", ",", 
   "0.195`", ",", "0.195`", ",", "0.19`", ",", "0.18`", ",", "0.23`", ",", 
   "0.215`", ",", "0.245`", ",", "0.245`", ",", "0.215`", ",", "0.225`", ",", 
   "0.22`", ",", "0.23`", ",", "0.235`", ",", "0.245`", ",", "0.245`", ",", 
   "0.24`", ",", "0.245`", ",", "0.25`", ",", "0.25`", ",", "0.25`", ",", 
   "0.25`", ",", "0.25`", ",", "0.25`", ",", "0.255`", ",", "0.255`", ",", 
   "0.25`", ",", "0.25`", ",", "0.245`", ",", "0.235`", ",", "0.235`", ",", 
   "0.2`", ",", "0.19`", ",", "0.18`", ",", "0.195`", ",", "0.2`", ",", 
   "0.19`", ",", "0.2`", ",", "0.2`", ",", "0.195`", ",", "0.195`", ",", 
   "0.195`", ",", "0.185`", ",", "0.18`", ",", "0.2`", ",", "0.19`", ",", 
   "0.185`", ",", "0.215`", ",", "0.225`", ",", "0.225`", ",", "0.225`", ",", 
   "0.215`", ",", "0.215`", ",", "0.205`", ",", "0.215`", ",", "0.205`", ",", 
   "0.21`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", 
   "0.215`", ",", "0.22`", ",", "0.215`", ",", "0.255`", ",", "0.225`", ",", 
   "0.225`", ",", "0.235`", ",", "0.235`", ",", "0.235`", ",", "0.235`", ",", 
   "0.24`", ",", "0.245`", ",", "0.25`", ",", "0.235`", ",", "0.235`", ",", 
   "0.275`", ",", "0.255`", ",", "0.24`", ",", "0.23`", ",", "0.23`", ",", 
   "0.235`", ",", "0.23`", ",", "0.23`", ",", "0.24`", ",", "0.24`", ",", 
   "0.225`", ",", "0.22`", ",", "0.225`", ",", "0.235`", ",", "0.24`", ",", 
   "0.235`", ",", "0.23`", ",", "0.235`", ",", "0.235`", ",", "0.23`", ",", 
   "0.23`", ",", "0.235`", ",", "0.245`", ",", "0.245`", ",", "0.245`", ",", 
   "0.25`", ",", "0.25`", ",", "0.25`", ",", "0.245`", ",", "0.245`", ",", 
   "0.235`", ",", "0.23`", ",", "0.23`", ",", "0.225`", ",", "0.225`", ",", 
   "0.225`", ",", "0.225`", ",", "0.225`", ",", "0.225`", ",", "0.225`", ",", 
   "0.225`", ",", "0.225`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", 
   "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", 
   "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.23`", ",", 
   "0.225`", ",", "0.225`", ",", "0.225`", ",", "0.225`", ",", "0.215`", ",", 
   "0.215`", ",", "0.215`", ",", "0.225`", ",", "0.225`", ",", "0.215`", ",", 
   "0.215`", ",", "0.32`", ",", "0.235`", ",", "0.235`", ",", "0.235`", ",", 
   "0.22`", ",", "0.22`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", 
   "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.215`", ",", "0.21`", ",", 
   "0.21`", ",", "0.205`", ",", "0.21`", ",", "0.21`", ",", "0.21`", ",", 
   "0.21`", ",", "0.205`", ",", "0.205`", ",", "0.205`", ",", "0.205`", ",", 
   "0.21`", ",", "0.21`", ",", "0.21`", ",", "0.21`", ",", "0.21`", ",", 
   "0.21`", ",", "0.21`", ",", "0.205`", ",", "0.205`", ",", "0.205`", ",", 
   "0.205`", ",", "0.205`", ",", "0.205`", ",", "0.195`", ",", "0.195`", ",", 
   "0.195`", ",", "0.205`", ",", "0.2`", ",", "0.195`", ",", "0.195`", ",", 
   "0.19`", ",", "0.185`", ",", "0.175`", ",", "0.175`", ",", "0.16`", ",", 
   "0.155`", ",", "0.15`", ",", "0.145`", ",", "0.14`", ",", "0.14`", ",", 
   "0.16`", ",", "0.165`", ",", "0.155`", ",", "0.16`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.135`", ",", "0.22`", ",", 
   "0.205`", ",", "0.175`", ",", "0.16`", ",", "0.165`", ",", "0.19`", ",", 
   "0.19`", ",", "0.19`", ",", "0.235`", ",", "0.21`", ",", "0.21`", ",", 
   "0.21`", ",", "0.21`", ",", "0.21`", ",", "0.24`", ",", "0.225`", ",", 
   "0.22`", ",", "0.23`", ",", "0.23`", ",", "0.235`", ",", "0.24`", ",", 
   "0.24`", ",", "0.24`", ",", "0.235`", ",", "0.23`", ",", "0.235`", ",", 
   "0.215`", ",", "0.215`", ",", "0.195`", ",", "0.195`", ",", "0.2`", ",", 
   "0.2`", ",", "0.19`", ",", "0.18`", ",", "0.16`", ",", "0.16`", ",", 
   "0.165`", ",", "0.15`", ",", "0.15`", ",", "0.145`", ",", "0.15`", ",", 
   "0.15`", ",", "0.15`", ",", "0.155`", ",", "0.155`", ",", "0.155`", ",", 
   "0.155`", ",", "0.145`", ",", "0.14`", ",", "0.14`", ",", "0.135`", ",", 
   "0.135`", ",", "0.235`", ",", "0.2`", ",", "0.185`", ",", "0.195`", ",", 
   "0.21`", ",", "0.205`", ",", "0.205`", ",", "0.205`", ",", "0.205`", ",", 
   "0.205`", ",", "0.195`", ",", "0.195`", ",", "0.195`", ",", "0.195`", ",", 
   "0.195`", ",", "0.195`", ",", "0.195`", ",", "0.195`", ",", "0.195`", ",", 
   "0.175`", ",", "0.18`", ",", "0.185`", ",", "0.185`", ",", "0.185`", ",", 
   "0.185`", ",", "0.17`", ",", "0.165`", ",", "0.17`", ",", "0.175`", ",", 
   "0.175`", ",", "0.175`", ",", "0.17`", ",", "0.185`", ",", "0.185`", ",", 
   "0.185`", ",", "0.18`", ",", "0.18`", ",", "0.185`", ",", "0.175`", ",", 
   "0.175`", ",", "0.175`", ",", "0.17`", ",", "0.175`", ",", "0.17`", ",", 
   "0.18`", ",", "0.18`", ",", "0.18`", ",", "0.175`", ",", "0.165`", ",", 
   "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", 
   "0.165`", ",", "0.165`", ",", "0.16`", ",", "0.16`", ",", "0.16`", ",", 
   "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", 
   "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", 
   "0.18`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", 
   "0.17`", ",", "0.145`", ",", "0.155`", ",", "0.165`", ",", "0.155`", ",", 
   "0.15`", ",", "0.14`", ",", "0.145`", ",", "0.15`", ",", "0.15`", ",", 
   "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.155`", ",", 
   "0.155`", ",", "0.155`", ",", "0.15`", ",", "0.15`", ",", "0.155`", ",", 
   "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.155`", ",", "0.155`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", 
   "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", 
   "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", 
   "0.145`", ",", "0.145`", ",", "0.135`", ",", "0.135`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.135`", ",", "0.135`", ",", 
   "0.13`", ",", "0.135`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.14`", ",", 
   "0.14`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.135`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.125`", ",", "0.125`", ",", "0.12`", ",", "0.12`", ",", "0.125`", ",", 
   "0.125`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.145`", ",", 
   "0.165`", ",", "0.155`", ",", "0.135`", ",", "0.16`", ",", "0.145`", ",", 
   "0.145`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.15`", ",", 
   "0.155`", ",", "0.15`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.155`", ",", "0.155`", ",", "0.16`", ",", "0.16`", ",", "0.145`", ",", 
   "0.145`", ",", "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.135`", ",", 
   "0.14`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.135`", ",", "0.125`", ",", "0.12`", ",", "0.12`", ",", "0.12`", ",", 
   "0.125`", ",", "0.135`", ",", "0.135`", ",", "0.145`", ",", "0.15`", ",", 
   "0.16`", ",", "0.165`", ",", "0.145`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.145`", ",", "0.15`", ",", "0.145`", ",", "0.15`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.135`", ",", "0.135`", ",", "0.145`", ",", "0.16`", ",", "0.16`", ",", 
   "0.145`", ",", "0.14`", ",", "0.14`", ",", "0.16`", ",", "0.16`", ",", 
   "0.155`", ",", "0.16`", ",", "0.165`", ",", "0.165`", ",", "0.165`", ",", 
   "0.17`", ",", "0.175`", ",", "0.175`", ",", "0.175`", ",", "0.165`", ",", 
   "0.165`", ",", "0.165`", ",", "0.165`", ",", "0.175`", ",", "0.175`", ",", 
   "0.18`", ",", "0.185`", ",", "0.18`", ",", "0.175`", ",", "0.18`", ",", 
   "0.18`", ",", "0.18`", ",", "0.175`", ",", "0.18`", ",", "0.185`", ",", 
   "0.185`", ",", "0.19`", ",", "0.185`", ",", "0.175`", ",", "0.18`", ",", 
   "0.175`", ",", "0.17`", ",", "0.17`", ",", "0.175`", ",", "0.175`", ",", 
   "0.185`", ",", "0.185`", ",", "0.185`", ",", "0.185`", ",", "0.185`", ",", 
   "0.19`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.185`", ",", 
   "0.185`", ",", "0.185`", ",", "0.185`", ",", "0.165`", ",", "0.17`", ",", 
   "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", 
   "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.17`", ",", "0.165`", ",", 
   "0.16`", ",", "0.16`", ",", "0.16`", ",", "0.155`", ",", "0.155`", ",", 
   "0.155`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", 
   "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.15`", ",", "0.155`", ",", 
   "0.155`", ",", "0.16`", ",", "0.16`", ",", "0.16`", ",", "0.155`", ",", 
   "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.16`", ",", "0.145`", ",", 
   "0.155`", ",", "0.155`", ",", "0.155`", ",", "0.165`", ",", "0.16`", ",", 
   "0.16`", ",", "0.16`", ",", "0.155`", ",", "0.16`", ",", "0.16`", ",", 
   "0.155`", ",", "0.155`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.125`", ",", "0.125`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.11`", ",", 
   "0.11`", ",", "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.125`", ",", 
   "0.125`", ",", "0.125`", ",", "0.12`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.105`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.11`", ",", "0.105`", ",", "0.105`", ",", 
   "0.105`", ",", "0.105`", ",", "0.105`", ",", "0.105`", ",", "0.105`", ",", 
   "0.105`", ",", "0.095`", ",", "0.09`", ",", "0.09`", ",", "0.085`", ",", 
   "0.085`", ",", "0.07`", ",", "0.07`", ",", "0.07`", ",", "0.055`", ",", 
   "0.065`", ",", "0.115`", ",", "0.065`", ",", "0.075`", ",", "0.07`", ",", 
   "0.065`", ",", "0.09`", ",", "0.09`", ",", "0.085`", ",", "0.065`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.075`", ",", "0.075`", ",", 
   "0.08`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.08`", ",", 
   "0.085`", ",", "0.1`", ",", "0.08`", ",", "0.09`", ",", "0.08`", ",", 
   "0.07`", ",", "0.08`", ",", "0.08`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.08`", ",", "0.075`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.09`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.09`", ",", "0.085`", ",", "0.09`", ",", "0.09`", ",", 
   "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", 
   "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.085`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.075`", ",", "0.075`", ",", 
   "0.08`", ",", "0.08`", ",", "0.085`", ",", "0.08`", ",", "0.08`", ",", 
   "0.085`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.095`", ",", "0.095`", ",", 
   "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", 
   "0.08`", ",", "0.08`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.09`", ",", "0.085`", ",", "0.085`", ",", "0.095`", ",", "0.095`", ",", 
   "0.095`", ",", "0.1`", ",", "0.09`", ",", "0.1`", ",", "0.095`", ",", 
   "0.095`", ",", "0.095`", ",", "0.09`", ",", "0.095`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.095`", ",", "0.1`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.08`", ",", "0.075`", ",", "0.09`", ",", "0.09`", ",", "0.095`", ",", 
   "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.08`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.075`", ",", "0.075`", ",", "0.12`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.12`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.12`", ",", "0.12`", ",", 
   "0.12`", ",", "0.12`", ",", "0.12`", ",", "0.12`", ",", "0.125`", ",", 
   "0.13`", ",", "0.125`", ",", "0.125`", ",", "0.13`", ",", "0.125`", ",", 
   "0.125`", ",", "0.125`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.145`", ",", "0.15`", ",", 
   "0.14`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.14`", ",", 
   "0.14`", ",", "0.145`", ",", "0.145`", ",", "0.15`", ",", "0.15`", ",", 
   "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", 
   "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.15`", ",", "0.145`", ",", 
   "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.145`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", "0.145`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.145`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.145`", ",", "0.145`", ",", 
   "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", "0.14`", ",", 
   "0.14`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.135`", ",", 
   "0.135`", ",", "0.135`", ",", "0.135`", ",", "0.125`", ",", "0.125`", ",", 
   "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.125`", ",", 
   "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.125`", ",", "0.125`", ",", "0.125`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", 
   "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.13`", ",", "0.125`", ",", 
   "0.125`", ",", "0.125`", ",", "0.125`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", "0.115`", ",", 
   "0.11`", ",", "0.11`", ",", "0.1`", ",", "0.1`", ",", "0.1`", ",", "0.08`",
    ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",",
    "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",",
    "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",",
    "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",",
    "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.08`", ",", "0.085`", ",", 
   "0.08`", ",", "0.085`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.07`", ",", "0.065`", ",", "0.065`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.07`", ",", 
   "0.065`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.09`", ",", "0.095`", ",", "0.085`", ",", 
   "0.08`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.085`", ",", "0.1`", ",", "0.085`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.085`", ",", 
   "0.1`", ",", "0.09`", ",", "0.105`", ",", "0.1`", ",", "0.1`", ",", "0.1`",
    ",", "0.1`", ",", "0.1`", ",", "0.1`", ",", "0.105`", ",", "0.105`", ",", 
   "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.09`", ",", 
   "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.095`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.08`", ",", "0.085`", ",", "0.08`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.08`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.085`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.08`", ",", "0.075`", ",", "0.08`", ",", 
   "0.075`", ",", "0.075`", ",", "0.08`", ",", "0.08`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.07`", ",", "0.075`", ",", 
   "0.07`", ",", "0.07`", ",", "0.07`", ",", "0.075`", ",", "0.08`", ",", 
   "0.07`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.07`", ",", 
   "0.08`", ",", "0.08`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", "0.08`", ",", 
   "0.08`", ",", "0.08`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", 
   "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", 
   "0.09`", ",", "0.085`", ",", "0.095`", ",", "0.095`", ",", "0.095`", ",", 
   "0.1`", ",", "0.095`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.09`", ",", 
   "0.095`", ",", "0.09`", ",", "0.095`", ",", "0.1`", ",", "0.1`", ",", 
   "0.095`", ",", "0.095`", ",", "0.1`", ",", "0.1`", ",", "0.1`", ",", 
   "0.1`", ",", "0.1`", ",", "0.1`", ",", "0.1`", ",", "0.1`", ",", "0.1`", ",",
    "0.1`", ",", "0.1`", ",", "0.105`", ",", "0.105`", ",", "0.105`", ",", 
   "0.105`", ",", "0.105`", ",", "0.105`", ",", "0.095`", ",", "0.105`", ",", 
   "0.105`", ",", "0.105`", ",", "0.095`", ",", "0.085`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.095`", ",", "0.09`", ",", "0.09`", ",", 
   "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", "0.09`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.09`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.09`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.095`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", "0.085`", ",", 
   "0.085`", ",", "0.085`", ",", "0.075`", ",", "0.075`", ",", "0.075`", ",", 
   "0.075`", ",", "0.075`", ",", "0.075`", ",", "0.08`", ",", "0.08`", ",", 
   "0.075`", ",", "0.075`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.06`", ",", "0.065`", ",", "0.065`", ",", "0.065`", ",", 
   "0.065`", ",", "0.06`", ",", "0.055`", ",", "0.055`", ",", "0.055`", ",", 
   "0.055`", ",", "0.055`", ",", "0.055`", ",", "0.065`", ",", "0.06`", ",", 
   "0.06`", ",", "0.06`", ",", "0.06`", ",", "0.06`", ",", "0.06`", ",", 
   "0.06`", ",", "0.06`", ",", "0.06`", ",", "0.06`", ",", "0.06`", ",", 
   "0.06`", ",", "0.06`", ",", "0.06`", ",", "0.06`", ",", "0.06`", ",", 
   "0.055`", ",", "0.055`", ",", "0.055`", ",", "0.055`", ",", "0.055`", ",", 
   "0.055`", ",", "0.055`", ",", "0.055`", ",", "0.055`", ",", "0.055`", ",", 
   "0.055`", ",", "0.055`", ",", "0.055`", ",", "0.055`", ",", "0.055`", ",", 
   "0.055`", ",", "0.055`", ",", "0.055`", ",", "0.055`", ",", "0.055`", ",", 
   "0.055`", ",", "0.055`", ",", "0.055`", ",", "0.045`", ",", "0.045`", ",", 
   "0.045`", ",", "0.045`", ",", "0.045`", ",", "0.045`", ",", "0.045`", ",", 
   "0.045`", ",", "0.045`", ",", "0.035`", ",", "0.025`", ",", "0.025`", ",", 
   "0.025`", ",", "0.025`", ",", "0.025`", ",", "0.03`", ",", "0.045`", ",", 
   "0.045`", ",", "0.0255`", ",", "0.055`", ",", "0.045`", ",", "0.044`", ",",
    "0.042`", ",", "0.0415`", ",", "0.036`", ",", "0.039`", ",", "0.032`", ",",
    "0.0425`", ",", "0.0425`", ",", "0.0435`", ",", "0.042`", ",", "0.038`", ",",
    "0.0385`", ",", "0.0355`", ",", "0.033`", ",", "0.032`", ",", "0.029`", ",",
    "0.0275`", ",", "0.0265`", ",", "0.0265`", ",", "0.027`", ",", "0.027`", ",",
    "0.027`", ",", "0.027`", ",", "0.027`", ",", "0.0265`", ",", "0.0255`", ",",
    "0.0255`", ",", "0.0165`", ",", "0.016`", ",", "0.0365`", ",", "0.036`", ",",
    "0.0275`", ",", "0.022`", ",", "0.017`", ",", "0.0205`", ",", "0.014`", ",",
    "0.0195`", ",", "0.0175`", ",", "0.0195`", ",", "0.019`", ",", "0.0125`", 
   ",", "0.016`", ",", "0.0175`", ",", "0.0175`", ",", "0.017`", ",", 
   "0.0245`", ",", "0.0245`", ",", "0.0125`", ",", "0.0215`", ",", "0.0215`", 
   ",", "0.0205`", ",", "0.0195`", ",", "0.0185`", ",", "0.0215`", ",", 
   "0.021`", ",", "0.015`", ",", "0.0155`", ",", "0.0135`", ",", "0.0135`", ",",
    "0.0135`", ",", "0.0145`", ",", "0.0155`", ",", "0.014`", ",", "0.015`", ",",
    "0.0145`", ",", "0.019`", ",", "0.019`", ",", "0.02`", ",", "0.0235`", ",",
    "0.03`", ",", "0.027`", ",", "0.021`", ",", "0.024`", ",", "0.023`", ",", 
   "0.0215`", ",", "0.0225`", ",", "0.0215`", ",", "0.0215`", ",", "0.0215`", 
   ",", "0.0215`", ",", "0.0215`", ",", "0.0215`", ",", "0.021`", ",", 
   "0.0225`", ",", "0.0265`", ",", "0.027`", ",", "0.0265`", ",", "0.027`", ",",
    "0.0355`", ",", "0.0355`", ",", "0.0475`", ",", "0.048`", ",", "0.054`", ",",
    "0.0535`", ",", "0.0535`", ",", "0.054`", ",", "0.0555`", ",", "0.061`", ",",
    "0.0505`", ",", "0.056`", ",", "0.0565`", ",", "0.051`", ",", "0.0525`", ",",
    "0.052`", ",", "0.0515`", ",", "0.052`", ",", "0.068`", ",", "0.0605`", ",",
    "0.0775`", ",", "0.07`", ",", "0.071`", ",", "0.0735`", ",", "0.071`", ",",
    "0.065`", ",", "0.068`", ",", "0.0575`", ",", "0.062`", ",", "0.06`", ",",
    "0.061`", ",", "0.058`", ",", "0.0545`", ",", "0.0535`", ",", "0.0495`", ",",
    "0.0495`", ",", "0.05`", ",", "0.051`", ",", "0.0515`", ",", "0.0535`", ",",
    "0.049`", ",", "0.052`", ",", "0.0515`", ",", "0.049`", ",", "0.0455`", ",",
    "0.045`", ",", "0.0405`", ",", "0.0275`", ",", "0.026`", ",", "0.027`", ",",
    "0.027`", ",", "0.036`", ",", "0.038`", ",", "0.0385`", ",", "0.039`", ",",
    "0.0415`", ",", "0.043`", ",", "0.043`", ",", "0.043`", ",", "0.043`", ",",
    "0.043`", ",", "0.0485`", ",", "0.0445`", ",", "0.0515`", ",", "0.0575`", 
   ",", "0.0535`", ",", "0.053`", ",", "0.054`", ",", "0.0525`", ",", 
   "0.0525`", ",", "0.0425`", ",", "0.0515`", ",", "0.0515`", ",", "0.0455`", 
   ",", "0.046`", ",", "0.051`", ",", "0.0485`", ",", "0.051`", ",", 
   "0.0505`", ",", "0.0495`", ",", "0.0455`", ",", "0.046`", ",", "0.047`", ",",
    "0.0475`", ",", "0.0475`", ",", "0.0475`", ",", "0.047`", ",", "0.047`", ",",
    "0.044`", ",", "0.0355`", ",", "0.038`", ",", "0.0405`", ",", "0.0385`", ",",
    "0.0375`", ",", "0.0445`", ",", "0.0445`", ",", "0.0445`", ",", "0.042`", 
   ",", "0.039`", ",", "0.0415`", ",", "0.0385`", ",", "0.037`", ",", 
   "0.037`", ",", "0.039`", ",", "0.0425`", ",", "0.042`", ",", "0.0425`", ",",
    "0.0365`", ",", "0.0375`", ",", "0.035`", ",", "0.0355`", ",", "0.0395`", 
   ",", "0.0395`", ",", "0.0345`", ",", "0.0355`", ",", "0.036`", ",", 
   "0.036`", ",", "0.037`", ",", "0.0385`", ",", "0.037`", ",", "0.0415`", ",",
    "0.042`", ",", "0.0435`", ",", "0.042`", ",", "0.045`", ",", "0.0395`", ",",
    "0.042`", ",", "0.044`", ",", "0.0395`", ",", "0.042`", ",", "0.0375`", ",",
    "0.0375`", ",", "0.041`", ",", "0.0455`", ",", "0.037`", ",", "0.046`", ",",
    "0.046`", ",", "0.046`", ",", "0.047`", ",", "0.0485`", ",", "0.0495`", ",",
    "0.047`", ",", "0.059`", ",", "0.059`", ",", "0.0585`", ",", "0.06`", ",",
    "0.056`", ",", "0.0565`", ",", "0.051`", ",", "0.0595`", ",", "0.0575`", ",",
    "0.0485`", ",", "0.0485`", ",", "0.0545`", ",", "0.0575`", ",", "0.0545`",
    ",", "0.0545`", ",", "0.054`", ",", "0.0535`", ",", "0.0525`", ",", 
   "0.053`", ",", "0.052`", ",", "0.052`", ",", "0.052`", ",", "0.055`", ",", 
   "0.0545`", ",", "0.0545`", ",", "0.0565`", ",", "0.0565`", ",", "0.0615`", 
   ",", "0.06`", ",", "0.0595`", ",", "0.059`", ",", "0.0565`", ",", "0.055`",
    ",", "0.0545`", ",", "0.0585`", ",", "0.057`", ",", "0.057`", ",", 
   "0.0575`", ",", "0.0575`", ",", "0.057`", ",", "0.0565`", ",", "0.0565`", ",",
    "0.0565`", ",", "0.0545`", ",", "0.0545`", ",", "0.053`", ",", "0.0535`", 
   ",", "0.0565`", ",", "0.0565`", ",", "0.055`", ",", "0.055`", ",", 
   "0.0495`", ",", "0.0495`", ",", "0.054`", ",", "0.0525`", ",", "0.0545`", ",",
    "0.051`", ",", "0.046`", ",", "0.035`", ",", "0.035`", ",", "0.0345`", ",",
    "0.0325`", ",", "0.042`", ",", "0.0295`", ",", "0.027`", ",", "0.0295`", ",",
    "0.028`", ",", "0.0275`", ",", "0.0235`", ",", "0.0185`", ",", "0.018`", ",",
    "0.0125`", ",", "0.015`", ",", "0.0075`", ",", "0.0135`", ",", "0.036`", ",",
    "0.0255`", ",", "0.0255`", ",", "0.029`", ",", "0.029`", ",", "0.032`", ",",
    "0.0245`", ",", "0.0175`", ",", "0.009`", ",", "0.008`", ",", "0.007`", ",",
    "0.007`", ",", "0.008`", ",", "0.0045`", ",", "0.0045`", ",", "0.006`", ",",
    "0.005`", ",", "0.005`", ",", "0.003`", ",", "0.0025`", ",", "0.0025`", ",",
    "0.0025`", ",", "0.0005`", ",", "0.0015`", ",", "0.001`", ",", "0.001`", ",",
    "0.0005`", ",", "0.0005`", ",", "0.002`", ",", "0.002`", ",", "0.0015`", ",",
    "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`",
    ",", "0.0005`", ",", "0.0015`", ",", "0.0015`", ",", "0.001`", ",", 
   "0.001`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",",
    "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`",
    ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.001`", ",", "0.001`", ",", "0.001`", ",",
    "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0015`", ",", "0.0015`",
    ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", 
   "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", 
   ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", 
   "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", 
   ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.001`", ",", 
   "0.001`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",",
    "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`",
    ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", 
   "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", 
   ",", "0.0015`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.001`", ",", "0.001`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",",
    "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.0015`", ",", "0.001`", 
   ",", "0.001`", ",", "0.001`", ",", "0.001`", ",", "0.0015`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", 
   ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", 
   "0.0005`", ",", "0.0005`", ",", "0.0005`", ",", "0.0005`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9641873201678267`*^9, 3.964187327859621*^9}, {
  3.964187555567696*^9, 3.964187603162129*^9}},
 CellLabel->
  "Out[539]=",ExpressionUUID->"26211384-322e-47dd-98a2-a79bba2c355d"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.012121360532344805`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.011976191046715767`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{"-", "0.011976191046715767`"}], ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.011976191046715767`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", 
         RowBox[{"-", "0.011976191046715767`"}], ",", "0.`", ",", "0.`", ",", 
         "0.2632906193276219`", ",", "0.`", ",", "0.01834913866819654`", ",", 
         "0.01801850550267836`", ",", "0.`", ",", "0.026433257068155358`", 
         ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.008658062743114536`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.017094433359300165`", ",", "0.`", ",", 
         "0.008438868645864628`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.008368249670516636`", ",", "0.`", ",", "0.008298802814695083`", 
         ",", "0.`", ",", 
         RowBox[{"-", "0.008298802814695083`"}], ",", "0.024692612590371532`",
          ",", "0.0320027310861738`", ",", "0.007843177461025919`", ",", 
         "0.007782140442054941`", ",", "0.`", ",", "0.`", ",", 
         TemplateBox[{"10189"}, "OutputSizeLimit`Skeleton"], ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], Short[#, 8]& ], 
   "line" -> 540, "sessionID" -> 25504892548851930135, "byteCount" -> 82976, 
   "size" -> 8, "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.9641873201678267`*^9, 3.964187327859621*^9}, {
  3.964187555567696*^9, 3.9641876032274*^9}},
 CellLabel->
  "Out[540]=",ExpressionUUID->"35babf94-74f5-4611-b0fd-cf22b2ec2ec1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "35", ",", "40", ",", "77", ",", "78", ",", "99", ",", "279", ",", "332", ",",
    "336", ",", "337", ",", "343", ",", "351", ",", "352", ",", "364", ",", 
   "377", ",", "379", ",", "380", ",", "387", ",", "395", ",", "403", ",", 
   "427", ",", "428", ",", "429", ",", "430", ",", "431", ",", "433", ",", 
   "445", ",", "456", ",", "462", ",", "471", ",", "472", ",", "477", ",", 
   "484", ",", "485", ",", "486", ",", "487", ",", "489", ",", "490", ",", 
   "491", ",", "504", ",", "505", ",", "508", ",", "510", ",", "512", ",", 
   "523", ",", "527", ",", "528", ",", "531", ",", "540", ",", "543", ",", 
   "545", ",", "546", ",", "547", ",", "553", ",", "554", ",", "556", ",", 
   "561", ",", "562", ",", "565", ",", "566", ",", "567", ",", "573", ",", 
   "577", ",", "580", ",", "581", ",", "582", ",", "583", ",", "584", ",", 
   "585", ",", "586", ",", "590", ",", "594", ",", "595", ",", "603", ",", 
   "605", ",", "606", ",", "608", ",", "613", ",", "615", ",", "616", ",", 
   "618", ",", "621", ",", "622", ",", "624", ",", "629", ",", "638", ",", 
   "640", ",", "641", ",", "643", ",", "644", ",", "653", ",", "654", ",", 
   "655", ",", "670", ",", "671", ",", "675", ",", "682", ",", "717", ",", 
   "719", ",", "723", ",", "725", ",", "729", ",", "732", ",", "741", ",", 
   "742", ",", "749", ",", "751", ",", "752", ",", "784", ",", "785", ",", 
   "806", ",", "837", ",", "846", ",", "879", ",", "890", ",", "891", ",", 
   "906", ",", "908", ",", "909", ",", "915", ",", "916", ",", "918", ",", 
   "922", ",", "923", ",", "925", ",", "932", ",", "933", ",", "934", ",", 
   "935", ",", "937", ",", "938", ",", "939", ",", "943", ",", "944", ",", 
   "953", ",", "961", ",", "966", ",", "972", ",", "980", ",", "987", ",", 
   "992", ",", "993", ",", "995", ",", "1001", ",", "1066", ",", "1078", ",", 
   "1091", ",", "1105", ",", "1106", ",", "1130", ",", "1217", ",", "1221", ",",
    "1222", ",", "1223", ",", "1231", ",", "1232", ",", "1234", ",", "1266", ",",
    "1271", ",", "1279", ",", "1285", ",", "1289", ",", "1290", ",", "1291", ",",
    "1295", ",", "1304", ",", "1312", ",", "1313", ",", "1315", ",", "1317", ",",
    "1318", ",", "1319", ",", "1320", ",", "1323", ",", "1326", ",", "1327", ",",
    "1328", ",", "1329", ",", "1330", ",", "1331", ",", "1332", ",", "1334", ",",
    "1335", ",", "1340", ",", "1341", ",", "1379", ",", "1391", ",", "1392", ",",
    "1393", ",", "1394", ",", "1395", ",", "1396", ",", "1397", ",", "1399", ",",
    "1402", ",", "1403", ",", "1406", ",", "1415", ",", "1420", ",", "1421", ",",
    "1422", ",", "1424", ",", "1425", ",", "1433", ",", "1439", ",", "1450", ",",
    "1461", ",", "1496", ",", "1499", ",", "1500", ",", "1508", ",", "1513", ",",
    "1520", ",", "1522", ",", "1523", ",", "1528", ",", "1529", ",", "1530", ",",
    "1532", ",", "1534", ",", "1535", ",", "1536", ",", "1543", ",", "1554", ",",
    "1555", ",", "1562", ",", "1563", ",", "1565", ",", "1566", ",", "1567", ",",
    "1569", ",", "1570", ",", "1573", ",", "1581", ",", "1582", ",", "1584", ",",
    "1585", ",", "1586", ",", "1592", ",", "1593", ",", "1595", ",", "1596", ",",
    "1599", ",", "1603", ",", "1613", ",", "1620", ",", "1627", ",", "1633", ",",
    "1673", ",", "1678", ",", "1694", ",", "1696", ",", "1697", ",", "1720", ",",
    "1727", ",", "1729", ",", "1732", ",", "1746", ",", "1748", ",", "1763", ",",
    "1764", ",", "1765", ",", "1799", ",", "1816", ",", "1817", ",", "1818", ",",
    "1831", ",", "1838", ",", "1858", ",", "1859", ",", "1861", ",", "1864", ",",
    "1866", ",", "1867", ",", "1868", ",", "1870", ",", "1871", ",", "1873", ",",
    "1874", ",", "1875", ",", "1884", ",", "1891", ",", "1903", ",", "1904", ",",
    "1905", ",", "1910", ",", "1911", ",", "1916", ",", "1917", ",", "1919", ",",
    "1920", ",", "1932", ",", "1933", ",", "1934", ",", "1935", ",", "1936", ",",
    "1937", ",", "1938", ",", "1941", ",", "1944", ",", "1946", ",", "1947", ",",
    "1964", ",", "1965", ",", "1968", ",", "1969", ",", "1972", ",", "1975", ",",
    "1976", ",", "1977", ",", "1991", ",", "1994", ",", "2010", ",", "2011", ",",
    "2013", ",", "2014", ",", "2015", ",", "2016", ",", "2020", ",", "2023", ",",
    "2041", ",", "2047", ",", "2060", ",", "2085", ",", "2089", ",", "2090", ",",
    "2092", ",", "2099", ",", "2100", ",", "2103", ",", "2104", ",", "2106", ",",
    "2110", ",", "2111", ",", "2113", ",", "2121", ",", "2135", ",", "2138", ",",
    "2146", ",", "2147", ",", "2149", ",", "2151", ",", "2152", ",", "2155", ",",
    "2157", ",", "2161", ",", "2168", ",", "2169", ",", "2173", ",", "2174", ",",
    "2175", ",", "2180", ",", "2184", ",", "2185", ",", "2189", ",", "2190", ",",
    "2191", ",", "2193", ",", "2195", ",", "2199", ",", "2208", ",", "2215", ",",
    "2221", ",", "2225", ",", "2232", ",", "2240", ",", "2241", ",", "2243", ",",
    "2244", ",", "2245", ",", "2246", ",", "2247", ",", "2248", ",", "2249", ",",
    "2251", ",", "2252", ",", "2255", ",", "2256", ",", "2259", ",", "2262", ",",
    "2266", ",", "2267", ",", "2270", ",", "2271", ",", "2272", ",", "2273", ",",
    "2274", ",", "2276", ",", "2277", ",", "2278", ",", "2279", ",", "2281", ",",
    "2282", ",", "2286", ",", "2293", ",", "2305", ",", "2306", ",", "2309", ",",
    "2313", ",", "2321", ",", "2323", ",", "2324", ",", "2325", ",", "2328", ",",
    "2331", ",", "2332", ",", "2355", ",", "2356", ",", "2357", ",", "2363", ",",
    "2366", ",", "2367", ",", "2368", ",", "2369", ",", "2370", ",", "2371", ",",
    "2372", ",", "2373", ",", "2389", ",", "2391", ",", "2395", ",", "2396", ",",
    "2397", ",", "2398", ",", "2402", ",", "2406", ",", "2410", ",", "2416", ",",
    "2424", ",", "2428", ",", "2429", ",", "2432", ",", "2434", ",", "2436", ",",
    "2437", ",", "2439", ",", "2440", ",", "2443", ",", "2445", ",", "2446", ",",
    "2448", ",", "2449", ",", "2450", ",", "2451", ",", "2452", ",", "2455", ",",
    "2456", ",", "2464", ",", "2465", ",", "2468", ",", "2471", ",", "2472", ",",
    "2473", ",", "2475", ",", "2480", ",", "2484", ",", "2488", ",", "2489", ",",
    "2491", ",", "2495", ",", "2497", ",", "2498", ",", "2499", ",", "2501", ",",
    "2505", ",", "2515", ",", "2531", ",", "2532", ",", "2550", ",", "2562", ",",
    "2564", ",", "2570", ",", "2572", ",", "2574", ",", "2578", ",", "2588", ",",
    "2609", ",", "2612", ",", "2613", ",", "2620", ",", "2621", ",", "2633", ",",
    "2647", ",", "2649", ",", "2658", ",", "2659", ",", "2660", ",", "2666", ",",
    "2667", ",", "2671", ",", "2685", ",", "2697", ",", "2708", ",", "2712", ",",
    "2715", ",", "2718", ",", "2720", ",", "2757", ",", "2760", ",", "2785", ",",
    "2787", ",", "2789", ",", "2806", ",", "2808", ",", "2810", ",", "2817", ",",
    "2819", ",", "2823", ",", "2827", ",", "2834", ",", "2837", ",", "2838", ",",
    "2844", ",", "2845", ",", "2854", ",", "2861", ",", "2868", ",", "2869", ",",
    "2880", ",", "2893", ",", "2908", ",", "2915", ",", "2919", ",", "2943", ",",
    "2948", ",", "2977", ",", "2993", ",", "3026", ",", "3032", ",", "3055", ",",
    "3057", ",", "3109", ",", "3128", ",", "3133", ",", "3141", ",", "3142", ",",
    "3160", ",", "3169", ",", "3182", ",", "3222", ",", "3227", ",", "3228", ",",
    "3229", ",", "3230", ",", "3231", ",", "3242", ",", "3244", ",", "3272", ",",
    "3277", ",", "3279", ",", "3316", ",", "3340", ",", "3387", ",", "3388", ",",
    "3408", ",", "3409", ",", "3410", ",", "3411", ",", "3416", ",", "3432", ",",
    "3435", ",", "3436", ",", "3444", ",", "3456", ",", "3484", ",", "3487", ",",
    "3488", ",", "3494", ",", "3516", ",", "3524", ",", "3525", ",", "3526", ",",
    "3544", ",", "3550", ",", "3551", ",", "3552", ",", "3554", ",", "3604", ",",
    "3657", ",", "3658", ",", "3674", ",", "3675", ",", "3678", ",", "3694", ",",
    "3695", ",", "3718", ",", "3723", ",", "3732", ",", "3734", ",", "3740", ",",
    "3744", ",", "3752", ",", "3764", ",", "3767", ",", "3769", ",", "3837", ",",
    "3840", ",", "3853", ",", "3856", ",", "3859", ",", "3862", ",", "3863", ",",
    "3866", ",", "3878", ",", "3885", ",", "3891", ",", "3893", ",", "3902", ",",
    "3903", ",", "3907", ",", "3920", ",", "3935", ",", "3942", ",", "3946", ",",
    "3970", ",", "3975", ",", "4004", ",", "4020", ",", "4053", ",", "4059", ",",
    "4082", ",", "4084", ",", "4136", ",", "4155", ",", "4160", ",", "4168", ",",
    "4169", ",", "4187", ",", "4196", ",", "4209", ",", "4249", ",", "4254", ",",
    "4255", ",", "4256", ",", "4257", ",", "4258", ",", "4269", ",", "4271", ",",
    "4299", ",", "4304", ",", "4306", ",", "4343", ",", "4367", ",", "4414", ",",
    "4415", ",", "4435", ",", "4436", ",", "4437", ",", "4438", ",", "4443", ",",
    "4459", ",", "4462", ",", "4463", ",", "4471", ",", "4483", ",", "4511", ",",
    "4514", ",", "4515", ",", "4521", ",", "4543", ",", "4551", ",", "4552", ",",
    "4553", ",", "4571", ",", "4577", ",", "4578", ",", "4579", ",", "4581", ",",
    "4631", ",", "4684", ",", "4685", ",", "4701", ",", "4702", ",", "4705", ",",
    "4721", ",", "4722", ",", "4745", ",", "4750", ",", "4759", ",", "4761", ",",
    "4767", ",", "4771", ",", "4779", ",", "4791", ",", "4794", ",", "4796", ",",
    "4864", ",", "4867", ",", "4880", ",", "4883", ",", "4886", ",", "4889", ",",
    "4890", ",", "4893", ",", "4905", ",", "4912", ",", "4918", ",", "4920", ",",
    "4929", ",", "4930", ",", "4938", ",", "4939", ",", "4940", ",", "4949", ",",
    "4952", ",", "4957", ",", "4958", ",", "4959", ",", "4960", ",", "4970", ",",
    "4971", ",", "4972", ",", "4973", ",", "4978", ",", "4985", ",", "4988", ",",
    "5000", ",", "5012", ",", "5017", ",", "5024", ",", "5034", ",", "5039", ",",
    "5044", ",", "5054", ",", "5055", ",", "5073", ",", "5091", ",", "5094", ",",
    "5199", ",", "5212", ",", "5213", ",", "5214", ",", "5216", ",", "5221", ",",
    "5228", ",", "5241", ",", "5244", ",", "5245", ",", "5252", ",", "5277", ",",
    "5278", ",", "5279", ",", "5281", ",", "5284", ",", "5286", ",", "5299", ",",
    "5301", ",", "5302", ",", "5306", ",", "5308", ",", "5313", ",", "5324", ",",
    "5343", ",", "5344", ",", "5345", ",", "5350", ",", "5354", ",", "5355", ",",
    "5358", ",", "5375", ",", "5387", ",", "5390", ",", "5391", ",", "5409", ",",
    "5411", ",", "5412", ",", "5413", ",", "5418", ",", "5424", ",", "5425", ",",
    "5431", ",", "5432", ",", "5439", ",", "5453", ",", "5455", ",", "5492", ",",
    "5493", ",", "5502", ",", "5512", ",", "5519", ",", "5522", ",", "5553", ",",
    "5555", ",", "5596", ",", "5597", ",", "5601", ",", "5608", ",", "5644", ",",
    "5657", ",", "5665", ",", "5692", ",", "5693", ",", "5694", ",", "5716", ",",
    "5722", ",", "5723", ",", "5750", ",", "5762", ",", "5771", ",", "5784", ",",
    "5786", ",", "5789", ",", "5799", ",", "5800", ",", "5804", ",", "5817", ",",
    "5840", ",", "5865", ",", "5867", ",", "5869", ",", "5875", ",", "5893", ",",
    "5896", ",", "5899", ",", "5904", ",", "5905", ",", "5911", ",", "5912", ",",
    "5914", ",", "5915", ",", "5916", ",", "5918", ",", "5919", ",", "5920", ",",
    "5923", ",", "5926", ",", "5928", ",", "5929", ",", "5930", ",", "5933", ",",
    "5934", ",", "5936", ",", "5938", ",", "5940", ",", "5945", ",", "5948", ",",
    "5949", ",", "5951", ",", "5952", ",", "5953", ",", "5954", ",", "5955", ",",
    "5956", ",", "5957", ",", "5958", ",", "5959", ",", "5960", ",", "5961", ",",
    "5962", ",", "5963", ",", "5964", ",", "5966", ",", "5967", ",", "5968", ",",
    "5970", ",", "5971", ",", "5972", ",", "5974", ",", "5975", ",", "5976", ",",
    "5977", ",", "5978", ",", "5979", ",", "5980", ",", "5981", ",", "5982", ",",
    "5983", ",", "5984", ",", "5986", ",", "5987", ",", "5989", ",", "5991", ",",
    "5992", ",", "5993", ",", "5997", ",", "5998", ",", "5999", ",", "6000", ",",
    "6001", ",", "6003", ",", "6004", ",", "6005", ",", "6006", ",", "6007", ",",
    "6008", ",", "6010", ",", "6011", ",", "6012", ",", "6022", ",", "6023", ",",
    "6025", ",", "6026", ",", "6027", ",", "6028", ",", "6029", ",", "6030", ",",
    "6031", ",", "6033", ",", "6036", ",", "6037", ",", "6038", ",", "6039", ",",
    "6040", ",", "6041", ",", "6042", ",", "6045", ",", "6047", ",", "6048", ",",
    "6049", ",", "6050", ",", "6051", ",", "6056", ",", "6057", ",", "6058", ",",
    "6059", ",", "6061", ",", "6065", ",", "6066", ",", "6067", ",", "6068", ",",
    "6070", ",", "6071", ",", "6072", ",", "6073", ",", "6075", ",", "6076", ",",
    "6078", ",", "6080", ",", "6081", ",", "6082", ",", "6083", ",", "6084", ",",
    "6085", ",", "6086", ",", "6087", ",", "6089", ",", "6091", ",", "6092", ",",
    "6095", ",", "6098", ",", "6100", ",", "6101", ",", "6103", ",", "6112", ",",
    "6124", ",", "6125", ",", "6129", ",", "6132", ",", "6134", ",", "6136", ",",
    "6137", ",", "6140", ",", "6142", ",", "6149", ",", "6151", ",", "6152", ",",
    "6156", ",", "6160", ",", "6167", ",", "6173", ",", "6176", ",", "6177", ",",
    "6178", ",", "6180", ",", "6181", ",", "6182", ",", "6184", ",", "6185", ",",
    "6186", ",", "6187", ",", "6188", ",", "6190", ",", "6191", ",", "6192", ",",
    "6193", ",", "6194", ",", "6198", ",", "6199", ",", "6200", ",", "6201", ",",
    "6202", ",", "6203", ",", "6204", ",", "6207", ",", "6208", ",", "6213", ",",
    "6214", ",", "6215", ",", "6216", ",", "6218", ",", "6219", ",", "6222", ",",
    "6223", ",", "6224", ",", "6225", ",", "6227", ",", "6229", ",", "6231", ",",
    "6232", ",", "6233", ",", "6235", ",", "6236", ",", "6238", ",", "6239", ",",
    "6242", ",", "6246", ",", "6247", ",", "6249", ",", "6251", ",", "6252", ",",
    "6253", ",", "6254", ",", "6255", ",", "6256", ",", "6261", ",", "6270", ",",
    "6271", ",", "6272", ",", "6276", ",", "6277", ",", "6278", ",", "6279", ",",
    "6282", ",", "6283", ",", "6286", ",", "6288", ",", "6289", ",", "6292", ",",
    "6293", ",", "6294", ",", "6295", ",", "6298", ",", "6299", ",", "6307", ",",
    "6310", ",", "6320", ",", "6321", ",", "6326", ",", "6327", ",", "6328", ",",
    "6329", ",", "6330", ",", "6331", ",", "6332", ",", "6333", ",", "6335", ",",
    "6342", ",", "6344", ",", "6349", ",", "6355", ",", "6357", ",", "6370", ",",
    "6372", ",", "6374", ",", "6378", ",", "6380", ",", "6381", ",", "6382", ",",
    "6387", ",", "6394", ",", "6396", ",", "6403", ",", "6406", ",", "6407", ",",
    "6410", ",", "6420", ",", "6422", ",", "6424", ",", "6426", ",", "6429", ",",
    "6430", ",", "6431", ",", "6432", ",", "6433", ",", "6434", ",", "6436", ",",
    "6439", ",", "6440", ",", "6441", ",", "6442", ",", "6449", ",", "6455", ",",
    "6457", ",", "6459", ",", "6461", ",", "6464", ",", "6469", ",", "6470", ",",
    "6471", ",", "6475", ",", "6476", ",", "6477", ",", "6480", ",", "6481", ",",
    "6483", ",", "6484", ",", "6485", ",", "6486", ",", "6487", ",", "6488", ",",
    "6493", ",", "6501", ",", "6502", ",", "6503", ",", "6504", ",", "6505", ",",
    "6510", ",", "6512", ",", "6513", ",", "6515", ",", "6516", ",", "6518", ",",
    "6520", ",", "6521", ",", "6522", ",", "6525", ",", "6526", ",", "6529", ",",
    "6533", ",", "6535", ",", "6536", ",", "6537", ",", "6538", ",", "6539", ",",
    "6542", ",", "6543", ",", "6544", ",", "6546", ",", "6547", ",", "6548", ",",
    "6549", ",", "6550", ",", "6551", ",", "6553", ",", "6555", ",", "6560", ",",
    "6561", ",", "6564", ",", "6568", ",", "6569", ",", "6579", ",", "6580", ",",
    "6583", ",", "6586", ",", "6590", ",", "6593", ",", "6594", ",", "6596", ",",
    "6599", ",", "6603", ",", "6604", ",", "6605", ",", "6608", ",", "6609", ",",
    "6612", ",", "6613", ",", "6615", ",", "6617", ",", "6620", ",", "6628", ",",
    "6631", ",", "6633", ",", "6639", ",", "6641", ",", "6647", ",", "6648", ",",
    "6651", ",", "6652", ",", "6657", ",", "6658", ",", "6666", ",", "6667", ",",
    "6669", ",", "6671", ",", "6674", ",", "6675", ",", "6676", ",", "6677", ",",
    "6678", ",", "6679", ",", "6680", ",", "6681", ",", "6683", ",", "6684", ",",
    "6685", ",", "6688", ",", "6690", ",", "6691", ",", "6694", ",", "6695", ",",
    "6696", ",", "6697", ",", "6698", ",", "6699", ",", "6700", ",", "6701", ",",
    "6703", ",", "6706", ",", "6707", ",", "6708", ",", "6715", ",", "6717", ",",
    "6721", ",", "6722", ",", "6723", ",", "6725", ",", "6726", ",", "6730", ",",
    "6738", ",", "6739", ",", "6743", ",", "6745", ",", "6747", ",", "6748", ",",
    "6750", ",", "6751", ",", "6763", ",", "6765", ",", "6767", ",", "6777", ",",
    "6781", ",", "6784", ",", "6787", ",", "6788", ",", "6790", ",", "6792", ",",
    "6795", ",", "6796", ",", "6798", ",", "6801", ",", "6802", ",", "6803", ",",
    "6804", ",", "6807", ",", "6808", ",", "6809", ",", "6813", ",", "6814", ",",
    "6815", ",", "6835", ",", "6836", ",", "6837", ",", "6839", ",", "6843", ",",
    "6852", ",", "6853", ",", "6861", ",", "6863", ",", "6864", ",", "6868", ",",
    "6869", ",", "6875", ",", "6878", ",", "6884", ",", "6885", ",", "6886", ",",
    "6888", ",", "6889", ",", "6892", ",", "6898", ",", "6899", ",", "6900", ",",
    "6901", ",", "6913", ",", "6926", ",", "6929", ",", "6931", ",", "6933", ",",
    "6944", ",", "6951", ",", "6957", ",", "6961", ",", "6971", ",", "6975", ",",
    "6979", ",", "6980", ",", "6983", ",", "6985", ",", "6991", ",", "7013", ",",
    "7023", ",", "7037", ",", "7040", ",", "7054", ",", "7058", ",", "7085", ",",
    "7087", ",", "7090", ",", "7096", ",", "7114", ",", "7115", ",", "7116", ",",
    "7117", ",", "7118", ",", "7143", ",", "7144", ",", "7146", ",", "7149", ",",
    "7185", ",", "7186", ",", "7187", ",", "7211", ",", "7215", ",", "7218", ",",
    "7219", ",", "7220", ",", "7221", ",", "7222", ",", "7226", ",", "7233", ",",
    "7234", ",", "7235", ",", "7236", ",", "7240", ",", "7241", ",", "7242", ",",
    "7243", ",", "7244", ",", "7250", ",", "7252", ",", "7256", ",", "7257", ",",
    "7259", ",", "7261", ",", "7262", ",", "7278", ",", "7284", ",", "7291", ",",
    "7297", ",", "7298", ",", "7299", ",", "7300", ",", "7304", ",", "7305", ",",
    "7306", ",", "7309", ",", "7310", ",", "7313", ",", "7315", ",", "7319", ",",
    "7324", ",", "7325", ",", "7329", ",", "7330", ",", "7331", ",", "7332", ",",
    "7334", ",", "7336", ",", "7340", ",", "7341", ",", "7342", ",", "7345", ",",
    "7346", ",", "7347", ",", "7348", ",", "7356", ",", "7357", ",", "7359", ",",
    "7372", ",", "7424", ",", "7427", ",", "7431", ",", "7432", ",", "7435", ",",
    "7452", ",", "7464", ",", "7467", ",", "7468", ",", "7486", ",", "7488", ",",
    "7489", ",", "7490", ",", "7495", ",", "7501", ",", "7502", ",", "7508", ",",
    "7509", ",", "7516", ",", "7530", ",", "7532", ",", "7569", ",", "7570", ",",
    "7579", ",", "7589", ",", "7596", ",", "7599", ",", "7630", ",", "7632", ",",
    "7673", ",", "7674", ",", "7678", ",", "7685", ",", "7721", ",", "7734", ",",
    "7742", ",", "7769", ",", "7770", ",", "7771", ",", "7793", ",", "7799", ",",
    "7800", ",", "7827", ",", "7839", ",", "7848", ",", "7861", ",", "7863", ",",
    "7866", ",", "7876", ",", "7877", ",", "7881", ",", "7894", ",", "7917", ",",
    "7942", ",", "7944", ",", "7946", ",", "7952", ",", "7970", ",", "7973", ",",
    "7976", ",", "7981", ",", "7982", ",", "7988", ",", "7989", ",", "7991", ",",
    "7992", ",", "7993", ",", "7995", ",", "7996", ",", "7997", ",", "8000", ",",
    "8003", ",", "8005", ",", "8006", ",", "8007", ",", "8010", ",", "8011", ",",
    "8013", ",", "8015", ",", "8017", ",", "8022", ",", "8025", ",", "8026", ",",
    "8028", ",", "8029", ",", "8030", ",", "8031", ",", "8032", ",", "8033", ",",
    "8034", ",", "8035", ",", "8036", ",", "8037", ",", "8038", ",", "8039", ",",
    "8040", ",", "8041", ",", "8043", ",", "8044", ",", "8045", ",", "8047", ",",
    "8048", ",", "8049", ",", "8051", ",", "8052", ",", "8053", ",", "8054", ",",
    "8055", ",", "8056", ",", "8057", ",", "8058", ",", "8059", ",", "8060", ",",
    "8061", ",", "8063", ",", "8064", ",", "8066", ",", "8068", ",", "8069", ",",
    "8070", ",", "8074", ",", "8075", ",", "8076", ",", "8077", ",", "8078", ",",
    "8080", ",", "8081", ",", "8082", ",", "8083", ",", "8084", ",", "8085", ",",
    "8087", ",", "8088", ",", "8089", ",", "8099", ",", "8100", ",", "8102", ",",
    "8103", ",", "8104", ",", "8105", ",", "8106", ",", "8107", ",", "8108", ",",
    "8110", ",", "8113", ",", "8114", ",", "8115", ",", "8116", ",", "8117", ",",
    "8118", ",", "8119", ",", "8122", ",", "8124", ",", "8125", ",", "8126", ",",
    "8127", ",", "8128", ",", "8133", ",", "8134", ",", "8135", ",", "8136", ",",
    "8138", ",", "8142", ",", "8143", ",", "8144", ",", "8145", ",", "8147", ",",
    "8148", ",", "8149", ",", "8150", ",", "8152", ",", "8153", ",", "8155", ",",
    "8157", ",", "8158", ",", "8159", ",", "8160", ",", "8161", ",", "8162", ",",
    "8163", ",", "8164", ",", "8166", ",", "8168", ",", "8169", ",", "8172", ",",
    "8175", ",", "8177", ",", "8178", ",", "8180", ",", "8189", ",", "8201", ",",
    "8202", ",", "8206", ",", "8209", ",", "8211", ",", "8213", ",", "8214", ",",
    "8217", ",", "8219", ",", "8226", ",", "8228", ",", "8229", ",", "8233", ",",
    "8237", ",", "8244", ",", "8250", ",", "8253", ",", "8254", ",", "8255", ",",
    "8257", ",", "8258", ",", "8259", ",", "8261", ",", "8262", ",", "8263", ",",
    "8264", ",", "8265", ",", "8267", ",", "8268", ",", "8269", ",", "8270", ",",
    "8271", ",", "8275", ",", "8276", ",", "8277", ",", "8278", ",", "8279", ",",
    "8280", ",", "8281", ",", "8284", ",", "8285", ",", "8290", ",", "8291", ",",
    "8292", ",", "8293", ",", "8295", ",", "8296", ",", "8299", ",", "8300", ",",
    "8301", ",", "8302", ",", "8304", ",", "8306", ",", "8308", ",", "8309", ",",
    "8310", ",", "8312", ",", "8313", ",", "8315", ",", "8316", ",", "8319", ",",
    "8323", ",", "8324", ",", "8326", ",", "8328", ",", "8329", ",", "8330", ",",
    "8331", ",", "8332", ",", "8333", ",", "8338", ",", "8347", ",", "8348", ",",
    "8349", ",", "8353", ",", "8354", ",", "8355", ",", "8356", ",", "8359", ",",
    "8360", ",", "8363", ",", "8365", ",", "8366", ",", "8369", ",", "8370", ",",
    "8371", ",", "8372", ",", "8375", ",", "8376", ",", "8384", ",", "8387", ",",
    "8397", ",", "8398", ",", "8403", ",", "8404", ",", "8405", ",", "8406", ",",
    "8407", ",", "8408", ",", "8409", ",", "8410", ",", "8412", ",", "8419", ",",
    "8421", ",", "8426", ",", "8432", ",", "8434", ",", "8447", ",", "8449", ",",
    "8451", ",", "8455", ",", "8457", ",", "8458", ",", "8459", ",", "8464", ",",
    "8471", ",", "8473", ",", "8480", ",", "8483", ",", "8484", ",", "8487", ",",
    "8497", ",", "8499", ",", "8501", ",", "8503", ",", "8506", ",", "8507", ",",
    "8508", ",", "8509", ",", "8510", ",", "8511", ",", "8513", ",", "8516", ",",
    "8517", ",", "8518", ",", "8519", ",", "8526", ",", "8532", ",", "8534", ",",
    "8536", ",", "8538", ",", "8541", ",", "8546", ",", "8547", ",", "8548", ",",
    "8552", ",", "8553", ",", "8554", ",", "8557", ",", "8558", ",", "8560", ",",
    "8561", ",", "8562", ",", "8563", ",", "8564", ",", "8565", ",", "8570", ",",
    "8578", ",", "8579", ",", "8580", ",", "8581", ",", "8582", ",", "8587", ",",
    "8589", ",", "8590", ",", "8592", ",", "8593", ",", "8595", ",", "8597", ",",
    "8598", ",", "8599", ",", "8602", ",", "8603", ",", "8606", ",", "8610", ",",
    "8612", ",", "8613", ",", "8614", ",", "8615", ",", "8616", ",", "8619", ",",
    "8620", ",", "8621", ",", "8623", ",", "8624", ",", "8625", ",", "8626", ",",
    "8627", ",", "8628", ",", "8630", ",", "8632", ",", "8637", ",", "8638", ",",
    "8641", ",", "8645", ",", "8646", ",", "8656", ",", "8657", ",", "8660", ",",
    "8663", ",", "8667", ",", "8670", ",", "8671", ",", "8673", ",", "8676", ",",
    "8680", ",", "8681", ",", "8682", ",", "8685", ",", "8686", ",", "8689", ",",
    "8690", ",", "8692", ",", "8694", ",", "8697", ",", "8705", ",", "8708", ",",
    "8710", ",", "8716", ",", "8718", ",", "8724", ",", "8725", ",", "8728", ",",
    "8729", ",", "8734", ",", "8735", ",", "8743", ",", "8744", ",", "8746", ",",
    "8748", ",", "8751", ",", "8752", ",", "8753", ",", "8754", ",", "8755", ",",
    "8756", ",", "8757", ",", "8758", ",", "8760", ",", "8761", ",", "8762", ",",
    "8765", ",", "8767", ",", "8768", ",", "8771", ",", "8772", ",", "8773", ",",
    "8774", ",", "8775", ",", "8776", ",", "8777", ",", "8778", ",", "8780", ",",
    "8783", ",", "8784", ",", "8785", ",", "8792", ",", "8794", ",", "8798", ",",
    "8799", ",", "8800", ",", "8802", ",", "8803", ",", "8807", ",", "8815", ",",
    "8816", ",", "8820", ",", "8822", ",", "8824", ",", "8825", ",", "8827", ",",
    "8828", ",", "8840", ",", "8842", ",", "8844", ",", "8854", ",", "8858", ",",
    "8861", ",", "8864", ",", "8865", ",", "8867", ",", "8869", ",", "8872", ",",
    "8873", ",", "8875", ",", "8878", ",", "8879", ",", "8880", ",", "8881", ",",
    "8884", ",", "8885", ",", "8886", ",", "8890", ",", "8891", ",", "8892", ",",
    "8912", ",", "8913", ",", "8914", ",", "8916", ",", "8920", ",", "8929", ",",
    "8930", ",", "8938", ",", "8940", ",", "8941", ",", "8945", ",", "8946", ",",
    "8952", ",", "8955", ",", "8961", ",", "8962", ",", "8963", ",", "8965", ",",
    "8966", ",", "8969", ",", "8975", ",", "8976", ",", "8977", ",", "8978", ",",
    "8990", ",", "9003", ",", "9006", ",", "9008", ",", "9010", ",", "9021", ",",
    "9028", ",", "9034", ",", "9038", ",", "9048", ",", "9052", ",", "9056", ",",
    "9057", ",", "9060", ",", "9062", ",", "9068", ",", "9090", ",", "9100", ",",
    "9114", ",", "9117", ",", "9131", ",", "9135", ",", "9162", ",", "9164", ",",
    "9167", ",", "9173", ",", "9191", ",", "9192", ",", "9193", ",", "9194", ",",
    "9195", ",", "9220", ",", "9221", ",", "9223", ",", "9226", ",", "9262", ",",
    "9263", ",", "9264", ",", "9288", ",", "9292", ",", "9295", ",", "9296", ",",
    "9297", ",", "9298", ",", "9299", ",", "9303", ",", "9310", ",", "9311", ",",
    "9312", ",", "9313", ",", "9317", ",", "9318", ",", "9319", ",", "9320", ",",
    "9321", ",", "9327", ",", "9329", ",", "9333", ",", "9334", ",", "9336", ",",
    "9338", ",", "9339", ",", "9355", ",", "9361", ",", "9368", ",", "9374", ",",
    "9375", ",", "9376", ",", "9377", ",", "9381", ",", "9382", ",", "9383", ",",
    "9386", ",", "9387", ",", "9390", ",", "9392", ",", "9396", ",", "9401", ",",
    "9402", ",", "9406", ",", "9407", ",", "9408", ",", "9409", ",", "9411", ",",
    "9413", ",", "9417", ",", "9418", ",", "9419", ",", "9422", ",", "9423", ",",
    "9424", ",", "9425", ",", "9433", ",", "9434", ",", "9436", ",", "9449", ",",
    "9521", ",", "9529", ",", "9555", ",", "9559", ",", "9569", ",", "9570", ",",
    "9571", ",", "9574", ",", "9575", ",", "9576", ",", "9583", ",", "9584", ",",
    "9585", ",", "9586", ",", "9587", ",", "9589", ",", "9591", ",", "9602", ",",
    "9608", ",", "9609", ",", "9612", ",", "9613", ",", "9614", ",", "9617", ",",
    "9622", ",", "9623", ",", "9630", ",", "9638", ",", "9639", ",", "9654", ",",
    "9655", ",", "9668", ",", "9669", ",", "9672", ",", "9673", ",", "9717", ",",
    "9723", ",", "9725", ",", "9727", ",", "9741", ",", "9742", ",", "9746", ",",
    "9747", ",", "9753", ",", "9754", ",", "9770", ",", "9793", ",", "9802", ",",
    "9803", ",", "9808", ",", "9809", ",", "9811", ",", "9812", ",", "9813", ",",
    "9814", ",", "9815", ",", "9817", ",", "9818", ",", "9819", ",", "9820", ",",
    "9822", ",", "9823", ",", "9824", ",", "9826", ",", "9827", ",", "9828", ",",
    "9829", ",", "9830", ",", "9831", ",", "9839", ",", "9841", ",", "9842", ",",
    "9843", ",", "9845", ",", "9846", ",", "9847", ",", "9848", ",", "9849", ",",
    "9850", ",", "9851", ",", "9852", ",", "9853", ",", "9854", ",", "9855", ",",
    "9856", ",", "9858", ",", "9859", ",", "9861", ",", "9862", ",", "9864", ",",
    "9865", ",", "9866", ",", "9867", ",", "9868", ",", "9869", ",", "9870", ",",
    "9871", ",", "9874", ",", "9875", ",", "9876", ",", "9877", ",", "9878", ",",
    "9879", ",", "9881", ",", "9882", ",", "9883", ",", "9884", ",", "9885", ",",
    "9886", ",", "9887", ",", "9888", ",", "9889", ",", "9890", ",", "9896", ",",
    "9897", ",", "9898", ",", "9902", ",", "9904", ",", "9906", ",", "9910", ",",
    "9911", ",", "9912", ",", "9913", ",", "9915", ",", "9916", ",", "9920", ",",
    "9921", ",", "9922", ",", "9923", ",", "9925", ",", "9926", ",", "9927", ",",
    "9928", ",", "9929", ",", "9930", ",", "9931", ",", "9933", ",", "9934", ",",
    "9936", ",", "9941", ",", "9942", ",", "9943", ",", "9945", ",", "9946", ",",
    "9948", ",", "9949", ",", "9950", ",", "9951", ",", "9953", ",", "9954", ",",
    "9957", ",", "9958", ",", "9963", ",", "9964", ",", "9965", ",", "9966", ",",
    "9967", ",", "9970", ",", "9972", ",", "9973", ",", "9975", ",", "9977", ",",
    "9978", ",", "9979", ",", "9981", ",", "9982", ",", "9984", ",", "9990", ",",
    "9991", ",", "9992", ",", "9993", ",", "9994", ",", "9995", ",", "9996", ",",
    "9999", ",", "10000", ",", "10001", ",", "10002", ",", "10003", ",", 
   "10005", ",", "10006", ",", "10009", ",", "10010", ",", "10011", ",", 
   "10013", ",", "10015", ",", "10016", ",", "10019", ",", "10020", ",", 
   "10021", ",", "10022", ",", "10024", ",", "10025", ",", "10026", ",", 
   "10027", ",", "10028", ",", "10029", ",", "10030", ",", "10031", ",", 
   "10032", ",", "10034", ",", "10035", ",", "10036", ",", "10037", ",", 
   "10040", ",", "10041", ",", "10042", ",", "10043", ",", "10044", ",", 
   "10047", ",", "10048", ",", "10050", ",", "10051", ",", "10052", ",", 
   "10053", ",", "10055", ",", "10056", ",", "10057", ",", "10066", ",", 
   "10069", ",", "10071", ",", "10072", ",", "10075", ",", "10076", ",", 
   "10078", ",", "10079", ",", "10087", ",", "10089", ",", "10091", ",", 
   "10093", ",", "10095", ",", "10097", ",", "10098", ",", "10099", ",", 
   "10100", ",", "10101", ",", "10102", ",", "10105", ",", "10106", ",", 
   "10107", ",", "10108", ",", "10109", ",", "10110", ",", "10112", ",", 
   "10113", ",", "10114", ",", "10115", ",", "10116", ",", "10117", ",", 
   "10118", ",", "10119", ",", "10120", ",", "10122", ",", "10124", ",", 
   "10125", ",", "10126", ",", "10127", ",", "10128", ",", "10129", ",", 
   "10131", ",", "10132", ",", "10134", ",", "10135", ",", "10137", ",", 
   "10138", ",", "10141", ",", "10142", ",", "10143", ",", "10145", ",", 
   "10147", ",", "10149", ",", "10150", ",", "10156", ",", "10158", ",", 
   "10160", ",", "10193", ",", "10196", ",", "10199", ",", "10222", ",", 
   "10224", ",", "10243", ",", "10246", ",", "10248", ",", "10255", ",", 
   "10259", ",", "10260"}], "}"}]], "Output",
 CellChangeTimes->{{3.9641873201678267`*^9, 3.964187327859621*^9}, {
  3.964187555567696*^9, 3.964187603240036*^9}},
 CellLabel->
  "Out[541]=",ExpressionUUID->"90948b1d-9f33-4342-b289-47f41323613e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{191, Automatic}, {19, Automatic}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (March 16, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"877bb921-c578-48a6-bfdf-8d72d2ea5418"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 6581, 191, 642, "Input",ExpressionUUID->"f601e7bc-b88d-4f9a-b312-ff3a520f5a7d"],
Cell[7160, 215, 130007, 2454, 619, "Output",ExpressionUUID->"3afcdb2a-959d-406f-b485-a7632f233994"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137204, 2674, 2992, 65, 192, "Input",ExpressionUUID->"cdaf2313-d3fd-4418-b5f2-681e3623dabc"],
Cell[140199, 2741, 230563, 3931, 381, "Output",ExpressionUUID->"93aa45a1-276a-429d-89f5-2dbb6c0bc27d"],
Cell[370765, 6674, 563, 9, 33, "Output",ExpressionUUID->"fa22ec0e-99a4-49a7-a986-0382e01e2e07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371365, 6688, 162, 3, 66, "Section",ExpressionUUID->"33b12cc9-e125-435f-92fb-5e453d2e6e4c"],
Cell[CellGroupData[{
Cell[371552, 6695, 1799, 48, 254, "Input",ExpressionUUID->"504bcb0d-a5c5-4181-bdff-55c5a3e31760"],
Cell[373354, 6745, 63532, 1165, 619, "Output",ExpressionUUID->"c499353a-1e2c-427e-9c38-124bf407be9c"],
Cell[436889, 7912, 134158, 2602, 592, "Output",ExpressionUUID->"336aa79a-e7e0-40a8-8a2b-e1d30240ed9f"],
Cell[571050, 10516, 160067, 2080, 8673, "Output",ExpressionUUID->"26211384-322e-47dd-98a2-a79bba2c355d"],
Cell[731120, 12598, 3345, 50, 125, "Output",ExpressionUUID->"35babf94-74f5-4611-b0fd-cf22b2ec2ec1"],
Cell[734468, 12650, 30969, 385, 1646, "Output",ExpressionUUID->"90948b1d-9f33-4342-b289-47f41323613e"]
}, Open  ]]
}, Open  ]]
}
]
*)

